<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Michael翔</title>
  
  <subtitle>因上努力，果上随缘！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://michael728.github.io/"/>
  <updated>2022-12-07T14:03:05.077Z</updated>
  <id>https://michael728.github.io/</id>
  
  <author>
    <name>Michael翔</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>保险常识</title>
    <link href="https://michael728.github.io/2022/12/04/life-insurance/"/>
    <id>https://michael728.github.io/2022/12/04/life-insurance/</id>
    <published>2022-12-04T13:55:08.000Z</published>
    <updated>2022-12-07T14:03:05.077Z</updated>
    
    <content type="html"><![CDATA[<h2 id="保险"><a href="#保险" class="headerlink" title="保险"></a>保险</h2><p>保险的作用：防患于未然，有力转移疾病和意外带来的经济风险，降低对家庭经济的压力。</p><p>保险分类：</p><ol><li>重疾险：确诊大病后，一次性赔付钱，比如保额买 50W，就能赔付 50W。</li><li>医疗险：只有去医院产生的医疗费用才能进行报销；</li><li>意外险：比如猝死等</li><li>寿险</li></ol><a id="more"></a><h3 id="概念："><a href="#概念：" class="headerlink" title="概念："></a>概念：</h3><p>社保：社会保险，社保即通常说的“五险”，内容有：</p><ol><li>养老保险：退休工资</li><li>医疗保险：医疗报销，大病统筹。当我们买药、看病、报销，提到的社保一般指「医疗保险」，也就是「医保」</li><li>失业保险：失业时可拿一定时间的失业救济金</li><li>工伤保险：失业时可拿一定时间的失业救济金</li><li>生育保险：女人可以在生产期间费用报销、领取补贴，男人生育结扎、生殖健康等享受费用报销和津贴<ul><li>医保：最基础的保障，”广覆盖、保基本“，报销额度和报销范围上有限制。社保目录范围内的药品才能报销，进口药、靶向药等高价药无法报销。</li><li>百万医疗险：对社保的补充，得了烧钱的大病，医保不报的特效药、高端器械及治疗手段，百万医疗险丢可以报销。</li></ul></li></ol><h3 id="术语"><a href="#术语" class="headerlink" title="术语"></a>术语</h3><ul><li>免赔额：不进行赔付的额度，比如”1万免赔额“，表示 1 万元以下，是由个人承担。个人支付累计超过 1 万元部分可以保险报销。</li><li>保额</li></ul><h3 id="购买策略？"><a href="#购买策略？" class="headerlink" title="购买策略？"></a>购买策略？</h3><ul><li>保费：不要超过家庭收入的 10%</li></ul><blockquote><p>最后提醒大家，一定要做好健康告知，否则会影响后续理赔哦。</p></blockquote><h2 id="重疾险"><a href="#重疾险" class="headerlink" title="重疾险"></a>重疾险</h2><h3 id="怎么挑选"><a href="#怎么挑选" class="headerlink" title="怎么挑选"></a>怎么挑选</h3><ul><li>保额：保额肯定越高越好，但是高保额的保费肯定就高，挑选自己能够负担的起的；</li><li>小公司的“长期重疾险”同样可靠——长期重疾险，在中国是强监管产品，保监会负责</li><li>建议优先投保定期重疾险</li><li>健康告知很重要：忽略健康告知，可能被拒赔</li></ul><p>”防坑指南“里给出的建议：</p><ol><li>不建议购买境内的<strong>终身重疾险</strong>，也不建议购买返还型的重疾险</li><li>境内消费型重疾险，推荐相互宝、1年期不保证续保重疾险或只保20年的定期重疾险</li></ol><h3 id="健康福·重疾险"><a href="#健康福·重疾险" class="headerlink" title="健康福·重疾险"></a>健康福·重疾险</h3><p>推荐该产品的理由：婴幼儿的定期重疾险，而且是长期重疾险，年保费只有几百元。</p><p>购买建议：保额买足，长期 20 年。</p><p><img src="https://raw.githubusercontent.com/Michael728/markdown_images/master/uPic/BhEvAP.png" alt="投保截图"></p><blockquote><p>这个产品仅是针对<strong>婴幼儿</strong>人群来推荐的，因为被投保人为成年人时，年保费就不仅仅是几百，而是上千了！</p></blockquote><p>婴幼儿闭坑指南:</p><ol><li>不要被“少儿专属”重疾险忽悠</li></ol><h2 id="医疗险"><a href="#医疗险" class="headerlink" title="医疗险"></a>医疗险</h2><h3 id="医保"><a href="#医保" class="headerlink" title="医保"></a>医保</h3><p>医疗保险：医疗报销，大病统筹。当我们买药、看病、报销，提到的社保一般指「医疗保险」，也就是「医保」，是社保”五险一金“中的一种保险。</p><ol><li>医保使用记录查询：支付宝搜索框搜”医保“，进入之后，点击”使用记录“。参考 <a href="http://hz.bendibao.com/live/20221115/134250.shtm" target="_blank" rel="noopener">杭州医保消费记录查询教程</a>.</li></ol><p>浙里办（支付宝搜索”浙里办“或者下载浙里办 APP），进入之后，搜索”浙里医保“，点击”医保账号“，可以查询：</p><ul><li>账户余额</li><li>参保状态</li><li>缴费记录</li><li>消费记录</li></ul><p>此外，浙里办这里的”浙里医保“还可以进行报销、家庭共济绑定、定点医院查询、药品目录查询、缴费证明</p><h3 id="百万医疗保险"><a href="#百万医疗保险" class="headerlink" title="百万医疗保险"></a>百万医疗保险</h3><p>没有纳入医保的自费药、特效药、靶向药、进口药等，全额报销。</p><h4 id="责任范围"><a href="#责任范围" class="headerlink" title="责任范围"></a>责任范围</h4><p>可以报销责任范围：</p><ul><li>重疾（大病）：恶性肿瘤等</li><li>疾病（小病）：阑尾炎、胃溃疡等</li><li>意外：交通事故、烧烫伤、狂犬疫苗、</li><li>门诊</li><li>互联网购药</li></ul><p>免责条款规定的情况不能报销，其他的病种均可申请报销。</p><p>不属于保障范围：</p><ul><li>生孩子</li><li>牙齿矫正</li><li>视力矫正</li><li>整容整形</li></ul><p>报销条件：<br>不住院的门诊手术、特殊门诊、住院前后60 天的门急诊。</p><h4 id="怎么挑选-1"><a href="#怎么挑选-1" class="headerlink" title="怎么挑选"></a>怎么挑选</h4><p>重点因素：</p><ul><li>保证续保期间：保证续保20年的意思，保障的20年期间发生过理赔，也能续保，停售也不影响20年的续保权益。</li><li>包含”院外购药“</li><li>院外靶向药是否可以报销</li><li>家庭单共享免赔额</li><li>家庭单折扣</li><li>投保年龄</li><li>费用垫付</li><li>报销门槛：选免赔额低或者能够家庭共享免赔额的</li></ul><blockquote><p>优选大公司的明星产品</p></blockquote><p>投保注意点：</p><ul><li>健康告知里没问到的既往症，可以不告知</li><li>保险合同的电子档保存好</li><li>一旦决定投保，建议长期续保</li><li>咨询阅读保险合同，尤其是<em>责任免除</em>部分</li><li>拉黑向你推荐投资功能保险的销售、经纪人或大V</li></ul><h4 id="太平洋保险-——-医享无忧"><a href="#太平洋保险-——-医享无忧" class="headerlink" title="太平洋保险 —— 医享无忧"></a>太平洋保险 —— 医享无忧</h4><p>2022 年的明星产品。</p><h3 id="泰康"><a href="#泰康" class="headerlink" title="泰康"></a>泰康</h3><h4 id="范围"><a href="#范围" class="headerlink" title="范围"></a>范围</h4><p>2 号多了：</p><ul><li>意外门诊</li><li>传染门诊</li><li></li></ul><h4 id="使用渠道"><a href="#使用渠道" class="headerlink" title="使用渠道"></a>使用渠道</h4><ul><li>APP：泰康在线</li><li>公众号：泰康在线保险</li></ul><h4 id="会员权益"><a href="#会员权益" class="headerlink" title="会员权益"></a>会员权益</h4><p>泰爱护·少儿百万医疗险：</p><ul><li>凯叔讲故事 VIP</li><li>远程问诊、送药上门</li></ul><h2 id="意外险"><a href="#意外险" class="headerlink" title="意外险"></a>意外险</h2><p>保障大小意外，看伤报销，身故/伤残拿一笔钱。</p><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><ul><li>保障大小意外，比如狗咬、烧烫伤、跌倒摔伤等</li><li>意外导致的身故、伤残，一次性赔付</li><li>报销意外导致的医疗费用</li></ul><h3 id="怎么挑选-2"><a href="#怎么挑选-2" class="headerlink" title="怎么挑选"></a>怎么挑选</h3><ul><li>保障期限：别买长期意外险，选 1 年期即可</li><li>加分项目：有疫苗接种意外保障、交通意外额外赔付</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;保险&quot;&gt;&lt;a href=&quot;#保险&quot; class=&quot;headerlink&quot; title=&quot;保险&quot;&gt;&lt;/a&gt;保险&lt;/h2&gt;&lt;p&gt;保险的作用：防患于未然，有力转移疾病和意外带来的经济风险，降低对家庭经济的压力。&lt;/p&gt;
&lt;p&gt;保险分类：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;重疾险：确诊大病后，一次性赔付钱，比如保额买 50W，就能赔付 50W。&lt;/li&gt;
&lt;li&gt;医疗险：只有去医院产生的医疗费用才能进行报销；&lt;/li&gt;
&lt;li&gt;意外险：比如猝死等&lt;/li&gt;
&lt;li&gt;寿险&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Life" scheme="https://michael728.github.io/categories/Life/"/>
    
    
      <category term="保险" scheme="https://michael728.github.io/tags/%E4%BF%9D%E9%99%A9/"/>
    
      <category term="保障" scheme="https://michael728.github.io/tags/%E4%BF%9D%E9%9A%9C/"/>
    
  </entry>
  
  <entry>
    <title>Notion使用教程笔记——标签tags功能</title>
    <link href="https://michael728.github.io/2021/10/31/note-notion-tags/"/>
    <id>https://michael728.github.io/2021/10/31/note-notion-tags/</id>
    <published>2021-10-31T14:23:04.000Z</published>
    <updated>2022-12-07T14:03:05.077Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/PxXmRB.png" alt="notion"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在学习了一些基础功能之后，想要在 notion 中也找到印象笔记中的那种标签的功能。因为感觉很难给文章分一个具体的类别，尤其是有时候一篇文章可能属于多种分类的场景。如果将分类分的太细，那么，将来可能就比较痛苦了。</p><p>标签功能的使用，就比较好的解决了上面的问题。一篇文章，只要给它划分到一个大类下，然后再给它贴上多个标签，那么，在将来我既可以看到大类下的文章，也可以按照标签去筛选出相关的文章。从而实现可以在多个维度的去查找过往的笔记内容。</p><a id="more"></a><h2 id="标签数据库"><a href="#标签数据库" class="headerlink" title="标签数据库"></a>标签数据库</h2><p>输入 <code>/database</code> 然后选择 <code>gallery inline</code> ，在这个页面可以创建若干个 page，我将每个 page 设置好名字，比如 Java，这里的 page 名称就是后面供其他文章使用的 <code>Tag</code>。我将这个 page 页称为「标签 page」，机智如我 yeah~</p><p>下面就是我创建的一个「标签 page」汇总的展示页 <code>databse</code> ：</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/rnlvil.png" alt="标签 page"></p><p>通过 <code>gallery inline</code> 的 database，我提前创建好相应的「标签 page」以供后续文章使用，展示形式还很美观、直观。</p><h2 id="链接标签-page"><a href="#链接标签-page" class="headerlink" title="链接标签 page"></a>链接标签 page</h2><p>使用 <code>@</code> 或者 <code>[[</code> 或者 <code>+</code> 都可以唤起输入框，这时候你输入已经建立好的 <code>databse</code> 中的标签就可以了。比如，我在我一篇文章中的属性里面，将 <code>tags</code> 类型设为 <code>text</code>，这样，我就可以在里面通过输入 <code>@</code> 搜索 <code>tech/java</code> 找到我创建好的标签页。</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/RkFR4c.png" alt="打标签"></p><p>经过上面的操作，这个文章就和之前创建好的「标签 page」关联好了。</p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>阅读对应打了标签的文章时，可以看到 Tags 后面的标签，如果点击，则会跳转到对应的标签 page。</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/L4TPV4.png" alt="效果"></p><p>同时，在这个标签页中，也可以看到哪些文章与这个标签 page相关联的。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://samuelspace.notion.site/Case4-7ea1b98809e64d2ab0892f7f890cf7e9" target="_blank" rel="noopener">Case4 - 打标签的两种用法</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://gitee.com/michael_xiang/images/raw/master/uPic/PxXmRB.png&quot; alt=&quot;notion&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在学习了一些基础功能之后，想要在 notion 中也找到印象笔记中的那种标签的功能。因为感觉很难给文章分一个具体的类别，尤其是有时候一篇文章可能属于多种分类的场景。如果将分类分的太细，那么，将来可能就比较痛苦了。&lt;/p&gt;
&lt;p&gt;标签功能的使用，就比较好的解决了上面的问题。一篇文章，只要给它划分到一个大类下，然后再给它贴上多个标签，那么，在将来我既可以看到大类下的文章，也可以按照标签去筛选出相关的文章。从而实现可以在多个维度的去查找过往的笔记内容。&lt;/p&gt;
    
    </summary>
    
      <category term="ToolsDaily" scheme="https://michael728.github.io/categories/ToolsDaily/"/>
    
    
      <category term="效率工具" scheme="https://michael728.github.io/tags/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>设计模式之——UML 类图学习</title>
    <link href="https://michael728.github.io/2021/10/20/design-pattern-uml/"/>
    <id>https://michael728.github.io/2021/10/20/design-pattern-uml/</id>
    <published>2021-10-20T23:25:50.000Z</published>
    <updated>2022-12-07T14:03:05.073Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>UML 图有很多种，一般掌握类图、用例图、时序图的使用，就能完成大部分的工作。其中，类图主要显示系统中的类、接口以及它们之间的静态结构和关系的一种静态模型。</p><h2 id="类的-UML-展示"><a href="#类的-UML-展示" class="headerlink" title="类的 UML 展示"></a>类的 UML 展示</h2><p>UML 类一般由三部分组成：</p><ol><li>类名</li><li>类的属性</li><li>类的操作</li></ol><p>一个具体类的示例：</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/XKmqHq.png" alt="具体类"></p><h3 id="抽象类、接口的表示法"><a href="#抽象类、接口的表示法" class="headerlink" title="抽象类、接口的表示法"></a>抽象类、接口的表示法</h3><ul><li>抽象类：类名以及抽象方法都用<strong>斜体字</strong>表示</li><li>接口：在类图中的第一层顶端用构造型<code>&lt;&lt;interface&gt;&gt;</code>表示，下面是接口的名字。此外，还有一种表示方法，就是类上面的一根棒棒糖（圆圈+实线），圆圈旁为接口名称。</li></ul><p>接口示例：</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/OCp5L0.png" alt="接口"></p><h3 id="类的属性"><a href="#类的属性" class="headerlink" title="类的属性"></a>类的属性</h3><p>属性表示方式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可见性 名称:类型[=默认值]</span><br></pre></td></tr></table></figure></p><h3 id="可见性"><a href="#可见性" class="headerlink" title="可见性"></a>可见性</h3><ul><li>public   : 用 <code>+</code> 表示</li><li>protected: 用 <code>#</code> 表示</li><li>defult   : 无符号表示</li><li>private  : 用 <code>-</code> 表示</li></ul><h3 id="类的操作-方法"><a href="#类的操作-方法" class="headerlink" title="类的操作/方法"></a>类的操作/方法</h3><p>操作表示方式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可见性 名称([参数列表])[:返回类型]</span><br></pre></td></tr></table></figure></p><p>其中：</p><ul><li>参数列表的表示，语法和属性的定义相似，参数个数是任意的，多个参数之间用 <code>,</code> 隔开</li><li>返回类型是一个可选项，可以是基本数据类型，也可以是用户自定义类型，还可以是空类型(void)。如果是构造方法，则无返回类型。</li></ul><h2 id="类之间的关系"><a href="#类之间的关系" class="headerlink" title="类之间的关系"></a>类之间的关系</h2><h3 id="关联关系-associtaion"><a href="#关联关系-associtaion" class="headerlink" title="关联关系 associtaion"></a>关联关系 associtaion</h3><p>用于表示一类对象与另一类对象之间有联系。在 Java 中，通常将一个类的对象作为另一个类的成员变量，比如汽车和轮胎。</p><p>在 UML 类图中，用<strong>直线</strong>连接有关联关系的对象所对应的类。</p><h4 id="双向关联"><a href="#双向关联" class="headerlink" title="双向关联"></a>双向关联</h4><p>关联关系默认不强调方向，表示对象之间互相知道。—— 两个类中，互相有对方类型的成员变量。</p><h4 id="单向关联"><a href="#单向关联" class="headerlink" title="单向关联"></a>单向关联</h4><p>如果特别强调方向，就加上<strong>箭头</strong>。比如是 A -&gt; B，则表示 A 知道 B，但 B 不知道 A。—— A 类中有 B 类型的成员变量，而 B 中则没有 A 类型的成员变量。</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/SzTvrz.png" alt="单向关联"></p><h4 id="自关联"><a href="#自关联" class="headerlink" title="自关联"></a>自关联</h4><p>类的属性对象类型为该类本身。比如。树节点的左右子节点的类型依然是树节点。</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/sRkoB3.png" alt="自关联"></p><h4 id="聚合关系-aggregation"><a href="#聚合关系-aggregation" class="headerlink" title="聚合关系(aggregation)"></a>聚合关系(aggregation)</h4><p><code>has a</code> 的关系，表示<strong>整体与部分</strong>的关系。成员对象是整体对象的一部分，但是成员对象可以脱离整体对象独立存在的。部分可以属于多个整体对象，也可以为多个整体对象共享，所以，聚合关系也称为共享关系。例如，公司部门与员工的关系，汽车和发动机的关系。在 UML 中，聚合关系用<strong>空心菱形的直线</strong>表示（空心菱形在整体的一方，箭头指向部分一方）。在代码实现聚合关系时，成员对象通常作为构造方法、Setter 方法或业务方法的参数<strong>注入</strong>到整体对象中。</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/VfhTgF.png" alt="聚合关系"></p><p>代码示例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span>  <span class="title">Car</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Engine e;</span><br><span class="line">    <span class="comment">// 构造注入</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Car</span><span class="params">(Engine e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.e = e;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设值注入</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEngine</span><span class="params">(Engine e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.e = e;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="组合关系-composition"><a href="#组合关系-composition" class="headerlink" title="组合关系(composition)"></a>组合关系(composition)</h4><p><code>contains a</code> 的关系，它同样也表示<strong>整体与部分</strong>的关系，但是组合关系中，整体对象可以控制成员变量的生命周期（皮之不存毛将焉附）。例如人的头和嘴巴。在 UML 中，组合关系用<strong>实心菱形的直线</strong>表示（实心菱形在整体的一方，箭头指向部分一方）。在代码实现组合关系时，通常在整体类的<strong>构造方法</strong>中，直接实例化成员类。</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/bX1PUx.png" alt="组合关系"></p><p><code>`</code>java<br>public class Head {<br>    private Mouth mouth;</p><pre><code>public Head() {    // 实例化成员类    mouth = new Mouth();}……</code></pre><p>}</p><h3 id="依赖关系-dependency"><a href="#依赖关系-dependency" class="headerlink" title="依赖关系 dependency"></a>依赖关系 dependency</h3><p>依赖关系是一种使用关系，在需要表示一个事物需要使用另一个事物时使用依赖关系。在大多数情况，依赖关系体现在某个类的方法使用另一个类的对象作为参数。</p><p>在 UML 中，依赖关系使用<strong>带箭头的虚线</strong>表示，由依赖的一方指向被依赖的一方。例如，驾驶员开车，在 Driver 类的 drive() 方法中，将 Car 类型的对象 car 作为一个参数传递，以便在 <code>drive()</code> 方法中能够调用 Car 类的 <code>move()</code>方法，且驾驶员的 <code>drive()</code> 方法依赖车的 <code>move()</code> 方法，因此类 Driver 依赖类 Car</p><p>实际系统开发阶段，依赖关系通常有 3 种方式来实现：</p><ol><li>最常见的就是将一个类的对象作为另一个类中方法的参数</li><li>在一个类的方法中将另一个类的对象作为其<strong>局部变量</strong></li><li>在一个类的方法中调用另一个类的静态方法</li></ol><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/lIwsom.png" alt="依赖"></p><h3 id="泛化关系-generalization"><a href="#泛化关系-generalization" class="headerlink" title="泛化关系 generalization"></a>泛化关系 generalization</h3><p>泛化关系也就是<strong>继承</strong>关系，用于描述父类和子类之间的关系，其中，父类又被称为基类或超类。如果对象 A 和对象 B 之间的 <code>is a</code> 关系成立，那么二者之间就存在继承关系。例如，一个年薪制员工 <code>is a</code> 员工，那么，年薪制员工 Salary 对象和员工 Employee 对象之间存在继承关系，Employee 是父对象，Salary 对象是子对象。</p><p>在 UML 中，泛化关系用带<strong>空心三角形的直线</strong>来表示。</p><p>在代码实现时，使用面向对象的继承机制来实现<strong>泛化关系</strong>。Java 语言中使用 <code>extends</code> 关键字来实现继承。例如，Student 类和 Teacher 类都是 Person 的子类。</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/wqCpMA.png" alt="继承"></p><h3 id="接口与实现关系-realization"><a href="#接口与实现关系-realization" class="headerlink" title="接口与实现关系 realization"></a>接口与实现关系 realization</h3><p>在接口中，通常没有属性，而且，所有的操作都是抽象的，只有操作的声明，没有操作的实现(Java 8 开始，接口里面可以使用 default 关键字给方法增加操作的实现)。</p><p>接口之间也可以有与类之间关系的继承关系和依赖关系，但是，接口和类之间还存在一种<strong>实现关系</strong>。</p><p>在 UML 中，类与接口之间的实现关系用<strong>空心三角形的虚线</strong>来表示。例如，定义了一个交通工具接口 Vehicle，包含一个抽象操作 <code>move()</code>，在类 Ship 和 Car 中，都实现了该 <code>move()</code> 操作。在 Java 语言中，使用 <code>implements</code> 关键字。</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/ZdH1lR.png" alt="接口与实现"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/tlTV5u.png" alt="类图中的关系"></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://design-patterns.readthedocs.io/zh_CN/latest/read_uml.html" target="_blank" rel="noopener">看懂UML类图和时序图</a></li><li><a href="https://zhuanlan.zhihu.com/p/109655171?utm_source=pocket_mylist" target="_blank" rel="noopener">知乎/30分钟学会UML类图</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;UML 图有很多种，一般掌握类图、用例图、时序图的使用，就能完成大部分的工作。其中，类图主要显示系统中的类、接口以及它们之间的静态结构和关系
      
    
    </summary>
    
      <category term="设计模式" scheme="https://michael728.github.io/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="设计模式" scheme="https://michael728.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>儿童营养&amp;喂养基础知识</title>
    <link href="https://michael728.github.io/2021/08/22/life-jibao-yingyang/"/>
    <id>https://michael728.github.io/2021/08/22/life-jibao-yingyang/</id>
    <published>2021-08-22T13:55:08.000Z</published>
    <updated>2022-12-07T14:03:05.077Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>同事之前发我一个视频，是公司邀请的广州市妇女儿童医疗中心儿童营养科主任医师针对儿童营养&amp;喂养基础知识进行的分享。本文就是利用午休时间断断续续看完记录的笔记。</p><h2 id="身高相关"><a href="#身高相关" class="headerlink" title="身高相关"></a>身高相关</h2><h3 id="遗传靶向身高"><a href="#遗传靶向身高" class="headerlink" title="遗传靶向身高"></a>遗传靶向身高</h3><p>遗传靶身高有两种推算方式：</p><ul><li>计算方式 CMH：<ul><li>男孩=（父亲身高+母亲身高）/2+6.5cm</li><li>女孩=（父亲身高+母亲身高）/2-6.5cm</li></ul></li><li>计算方式 FPH：<ul><li>男孩=45.99+0.78*（父身高+母身高）/2±5.29cm</li><li>女孩=37.85+0.75*（父身高+母身高）/2±5.29cm</li></ul></li></ul><p>根据 CMH 方式推算，吉宝的遗传靶向身高在 165 cm，如果根据 FPH 方式进行推算，她的靶向身高将在 161.185~171.765 cm 范围。</p><h3 id="骨龄"><a href="#骨龄" class="headerlink" title="骨龄"></a>骨龄</h3><p>骨龄（Bone age），即骨骼年龄，通常要拍摄人左手手腕部的X光片，医生通过X光片观察左手掌指骨、腕骨及桡尺骨下端的骨化中心的发育程度，来确定骨龄。相较于年龄，骨龄更能准确反映出孩子的骨成熟度，是评价儿童生长发育情况的核心指标。</p><p>骨龄检测建议1年1次，骨龄不要超前，也不要滞后太多，-1 &lt; 骨龄-生活年龄 &lt;= 1 属于一个正常范围。</p><ul><li>骨龄 - 生活年龄 &gt; 2 岁：应该排查早熟等引起骨龄提前的遗传内分泌疾病的可能</li><li>骨龄 - 生活年龄 &gt; -2 岁：应排查生长激素缺乏、甲状腺问题等可能引起骨龄落后的遗传、内分泌疾病。</li></ul><p>骨龄成熟比实际年龄大于1岁，就被认为是骨龄成熟较早，这些孩子身高比同龄孩子要高，但是骨骺将会提前闭合，长高潜力反而不大，最终身高可能不理想！</p><p>举个例子，比如9岁的孩子，骨龄在8.5岁，他超过同龄孩子身高的机会就更大一些。而如果骨龄是在10岁，他的骨龄比实际年龄要大，后期超过其他孩子身高的可能性就较小。</p><h4 id="如何监测骨龄"><a href="#如何监测骨龄" class="headerlink" title="如何监测骨龄"></a>如何监测骨龄</h4><p>骨龄的检查方法为：将左手手掌平放在检查台，照射低辐射剂量X光，取得清晰的手掌、手腕与远端尺骨、桡骨影像，再由儿童内分泌科医生做专业诊断。</p><p>手部属于肢体末端，避开了脑部、甲状腺和性腺等关键部位，一般拍骨龄片的照射时间很短，辐射量对人体的伤害可忽略不计。</p><h4 id="骨龄检查的作用"><a href="#骨龄检查的作用" class="headerlink" title="骨龄检查的作用"></a>骨龄检查的作用</h4><p>骨龄检查是初步诊断儿童生长发育相关疾患与特定内分泌疾患的一项重要依据，如：身材矮小、身高过高、生长迟缓、性早熟、性晚熟、生长激素缺乏等，所以儿童内分泌科医生常会用骨龄检查作为诊断参考。</p><h4 id="骨龄超前或落后的原因"><a href="#骨龄超前或落后的原因" class="headerlink" title="骨龄超前或落后的原因"></a>骨龄超前或落后的原因</h4><p>引起孩子早发育的原因较多，个体遗传、疾病、环境中的污染物质、与性相关的药物或化妆品、反季节蔬果、过早接触成人媒体画面等都会引起早发育，导致骨龄超前。在日常生活中，家长应注意避免孩子过早接触易引起早发育的因素。</p><ul><li>造成骨龄超前的常见原因有：青春期发育、肥胖、遗传、环境荷尔蒙的暴露、甲状腺亢进等。</li><li>导致骨龄落后的常见原因有：营养不良、体质性生长迟缓、甲状腺功能低下、特殊药物使用等。</li></ul><p>骨龄超前不等于性早熟，关于性早熟，可以阅读<a href="https://wwwv.tsgh.ndmctsgh.edu.tw/unit/10007/24404" target="_blank" rel="noopener">三军总医院儿童内分泌科/卫教资讯-性早熟</a></p><h4 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h4><ul><li>青春期前：身高水平良好，每年监测一次</li><li>青春期：身高水平良好，没半年监测一次</li></ul><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="http://www.tjorthop.org/ReceptionArea/Common/Content?mid=16&amp;n=31752" target="_blank" rel="noopener">天津医院/骨龄对于孩子的生长发育为何如此重要？</a></li></ul><h2 id="体重"><a href="#体重" class="headerlink" title="体重"></a>体重</h2><ul><li>1~6个月：出生体重+月龄*0.7 —— 吉宝 6 月份目标体重：7.33 kg</li><li>7~24个月：出生体重+6<em>0.7+(月龄-6)</em>0.5 —— 吉宝 2 岁时，体重 16.33 kg;</li><li>2~12岁：增长 2kg/年</li></ul><h2 id="营养指导"><a href="#营养指导" class="headerlink" title="营养指导"></a>营养指导</h2><h3 id="身高促进"><a href="#身高促进" class="headerlink" title="身高促进"></a>身高促进</h3><ul><li>疾病预防</li><li>合理营养</li><li>适当运动</li><li>愉快心情</li><li>充足睡眠</li></ul><h3 id="营养不良原因"><a href="#营养不良原因" class="headerlink" title="营养不良原因"></a>营养不良原因</h3><p>坏的喂养习惯：</p><ul><li>8个月添加糊状食物：辅食添加晚了，6个月就要开始添加糊状食物</li><li>边吃边玩</li><li>靠家长唱歌、跳舞吸引吃饭</li><li>一餐饭要 60 分钟</li></ul><p>讨厌的喂养行为：</p><ul><li>唱歌等</li><li>第一口还没吞下去又塞第二口</li><li>边喂边看手机</li><li>喂养过程吵闹</li><li>不用喊口号，“啊”</li><li>追着喂</li></ul><p>有一个重要的点要注意：<strong>儿童肥胖/超重，70% 会转为成人肥胖</strong>，因此，孩子并不是越胖越好，要注意控制孩子的体重在一个健康的体重范围内！</p><h3 id="健康的喂养习惯"><a href="#健康的喂养习惯" class="headerlink" title="健康的喂养习惯"></a>健康的喂养习惯</h3><p>喂养建议：</p><ul><li>早餐：奶、肉/蛋+主食+适当蔬菜</li><li>多样化，三天不重复</li><li>餐前 1.5-2 小时内，<strong>禁止吃其他事物</strong></li></ul><p>这三个方面要注意：</p><ul><li>营养气氛</li><li>营养行为</li><li>营养素</li></ul><p>建议的喂养行为：</p><ul><li>提供温馨和谐的就餐环境</li><li>进餐时避免分散注意力</li><li>适当限制就餐时间：争取 15-20 分钟</li><li>正餐前至少 1.5 ~ 2 小时内不要进食其他食物，<strong>不要剥夺孩子的饥饿感，适当的饥饿感，可以促进孩子的生长激素分泌</strong></li><li>零食以水果为主，餐后 1 小时内给予</li><li>食物多样化，逐渐引入新食物</li><li>提高烹饪水平</li><li>培养与训练孩子自己进食的能力</li><li>自然食物、平衡膳食</li><li>要培养孩子自己吃饭的能力，比如 9 个月开始，这也是锻炼孩子能力的一个开始</li></ul><p>养育：养+育，父母生养之后，也要注重学习专业的教育知识！</p><p>最佳营养结局：</p><ul><li>体格发育</li><li>免疫力/抵抗力</li><li>体能</li><li>智商</li><li>情商</li><li>睡眠</li><li>寿命</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;同事之前发我一个视频，是公司邀请的广州市妇女儿童医疗中心儿童营养科主任医师针对儿童营养&amp;amp;喂养基础知识进行的分享。本文就是利用午休时间
      
    
    </summary>
    
      <category term="孩子" scheme="https://michael728.github.io/categories/%E5%AD%A9%E5%AD%90/"/>
    
    
      <category term="营养" scheme="https://michael728.github.io/tags/%E8%90%A5%E5%85%BB/"/>
    
      <category term="育儿" scheme="https://michael728.github.io/tags/%E8%82%B2%E5%84%BF/"/>
    
  </entry>
  
  <entry>
    <title>【转】如何高效地学习</title>
    <link href="https://michael728.github.io/2021/07/25/summary-how-to-learn-efficiently/"/>
    <id>https://michael728.github.io/2021/07/25/summary-how-to-learn-efficiently/</id>
    <published>2021-07-25T18:30:08.000Z</published>
    <updated>2022-12-07T14:03:05.081Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/指南针-方向.jpg" alt="方向"></p><blockquote><p>本文转载自 <a href="https://www.cnblogs.com/xiaoyangjia/p/11535486.html" target="_blank" rel="noopener">博客园 编码砖家/如何高效的学习技术</a></p></blockquote><p>我们相信努力学习一定会有收获，但是方法不当，既让人身心疲惫，也没有切实的回报。高中时代，我的同桌是个漂亮女同学。她的物理成绩很差，虽然她非常勤奋的学习，但成绩总是不理想。为了巩固纯洁的同学关系，我亲密无间地辅导她的物理，发现她不知道题目考什么。我们的教科书与试题都围绕着考试大纲展开，看到一道题，应该先想想它在考哪些定理和公式的运用。</p><p>不少朋友每天都阅读技术文章，但是第二天就忘干净了。工作中领导和同事都认可你的沟通和技术能力，但是跳槽面试却屡屡碰壁。面试官问技术方案，明明心里清楚，用嘴说出来却前言不搭后语。面试官再问底层算法，你说看过但是忘记了。他不在乎你看没看过，答不上就是零分。正如男女相亲，男方谈吐潇洒才能吸引姑娘。可是男方紧张了，平时挺能说，关键时候却支支吾吾，姑娘必然认为他不行。人生充满了许多考试，有形的和无形的，每次考试的机会只有一次。</p><p>工作五年十年后，别人成了架构师，自己还在基层打滚，原因是什么？职场上无法成功升迁的原因有很多，没有持续学习、学习效果不好、无法通过心仪公司的的面试，一定是很重要的原因。</p><p><strong>把自己当成一台计算机，既有输入，也要有输出，用输出倒逼输入。</strong></p><h2 id="学什么"><a href="#学什么" class="headerlink" title="学什么"></a>学什么</h2><h3 id="基础与应用"><a href="#基础与应用" class="headerlink" title="基础与应用"></a>基础与应用</h3><p>近些年诞生了许多新技术，比如最时髦的AI(目前还在智障阶段)，数学基础是初中就接触过的概率统计。万丈高楼从地起，不要被新工具或者中间件迷住双眼，一味地追新求快。基础知识是所有技术的基石，在未来很长的时间都不会变化，应该花费足够的时间巩固基础。</p><p>以数据结构和算法为例，大家阅读一下Java的BitSet的源码，里面有大量的移位操作，移位运算掌握的好，看这份源码就没问题。Java同步工具类AQS用到了双向链表，链表知识不过关，肯定搞不懂它的原理。互联网大厂都喜欢考算法，为了通过面试也要精通算法。</p><p>以Java工程师应该掌握的知识为例，按重要程度排出六个梯度：</p><ul><li>第一梯度：计算机组成原理、数据结构和算法、网络通信原理、操作系统原理；</li><li>第二梯度：Java基础、JVM内存模型和GC算法、JVM性能调优、JDK工具、设计模式；</li><li>第三梯度：Spring系列、Mybatis、Dubbo等主流框架的运用和原理；</li><li>第四梯度：MySQL(含SQL编程)、Redis、RabbitMQ/RocketMQ/Kafka、ZooKeeper等数据库或者中间件的运用和原理；</li><li>第五梯度：CAP理论、BASE理论、Paxos和Raft算法等其他分布式理论；</li><li>第六梯度：容器化、大数据、AI、区块链等等前沿技术理论；</li></ul><p>有同学认为第五梯度应该在移到第一梯度。其实很多小公司的日活犹如古天乐一样平平无奇，离大型分布式架构还远得很。学习框架和中间件的时候，顺手掌握分布式理论，效果更好。</p><h3 id="广度与深度"><a href="#广度与深度" class="headerlink" title="广度与深度"></a>广度与深度</h3><p>许多公司的招聘JD没有设定技术人员年龄门槛，但是会加上一句“具备与年龄相当的知识的广度与深度”。多广才算广，多深才算深？这是很主观的话题，这里不展开讨论。</p><p>如何变得更广更深呢？突破收入上升的瓶颈，发掘自己真正的兴趣。</p><p>大多数人只是公司的普通职员，收入上升的瓶颈就是升职加薪。许多IT公司会对技术人员有个评级，如果你的评级不高，那就依照晋级章程努力升级。如果你在一个小公司，收入一般，发展前景不明，准备大厂的面试就是最好的学习过程。在这些过程中，你必然学习更多知识，变得更广更深。</p><p>个人兴趣是前进的动力之一，许多知名开源项目都源于作者的兴趣。个人兴趣并不局限技术领域，可以是其他学科。我有个朋友喜欢玩山地自行车，还给一些做自行车话题的自媒体投稿。久而久之，居然能够写一手好文章了，我相信他也能写好技术文档。</p><h3 id="哲学"><a href="#哲学" class="headerlink" title="哲学"></a>哲学</h3><p>哲学不是故作高深的学科，它的现实意义就是解决问题。年轻小伙是怎么泡妞的？三天两头花不断，大庭广众跪求爱。这类套路为什么总是能成功呢？礼物满足女人的物欲，当众求爱满足女人的虚荣心，投其所好。食堂大妈打菜的手越来越抖，辣子鸡丁变成辣子辣丁，为什么呢？食堂要控制成本，直接提价会惹众怒。</p><p>科学上的哲学，一般指研究事物发展的规律，归纳终极的解决方案。软件行业充满哲学味道的作品非常多，比如《人月神话》。举个例子，当软件系统遇到性能问题，尝试下面两种哲学思想提升性能：</p><ul><li>空间换时间：比如引入缓存，消耗额外的存储提高响应速度。</li><li>时间换空间：比如大文件的分片处理，分段处理后再汇总结果。</li></ul><p>设计稳健高可用的系统，尝试从三个方面考虑问题：</p><ul><li>存储：数据会丢失吗，数据一致性怎么解决。</li><li>计算：计算怎么扩容，应用允许任意增加节点吗。</li><li>传输：网络中断或拥塞怎么办。</li></ul><p>从无数的失败或者成功的经验中，总结出高度概括性的方案，让我们下一步做的更好。</p><h3 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h3><p>英语是极为重要的基础，学好英语与掌握编程语言一样重要。且不说外企对英语的要求，许多知名博客就是把英文翻译成中文，充当知识的搬运工。如果英语足够好，直接阅读一手英语资料，避免他人翻译存在的谬误。</p><h2 id="怎么学"><a href="#怎么学" class="headerlink" title="怎么学"></a>怎么学</h2><h3 id="知识体系"><a href="#知识体系" class="headerlink" title="知识体系"></a>知识体系</h3><p>体系化的知识比零散的更容易记忆和理解，这正如一部好的电视剧，剧情环环相扣才能吸引观众。建议大家使用思维导图罗列知识点，构建体系结构，如下图所示：</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/rz7ybP.png" alt="JUC"></p><h3 id="克服遗忘"><a href="#克服遗忘" class="headerlink" title="克服遗忘"></a>克服遗忘</h3><p>高中是我们知识的巅峰时刻，每周小考每月大考，教辅资料堆成山，地狱式的反复操练强化记忆。复习是对抗遗忘的唯一办法。大脑的遗忘是有规律的，先快后慢。一天后，学到的知识只剩下原来的25%，甚至更低。随着时间的推移，遗忘的速度减慢，遗忘的数量也就减少。</p><table><thead><tr><th>时间间隔</th><th>记忆量</th></tr></thead><tbody><tr><td>刚看完</td><td>100%</td></tr><tr><td>20分钟后</td><td>60%</td></tr><tr><td>1小时后</td><td>40%</td></tr><tr><td>1天后</td><td>30%</td></tr><tr><td>2天后</td><td>27%</td></tr></tbody></table><p>每个人的遗忘程度都不一样，建议第二天复习前一天的内容，七天后复习这段时间的所有内容。</p><h3 id="碎片时间"><a href="#碎片时间" class="headerlink" title="碎片时间"></a>碎片时间</h3><p>不少朋友利用碎片时间学习，比如在公交上看公众号的推送。其实我们都高估了自己的抗干扰能力，如果处在嘈杂的环境，注意力容易被打断，记忆留存度也很低。碎片时间适合学习简单孤立的知识点，比如链表的定义与实现。</p><p>学习复杂的知识，需要大段的连续时间。图书馆是个好地方，安静氛围好。手机放一边，不要理会QQ微信，最好阅读纸质书，泡上一整天。有些城市出现了付费自习室，提供格子间、茶水等等，也是非常好的选择。</p><h2 id="用起来"><a href="#用起来" class="headerlink" title="用起来"></a>用起来</h2><h3 id="技术分享"><a href="#技术分享" class="headerlink" title="技术分享"></a>技术分享</h3><p>从下面这张图我们可以看到，<strong>教授他人是知识留存率最高的方式</strong>。</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/0boFI2.png" alt="学习内容平均留存率"></p><p>准备PPT和演讲内容，给同事来一场技术分享。不光复习知识，还锻炼口才。曾经有个同事说话又快又急，口头禅也多，比如”对吧、是不是”，别人经常听不清，但是他本人不以为然。领导让他做了几次技术分享，听众的反应可想而知，他才彻底认清缺点。</p><p>坚持写技术博客，别在意你写的东西在网上已经重复千百遍。当自己动手的时候，才会意识到眼高手低。让文章读起来流畅清晰，需要呕心沥血的删改。写作是对大脑的长期考验，想不到肯定写不出，想不清楚肯定写不清楚。</p><h3 id="造个轮子"><a href="#造个轮子" class="headerlink" title="造个轮子"></a>造个轮子</h3><p>我们经常说不要重复造轮子。为了开发效率，可以不造轮子，但是必须具备造轮子的能力。建议造一个简单的MQ，你能用到通信协议、设计模式、队列等许多知识。在造轮子的过程中，你会频繁的翻阅各种手册或者博客，这就是用输出倒逼输入。</p><h2 id="感悟"><a href="#感悟" class="headerlink" title="感悟"></a>感悟</h2><p>这一章节并不是原文中的内容，而是在阅读了这篇文章之后的触动。作为已经工作几年的程序员，缺乏系统性的学习以及职场的长久规划，竞争力明显会随着年纪的增长而变弱。做好职业的规划，并为此持续的准备，这样才能在未来维持竞争力，否则，危机四伏！警惕！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://gitee.com/michael_xiang/images/raw/master/uPic/指南针-方向.jpg&quot; alt=&quot;方向&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文转载自 &lt;a href=&quot;https://www.cnb
      
    
    </summary>
    
      <category term="思考" scheme="https://michael728.github.io/categories/%E6%80%9D%E8%80%83/"/>
    
    
      <category term="思考" scheme="https://michael728.github.io/tags/%E6%80%9D%E8%80%83/"/>
    
      <category term="软技能" scheme="https://michael728.github.io/tags/%E8%BD%AF%E6%8A%80%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>视频剪辑软件「剪映」的学习笔记</title>
    <link href="https://michael728.github.io/2021/07/24/life-video-clip/"/>
    <id>https://michael728.github.io/2021/07/24/life-video-clip/</id>
    <published>2021-07-24T11:21:24.000Z</published>
    <updated>2022-12-07T14:03:05.077Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>有了吉宝之后，最近偶尔会上传她的视频到抖音上，为了让视频更好玩儿，开始利用空闲时间学习视频剪辑。抖音官方有一个视频剪辑软件「剪映」，功能挺强大，因此，立个小目标，下半年持续学习输出它的使用笔记。</p><h2 id="学习教程"><a href="#学习教程" class="headerlink" title="学习教程"></a>学习教程</h2><ul><li><a href="https://www.ixigua.com/home/1204687910472592/?source=pgc_author_name&amp;list_entrance=shortvideo" target="_blank" rel="noopener">胖姐的迷糊小生活</a> 一位自媒体妈妈，出了很多关于剪映的视频剪辑教程。</li><li><a href="https://www.bilibili.com/video/BV1r7411j7x6?from=search&amp;seid=8539271601040748275" target="_blank" rel="noopener">B站/史上最精简最全的 剪映 教程【基础篇】</a> 比较系统，但是介绍的比较基础，入门还可以</li></ul><h2 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h2><ul><li>可以在设置中关闭自动添加片尾</li></ul><h2 id="比例"><a href="#比例" class="headerlink" title="比例"></a>比例</h2><p>首页菜单下，调整视频的比例。</p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>首页菜单下，用于填充比例的视频空余的部分，下面的选项是单选，不叠加的：</p><ul><li>画布颜色</li><li>画布样式</li><li>画布模糊</li></ul><p>设置画布的效果默认是给时间轴上那段视频片段设置，如果要将画布样式设置给所有的视频，那么，点击界面上的「应用到全部」按钮即可。</p><h2 id="剪辑"><a href="#剪辑" class="headerlink" title="剪辑"></a>剪辑</h2><p>首页菜单下，剪辑中提供了很多功能，可以点击「剪辑」进入剪辑状态，此外，单击视频也会自动进入剪辑状态。</p><ul><li>分割</li><li>变速</li><li>音量</li><li>变声</li><li>删除</li><li>降噪：对录制的视频中音频进行降噪处理</li><li>复制</li><li>倒放</li><li>定格：就是选取了视频中指定时间点画面持续几秒钟，类似于截图。</li></ul><h3 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h3><p>美化下提供了两个主要的功能：美颜和美体</p><ul><li>美颜：<ul><li>磨皮</li><li>瘦脸</li></ul></li><li>美体：<ul><li>瘦身</li><li>长腿</li><li>瘦腰</li><li>小头</li></ul></li></ul><h2 id="音频"><a href="#音频" class="headerlink" title="音频"></a>音频</h2><p>首页菜单下</p><h3 id="音乐"><a href="#音乐" class="headerlink" title="音乐"></a>音乐</h3><ul><li>导入音乐：在音频-》音乐-》导入音乐下，支持输入一段音乐的链接地址进行导入。用这个功能就可以实现将网易云音乐的分享链接粘贴到这里，作为视频的背景音乐了。</li></ul><h3 id="音效"><a href="#音效" class="headerlink" title="音效"></a>音效</h3><p>这个菜单下提供了很多音效，例如：</p><ul><li>综艺：<ul><li>疑问-啊？：那种黑人问号的场景使用</li><li>震惊</li><li>“喂”</li><li>屏蔽脏话</li><li>土拨鼠大吼：啊！</li><li>剧场欢呼</li><li>口哨</li><li>尴尬</li><li>无语</li><li>打嗝</li><li>放屁声</li><li>黑线</li><li>亲</li><li>悲伤长叹</li></ul></li><li>笑声<ul><li>多人大笑</li><li>观众笑声</li></ul></li><li>机械声<ul><li>打字声</li><li>机械键盘打字声</li><li>系统警告</li><li>时钟滴答</li><li>门铃</li></ul></li><li>BGM<ul><li>Hello it’s me</li><li>小朋友你是否有很多问号</li><li>疑惑</li></ul></li><li>人声<ul><li>我太难了</li><li>什么？（日文）</li></ul></li><li>游戏<ul><li>一杀</li></ul></li><li>美食</li></ul><h3 id="录音"><a href="#录音" class="headerlink" title="录音"></a>录音</h3><p>可以给视频通过自己录音的方式进行配音。</p><h2 id="音频编辑"><a href="#音频编辑" class="headerlink" title="音频编辑"></a>音频编辑</h2><p>当点击添加的音频时，会自动进入音频编辑的状态。</p><h3 id="踩点"><a href="#踩点" class="headerlink" title="踩点"></a>踩点</h3><p>提供了「自动踩点」的功能，能够在音频的时间轴上进行踩点标记，这样的话，就可以在一些音频点上进行照片的添加、转场等，这样会使视频效果更具有节奏感。</p><h3 id="变声"><a href="#变声" class="headerlink" title="变声"></a>变声</h3><p>例如可以将自己录制的配音进行变声处理，提供了一些选项：</p><ul><li>大叔</li><li>萝莉</li><li>女生</li><li>男生</li><li>怪物</li></ul><h2 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h2><h3 id="新建文本"><a href="#新建文本" class="headerlink" title="新建文本"></a>新建文本</h3><p>给视频配上文本，充当字幕</p><h3 id="识别字幕"><a href="#识别字幕" class="headerlink" title="识别字幕"></a>识别字幕</h3><p>针对视频里的声音或者你给视频添加的录音进行识别，自动生成字幕。</p><h2 id="文本编辑"><a href="#文本编辑" class="headerlink" title="文本编辑"></a>文本编辑</h2><p>点击添加的文本，会自动进入文本编辑状态</p><h3 id="文本朗读"><a href="#文本朗读" class="headerlink" title="文本朗读"></a>文本朗读</h3><p>针对自己添加的文本，进入文本编辑状态，选择文本朗读，提供了很多特效声音来朗读你的文本：</p><ul><li>动漫小新</li><li>说唱小哥</li><li>台湾女生</li><li>动漫海绵</li><li>小萝莉</li><li>东北老铁</li></ul><h2 id="贴纸"><a href="#贴纸" class="headerlink" title="贴纸"></a>贴纸</h2><p>首页菜单下，提供了贴纸的菜单。</p><p>点击添加的贴纸，四个角的功能有所不同，提供了缩放、编辑、删除、复制的功能。</p><p>选中贴纸，进入编辑状态，提供了若干动画效果的设置：</p><ul><li>入场动画</li><li>出场动画</li><li>循环动画：<ul><li>心跳：这个效果不错，比如结合一个手指，心跳效果可以起到引人注目效果。</li><li>旋转</li></ul></li></ul><h2 id="滤镜"><a href="#滤镜" class="headerlink" title="滤镜"></a>滤镜</h2><p>首页菜单下，提供了滤镜的菜单。</p><h2 id="调节"><a href="#调节" class="headerlink" title="调节"></a>调节</h2><p>首页菜单下，提供了调节的选项。在该菜单下提供了如下的功能：</p><ul><li>亮度</li><li>对比度</li><li>饱和度</li><li>光感</li><li>锐化</li><li>高光</li><li>阴影</li><li>色温</li><li>色调</li><li>褪色</li><li>暗角</li><li>颗粒</li></ul><h2 id="特效"><a href="#特效" class="headerlink" title="特效"></a>特效</h2><h3 id="人脸道具"><a href="#人脸道具" class="headerlink" title="人脸道具"></a>人脸道具</h3><p>这个功能很赞，可以实现针对拍摄的视频自动识别人脸，然后用选择的道具替换，避免露脸了。</p><h3 id="画面特效"><a href="#画面特效" class="headerlink" title="画面特效"></a>画面特效</h3><p>画面特效中提供了很多选择，例如：</p><ul><li>基础-》开幕：这个在很多视频的开场可以使用一下</li><li>动感-》抖动：有种画面抖动效果 </li><li>动感-》灵魂出窍：有种画面抖动效果</li><li>动感-》毛刺：有种画面抖动效果 </li><li>边框-》录制边框：有种正在摄影的感觉</li><li>自然-》玫瑰花瓣：很唯美</li><li>复古-》复古DV：给画面一种老电影的感觉</li><li>分屏-》三屏</li></ul><h2 id="转场"><a href="#转场" class="headerlink" title="转场"></a>转场</h2><p>点击 2 个视频片段之间的分隔键，会弹出转场的选项：</p><ul><li>基础转场<ul><li>左移</li><li>右移</li><li>上移</li><li>下移</li></ul></li><li>运镜转场<ul><li>推近转场</li><li>拉远</li></ul></li><li>特效转场</li><li>MG转场</li><li>幻灯片</li><li>遮罩转场</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;有了吉宝之后，最近偶尔会上传她的视频到抖音上，为了让视频更好玩儿，开始利用空闲时间学习视频剪辑。抖音官方有一个视频剪辑软件「剪映」，功能挺强
      
    
    </summary>
    
      <category term="兴趣" scheme="https://michael728.github.io/categories/%E5%85%B4%E8%B6%A3/"/>
    
    
      <category term="视频" scheme="https://michael728.github.io/tags/%E8%A7%86%E9%A2%91/"/>
    
      <category term="剪辑" scheme="https://michael728.github.io/tags/%E5%89%AA%E8%BE%91/"/>
    
  </entry>
  
  <entry>
    <title>小米电视大师 82 寸的使用心得</title>
    <link href="https://michael728.github.io/2021/06/12/digital-products-xiaomi-tv/"/>
    <id>https://michael728.github.io/2021/06/12/digital-products-xiaomi-tv/</id>
    <published>2021-06-12T21:29:08.000Z</published>
    <updated>2022-12-07T14:03:05.073Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/bncTZ6.png" alt="效果"></p><p>为了让已经拥有不错硬件的电视机发挥它应有的实力，</p><ul><li><strong>提高片源质量是非常关键的！</strong></li><li><strong>提高片源质量是非常关键的！</strong></li><li><strong>提高片源质量是非常关键的！</strong></li></ul><p>因此，我购入了一款国外的 TV 盒子，它拥有原生的 Google Android 框架，可以支持安装 Youtube 和 Netflix，并且，该设备是经过 Netflix 认证的，可以看 4K 高清视频。关于这款盒子的使用，可以阅读 <a href="https://michael728.github.io/2021/04/25/digital-products-tivo-tv/">Tivo Stream TV 使用笔记</a></p><p>除了购入 TV 盒子之外，近期我还购入了 群晖 920+ NAS，可玩性也很高，可以阅读 <a href="https://michael728.github.io/2021/05/30/digital-products-nas-started/">群晖 NAS 920+ 使用笔记</a>。</p><a id="more"></a><h2 id="APP"><a href="#APP" class="headerlink" title="APP"></a>APP</h2><p>言归正传，</p><h3 id="aida64"><a href="#aida64" class="headerlink" title="aida64"></a>aida64</h3><p>这个软件可以方便的查看电视机的系统信息、CPU 架构等。</p><p>下载地址：<a href="https://www.aida64.com/downloads" target="_blank" rel="noopener">aida64官网</a></p><p>我的电视是小米电视大师 82 寸液晶版本的，架构信息：</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/D7AE31.png" alt="CPU"></p><h3 id="File-Commander"><a href="#File-Commander" class="headerlink" title="File Commander"></a>File Commander</h3><p>在 TV 盒子上安装好 File Commander，然后可以在局域网内从电脑端向盒子上传文件了。</p><h3 id="悟空遥控"><a href="#悟空遥控" class="headerlink" title="悟空遥控"></a>悟空遥控</h3><h3 id="当贝市场"><a href="#当贝市场" class="headerlink" title="当贝市场"></a>当贝市场</h3><h3 id="x-plore"><a href="#x-plore" class="headerlink" title="x-plore"></a>x-plore</h3><p>x-plore 真是个神器，不仅方便浏览目录结构，还有可以访问远端服务器上的资源，例如访问家里 NAS 中的共享文件夹、访问网盘中的文件……这样，就不用拿着 U 盘拷贝文件等琐碎的操作。</p><p>下载地址：<a href="https://x-plore-file-manager.cn.uptodown.com/android" target="_blank" rel="noopener">X-plore File Manager</a></p><p>如果安装的 apk 在远端服务器上，直接安装时，它会先复制到电视机上的临时目录中，然后开始安装。</p><p>临时文件夹目录：</p><ul><li><code>内部共享存储空间-》Android-》data-》com.lonelycatgames.Xplor-》cache-》temp</code></li></ul><h3 id="vlc"><a href="#vlc" class="headerlink" title="vlc"></a>vlc</h3><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/kfLtWR.png" alt="VLC"></p><p>对于一些新格式的视频，常见的播放器可能无法播放或者没有声音，而 VLC 这款开源播放器亲测兼容性很强！而且，功能非常丰富，各个平台都有对应客户端。通过它，可以直接播放 NAS 设备中共享的文件夹中的视频。</p><p>下载地址：<a href="https://www.videolan.org/vlc/" target="_blank" rel="noopener">VideLAN</a></p><h3 id="jellyfin"><a href="#jellyfin" class="headerlink" title="jellyfin"></a>jellyfin</h3><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/b74vkw.png" alt="Jellyfin"></p><p><a href="https://jellyfin.org/" target="_blank" rel="noopener">Jellyfin</a> 是一个开源的媒体库管理软件。我一开始是安装在 <a href="https://michael728.github.io/2021/04/25/digital-products-tivo-tv/">Tivo TV 盒子</a>上的，后来想着这个 APP 也不依赖谷歌框架，因此，直接安装在了小米电视上。亲测，可用，这样，就少了一个切换信号源的操作了。</p><p>关于它的使用，我在 <a href="https://michael728.github.io/2021/05/30/digital-products-nas-started/">群晖 NAS 920+ 使用笔记</a> 有详细的介绍。</p><p>下载地址：<a href="https://github.com/jellyfin/jellyfin-androidtv/releases/tag/v0.11.5" target="_blank" rel="noopener">jellyfin/jellyfin-androidtv</a></p><blockquote><p>目前，如果想要好看的海报墙，则在 TV 端打开 Jellyfin 客户端，如果图方便和稳定，则直接使用 TV 端的 VLC 播放器链接到 NAS 设备，然后播放视频文件。这两种方式，是目前我探索下来比较稳定、兼容性好的方案。</p></blockquote><h3 id="emby"><a href="#emby" class="headerlink" title="emby"></a>emby</h3><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/VuoHhX.png" alt="Emby"></p><p>Emby 是一个家庭媒体库软件，包含服务端和客户端。服务端用于整理电影和剧集，客户端连上服务端后就能播放这些影片。这个软件真是一款<strong>神器</strong>！类似 Jellyfin~</p><p>Emby 公益服维护了数量庞大的视频资源，但是它的获取目前比较有门槛，需要经过考试等步骤才可以。网上有热心的网友汇总了题库<a href="https://www.yuque.com/ow/emby/ganwxl" target="_blank" rel="noopener">语雀/Emby</a>。</p><p>关于它的资料，可以阅读 </p><ul><li><a href="https://embywiki.911997.xyz/" target="_blank" rel="noopener">Emby 公益服</a></li><li><a href="https://www.youtube.com/watch?v=NjUQWgN_hKg" target="_blank" rel="noopener">油管 Bigdongdong/上万部电影和剧集免费来看！完全免费的EMBY公益媒体库分享</a></li></ul><p>客户端下载：<a href="https://embywiki.911997.xyz/use-on-various-devices/use-on-android-tv/using-official-client-on-android-tv.html" target="_blank" rel="noopener">Emby 公益服</a></p><ul><li>Mac 端：<a href="https://emby.media/download.html" target="_blank" rel="noopener">emby 官网</a></li></ul><p>Mac 端的破解脚本：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bin/bash -c "$(curl -fsSL https://gitlab.com/iptv-org/embypublic/-/raw/master/Script/EmbyPremiere.sh)"</span><br><span class="line"><span class="meta">#</span> 备用</span><br><span class="line">/bin/bash -c "$(curl -fsSL https://git.io/EmbyPremiereUnlock.sh)"</span><br></pre></td></tr></table></figure></p><p>脚本来自：<a href="http://ilolita945.softether.net:5212/api/v3/file/get/805/%E8%8B%B9%E6%9E%9C%E8%AE%BE%E5%A4%87%E7%A0%B4%E8%A7%A3.txt?sign=q9Sdol3a5oCyp97ew2zgFZPHsBSWUsE34pS84O2VlYc%3D%3A0" target="_blank" rel="noopener">emby mac</a></p><p>emby 公益服的地址，可以访问 <a href="https://t.me/bigdongdongmedia" target="_blank" rel="noopener">PLEX/EMBY交流群</a> 回复「公益服」获取。</p><h3 id="Youtube-油管"><a href="#Youtube-油管" class="headerlink" title="Youtube 油管"></a>Youtube 油管</h3><ul><li><a href="https://github.com/yuliskov/SmartYouTubeTV" target="_blank" rel="noopener">SmartYouTubeTV</a></li><li><a href="https://github.com/yuliskov/SmartTubeNext" target="_blank" rel="noopener">SmartTubeNext</a></li></ul><h3 id="Netflix"><a href="#Netflix" class="headerlink" title="Netflix"></a>Netflix</h3><ul><li><a href="https://www.nfmovies.com/app.html" target="_blank" rel="noopener">奈菲影视</a> 这个是国内的一个奈菲影视网站开发的 APP，可以免费看奈菲的视频，用于在一些非奈菲认证的设备上安装，例如投影仪、小米电视。</li><li><a href="https://nfxhd.com/" target="_blank" rel="noopener">奈菲星影视 NFXHD</a></li></ul><h3 id="kodi"><a href="#kodi" class="headerlink" title="kodi"></a>kodi</h3><p>下载地址：<a href="https://kodi.tv/download/android" target="_blank" rel="noopener">kodi</a></p><h3 id="软件下载地址"><a href="#软件下载地址" class="headerlink" title="软件下载地址"></a>软件下载地址</h3><ul><li><a href="https://www.apkmirror.com/" target="_blank" rel="noopener">apkmirror</a></li><li><a href="https://en.aptoide.com/" target="_blank" rel="noopener">aptoide</a>，<a href="https://tv.aptoide.com/" target="_blank" rel="noopener">aptoide-tv</a></li><li><a href="https://apkpure.com/cn/" target="_blank" rel="noopener">apkpure</a></li><li><a href="https://cn.uptodown.com/android" target="_blank" rel="noopener">uptodown</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://gitee.com/michael_xiang/images/raw/master/uPic/bncTZ6.png&quot; alt=&quot;效果&quot;&gt;&lt;/p&gt;
&lt;p&gt;为了让已经拥有不错硬件的电视机发挥它应有的实力，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;提高片源质量是非常关键的！&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;提高片源质量是非常关键的！&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;提高片源质量是非常关键的！&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此，我购入了一款国外的 TV 盒子，它拥有原生的 Google Android 框架，可以支持安装 Youtube 和 Netflix，并且，该设备是经过 Netflix 认证的，可以看 4K 高清视频。关于这款盒子的使用，可以阅读 &lt;a href=&quot;https://michael728.github.io/2021/04/25/digital-products-tivo-tv/&quot;&gt;Tivo Stream TV 使用笔记&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;除了购入 TV 盒子之外，近期我还购入了 群晖 920+ NAS，可玩性也很高，可以阅读 &lt;a href=&quot;https://michael728.github.io/2021/05/30/digital-products-nas-started/&quot;&gt;群晖 NAS 920+ 使用笔记&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="数码" scheme="https://michael728.github.io/categories/%E6%95%B0%E7%A0%81/"/>
    
    
      <category term="APP" scheme="https://michael728.github.io/tags/APP/"/>
    
      <category term="数码" scheme="https://michael728.github.io/tags/%E6%95%B0%E7%A0%81/"/>
    
      <category term="多媒体" scheme="https://michael728.github.io/tags/%E5%A4%9A%E5%AA%92%E4%BD%93/"/>
    
  </entry>
  
  <entry>
    <title>群晖 NAS 920+ 使用笔记</title>
    <link href="https://michael728.github.io/2021/05/30/digital-products-nas-started/"/>
    <id>https://michael728.github.io/2021/05/30/digital-products-nas-started/</id>
    <published>2021-05-30T21:29:08.000Z</published>
    <updated>2022-12-07T14:03:05.073Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/5ihVj4.png" alt="NAS"></p><p>很早之前就听说过 NAS 设备，但是苦于一直在租房的状态（其实是穷），一直没有入手。今年终于搬到新家了，加上近期老婆抱怨手机存储空间不够，已经塞满了吉宝的照片和视频了，因此，终于狠心剁手了一台群晖 920+ 的 NAS 设备。</p><p>本文主要就是围绕 NAS 到手后，我进行了哪些设置以及安装哪些好玩的套件。</p><a id="more"></a><h2 id="DS-video"><a href="#DS-video" class="headerlink" title="DS video"></a>DS video</h2><p>群晖安装套件：Video Station<br>电视盒子、手机安装：DS Video</p><p>通过在 NAS 上安装好套件、添加好资源之后，可以在其他设备上安装 DS Video 来进行观看。会有视频的海报墙，比直接看文件夹或者视频文件更美观和直观。</p><p>经过测试发现，对于 DTS、EAC3 格式的视频，群晖的这个 DS Video 播放就没有声音了。只能在电视盒子安装一个 VLC 播放器，这样，DS Video 不支持的视频资源可以选择用第三方播放器打开。</p><blockquote><p>网上有各种解决方案，比如 <a href="https://post.smzdm.com/p/az5e3nep/" target="_blank" rel="noopener">群晖 Video Station 支持 DTS 和 eac3 解决方案</a>，但是在我群晖 920+ 上都没好使。</p></blockquote><p>经过周末的折腾，利用 Jellyfin 搭建了家庭媒体服务中心，然后其他平台也都有 Jellyfin 的客户端，使用下来，效果也还可以，非常值得推荐！</p><p>参考：</p><ul><li><a href="https://woodenrobot.me/2019/08/12/syn-vediostation/" target="_blank" rel="noopener">群晖 Video Station 支持 DTS 和 eac3 解决方案</a></li></ul><h2 id="kodi"><a href="#kodi" class="headerlink" title="kodi"></a>kodi</h2><p><a href="https://kodi.tv/" target="_blank" rel="noopener">kodi</a> 就是个功能强大的播放器客户端，关于它的教程非常丰富，可玩性也非常高。由于我一开始是将 kodi 安装在电视盒子上，电视盒子性能不是很好，因此，kodi 播放一些视频时，卡顿感比较明显。</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/le7QDp.png" alt="kodi"></p><p>使用视频：</p><ul><li><a href="https://www.bilibili.com/video/BV1R4411A7xi" target="_blank" rel="noopener">B 站司波图/手把手教你组建家庭影院！（KODI+群晖+智能电视）</a></li></ul><h3 id="解决播放视频没有声音"><a href="#解决播放视频没有声音" class="headerlink" title="解决播放视频没有声音"></a>解决播放视频没有声音</h3><p>需要在设置-》系统-》音频里，勾选开启一些音频方面设置项的兼容性设置。设置要点：</p><ul><li>系统-音频-声道数：2.0</li><li>系统-音频-允许直通输出</li><li>系统-音频-启用杜比数字（AC3）兼容功放</li><li>系统-音频-启用杜比数字（AC3）编码转换</li></ul><p>参考：</p><ul><li><a href="https://forums.whirlpool.net.au/archive/2575344" target="_blank" rel="noopener">Would appreciate any insight into dealing with AAC 5.1 audio</a></li><li><a href="https://blog.csdn.net/weixin_28785509/article/details/112413648" target="_blank" rel="noopener">CSDN/安卓dts音频解码_【日常折腾】KODI的AC3音频转码设置</a></li></ul><h3 id="主菜单的添加与删除"><a href="#主菜单的添加与删除" class="headerlink" title="主菜单的添加与删除"></a>主菜单的添加与删除</h3><p>在设置/皮肤设置/主菜单选项中，可以开启剧集、电影等菜单项。</p><p>参考：</p><ul><li><a href="http://www.kodiplayer.cn/course/2951.html" target="_blank" rel="noopener">Kodi主菜单功能介绍 主菜单如何添加删除</a></li></ul><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://www.themoviedb.org/" target="_blank" rel="noopener">KODI 中文网</a> 这个网站提供了很多关于 kodi 的教程</li></ul><h2 id="Transmission-安装与汉化"><a href="#Transmission-安装与汉化" class="headerlink" title="Transmission 安装与汉化"></a>Transmission 安装与汉化</h2><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/dhA0Nr.png" alt="Transmission"></p><p><a href="https://transmissionbt.com/about/" target="_blank" rel="noopener">Transmission</a> 是一个开源的下载软件，可以用来下载 PT 站的资源。记得在大学时期使用六维空间时，经常为了做种需要将笔记本一直打开着。现在只需要在 NAS 中安装好这个 APP， 则可以使用 NAS 24 小时挂在后台进行资源的下载和上传。</p><h3 id="安装-TR"><a href="#安装-TR" class="headerlink" title="安装 TR"></a>安装 TR</h3><p>在套件中心添加套件源 <code>http://packages.synocommunity.com</code>：</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/wLH56L.png" alt="synocommunity"></p><p>常规中设置信任：</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/iCVvS7.png" alt="iCVvS7"></p><p>在社群中搜索 Transmission，按照提示安装，安装好之后的访问地址：</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/dxOVgz.png" alt="dxOVgz"></p><h3 id="汉化"><a href="#汉化" class="headerlink" title="汉化"></a>汉化</h3><p>汉化的安装，可以阅读 <a href="https://github.com/ronggang/transmission-web-control/wiki/Linux-Installation-CN" target="_blank" rel="noopener">ronggang/transmission-web-control</a>。以下简要介绍：</p><p>在群晖控制中心，开启 NAS SSH 登录的功能：</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/KXmeOu.png" alt="SSH"></p><p>然后在终端命令行窗口即可登录 NAS：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 登录账号名和 IP 得换成你自己的</span><br><span class="line">ssh 用户名@IP</span><br><span class="line"># 切换为 root，密码和你 admin 账户密码一样</span><br><span class="line">sudo -i</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/p1XRb4.png" alt="p1XRb4"></p><p>注意：</p><ul><li>如果想要在下载时指定目录，需要对应目录需要添加群组： <code>sc-transmission</code>、<code>sc-download</code></li></ul><p>添加常用下载目录：<br><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/eBEGuV.png" alt="eBEGuV"></p><h3 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://www.colinjiang.com/archives/synology-install-transmission.html" target="_blank" rel="noopener">君子不器/群晖安装Transmission</a></li><li><a href="https://www.moewah.com/archives/2420.html" target="_blank" rel="noopener">喵斯基俱乐部/群晖NAS安装及美化Transmission(PT)教程</a></li><li><a href="https://zhongce.sina.com.cn/article/view/80527/" target="_blank" rel="noopener">新浪众测/最强下载工具，玩转NAS影音竟然如此简单！</a> 介绍了 Tr/万物下载、Plex/Kodi Jellfin</li></ul><h2 id="Jellyfin-媒体中心"><a href="#Jellyfin-媒体中心" class="headerlink" title="Jellyfin 媒体中心"></a>Jellyfin 媒体中心</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><ul><li>Jellyfin 支持硬件转码，在使用硬件转码推流的时候可以大幅降低 CPU 占用率，支持<strong>实时转码</strong>。硬件转码功能在 emby 和 plex 都是付费功能。</li><li>Jellyfin 是在它的服务器上搭建影音资料库，这样，在任何客户端来访问资料库时，就不用再建立资料库。Kodi 在不同设备上需要重新建立存储在该设备上的资料库。观看的记录会保存在 Jellyfin 服务端，这样，在各个平台切换观看时，使用同一账户就可以方便继续观看了。</li></ul><p>Kodi 播放方式类似电脑上的播放器播放。直接从共享文件夹读取文件流，而非播放视频流。Kodi 的这种方式，占用的网络资源则由具体的文件的码率决定。由于解码由播放设备进行，所以实际效果取决于设备的解码能力。如果播放设备解码能力弱，直接播放视频文件，有时候就会造成卡顿或无法播放。而 Jellyfin 的这种方式，可以理解为你自己在 NAS 上搭建了一个多媒体服务器，它可以进行视频的解码，客户端播放能够流畅很多。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>通过打开 Docker 套件，在其中的注册表中搜索 <code>jellyfin</code> 镜像（映像）进行下载。</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/9BNRO6.png" alt="9BNRO6"></p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/muC3tc.png" alt="muC3tc"></p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/35K25i.png" alt="35K25i"></p><p>进入 jellyfin 服务器地址（NAS IP:8096），即可访问。</p><p>需要进行一些设置。可以参考 <a href="https://post.smzdm.com/p/a6lnxg3g/" target="_blank" rel="noopener">SMZDM阿文菌/使用群晖Docker 安装Jellyfin 家庭影院HTPC 比emby plex好用多了</a>:</p><ul><li>国家选项里没有 China，而是要选择 Peoples’s Republic of China</li><li>选择备用字体文件路径：控制台》播放》选择备用字体文件路径，提前在 <code>config</code> 下创建好 <code>font</code> 文件夹（可以自定义文件夹名），在其中放好下载的<a href="https://github-repository-files.githubusercontent.com/164221924/4434292?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20210606%2Fus-east-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20210606T051418Z&amp;X-Amz-Expires=300&amp;X-Amz-Signature=56e41c40dd848673c66029e026ab94ed4ad7c566afcd2ed692c27ca7074bde28&amp;X-Amz-SignedHeaders=host&amp;actor_id=8510410&amp;key_id=0&amp;repo_id=164221924&amp;response-content-disposition=attachment%3Bfilename%3Dnoto.zip&amp;response-content-type=application%2Fx-zip-compressed" target="_blank" rel="noopener">字体 noto.zip</a>。这个主要为了解决 <code>ASS/SSA</code> 中文字幕会显示方块乱码。</li></ul><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/meK4M9.png" alt="meK4M9"></p><p>安装的步骤，<a href="https://jellyfin.org/docs/general/administration/hardware-acceleration.html" target="_blank" rel="noopener">Jellyfin 官网</a>可以看做是如下命令的等同：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run --name=jellyfin2 \</span><br><span class="line">--device=/dev/dri:/dev/dri  \</span><br><span class="line">--device=/dev/dri/card0:/dev/dri/card0 \</span><br><span class="line">-p 8096:8096 \</span><br><span class="line">-v /volume1/docker/jellyfin/config:/config \</span><br><span class="line">-v /volume1/docker/jellyfin/cache:/cache \</span><br><span class="line">-v /volume1/video:/media \</span><br><span class="line">jellyfin/jellyfin:latest</span><br></pre></td></tr></table></figure></p><blockquote><p>之所以映射设备，是为了开启硬件加速</p></blockquote><h3 id="添加媒体库"><a href="#添加媒体库" class="headerlink" title="添加媒体库"></a>添加媒体库</h3><p>添加媒体库的步骤很简单，注意勾选：</p><ul><li>将媒体图像保存到媒体所在文件夹：方便将下载的资源归档到视频文件夹中</li></ul><h3 id="插键"><a href="#插键" class="headerlink" title="插键"></a>插键</h3><h4 id="字幕插键-Open-Subtitles"><a href="#字幕插键-Open-Subtitles" class="headerlink" title="字幕插键 Open Subtitles"></a>字幕插键 Open Subtitles</h4><p>安装 <code>Open Subtitles</code> 插件，这样的话，可以使用字幕下载的功能。使用该插件</p><p>安装好插键之后，需要重启容器。</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/ry2JoO.png" alt="重启容器"></p><p>需要去 <a href="https://www.opensubtitles.org/zh" target="_blank" rel="noopener">opensubtitles</a> 注册账号，有了账号，需要去点击该插键进行配置。</p><p>参考：</p><ul><li><a href="http://www.92nas.com/forum.php?mod=viewthread&amp;tid=147" target="_blank" rel="noopener">92Nas/Jellyfin中电影外挂ass格式字幕无法显示的解决方法</a></li><li><a href="https://github.com/jellyfin/jellyfin-web/issues/934" target="_blank" rel="noopener">All the Chinese plug-in subtitles in ASS format</a> 中的解决方案进行配置</li></ul><h3 id="播放"><a href="#播放" class="headerlink" title="播放"></a>播放</h3><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/jr7IZR.png" alt="播放数据"></p><p>查看播放数据：</p><ul><li>播放信息：会显示播放方式，可以看出是转码播放还是直接播放的</li><li>媒体源信息：表示播放的视频源的信息，可以看到码率、音频编码</li><li>比特率：码率，视频文件 原本的码率，如果原本码率比较高，我们通过播放时设置低码率，那么，就会被自动转码</li><li>转码信息：看到这个表示正在进行硬件转码，方便播放设备播放。可以看到，源文件的音频是 <code>EAC3</code>，播放时被自动转码成 <code>AAC</code> 了。</li></ul><h3 id="硬件加速"><a href="#硬件加速" class="headerlink" title="硬件加速"></a>硬件加速</h3><p>通过如下的设置开启硬件加速：</p><ul><li>开启转码：控制台》播放，选择硬件加速<code>Video Acceleration API(VAAPI)</code></li></ul><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/5pEBal.png" alt="5pEBal"></p><blockquote><p>注意，上面能够成功开启的前提是，勾选了「使用高权限执行容器」</p></blockquote><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/Yrvjxu.png" alt="Yrvjxu"></p><p>通过 SSH 登录后台，<code>htop</code> 命令查看 CPU 占用率高的进程（jellyfin），查看是否开启验证加速：</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/RhkpfW.png" alt="RhkpfW"></p><p>此外，在 NAS 查看资源监控，播放视频时，CPU 如果没有飙升，一般也是开启硬件加速的效果。</p><p>参考：</p><ul><li><a href="https://post.smzdm.com/p/a259mgk2/p3/#comments" target="_blank" rel="noopener">分享一种简单得不能再简单的群晖DS918+下Jellyfin调用核显硬解的办法</a></li></ul><h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><p>Jellyfin 的 APP 死机概率非常高，没有网页版本好用。可以使用手机浏览器直接访问网页。利用 Chrome 访问 Jellyfin 的地址，然后在浏览器页面的右上角的菜单项中，点击「添加到主屏幕」，这样即可在手机桌面创建快捷方式。</p><blockquote><p>我的手机进行了权限管理，需要放开 Chrome 创建快捷方式的权限。</p></blockquote><h4 id="TV-端设置"><a href="#TV-端设置" class="headerlink" title="TV 端设置"></a>TV 端设置</h4><p><a href="https://jellyfin.org/clients/" target="_blank" rel="noopener">Jellyfin/Clients</a> 官网有提供客户端的下载，其中，有<a href="https://github.com/jellyfin/jellyfin-androidtv/releases/tag/v0.11.5" target="_blank" rel="noopener">安卓 TV 的客户端</a>。</p><p>此外，也可以利用 kodi 来访问 Jellyfin 媒体中心。具体的使用方式，可以阅读 <a href="https://jellyfin.org/docs/general/clients/kodi.html" target="_blank" rel="noopener">kodi</a> ，简要步骤如下：</p><ul><li>添加 jellyfin 源：进入插键菜单，插键浏览器，选择从 zip 文件安装，浏览服务器中已经下载好的压缩包</li><li>从库安装 jellyfin 插键</li><li>为了避免之前 kodi 中添加的媒体资源重复，可以使用使用 jellyfin 插键中的重置本地数据库的功能</li></ul><blockquote><p>利用 kodi + jellyfin 插键的方式播放资源，不会对视频进行转码，这可能就会导致播放高质量视频时会有卡顿。</p></blockquote><p>具体的设置，可以阅读：</p><ul><li><a href="https://www.bilibili.com/video/BV1AE411k7hr" target="_blank" rel="noopener">B站司波图/Jellyfin的外网访问姿势，如何通过安卓，IOS，电视访问Jellyfin服务器</a></li><li><a href="https://post.smzdm.com/p/a99vlpmp/" target="_blank" rel="noopener">SMZDM/安卓TV端Kodi部署Jellyfin，使用Jellyfin打造最强媒体中心（篇二）</a></li></ul><h3 id="其他资源"><a href="#其他资源" class="headerlink" title="其他资源"></a>其他资源</h3><ul><li>字幕网站：<ul><li><a href="https://www.opensubtitles.org/zh" target="_blank" rel="noopener">opensubtitles</a></li><li><a href="https://www.a4k.net/" target="_blank" rel="noopener">a4k</a></li><li><a href="https://subhd.tv" target="_blank" rel="noopener">subhd</a></li></ul></li></ul><h3 id="参考-2"><a href="#参考-2" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://www.moewah.com/archives/1552.html" target="_blank" rel="noopener">喵斯基部落/群晖Docker安装Jellyfin媒体服务器</a> 利用 Docker 部署 jellyfin 服务</li><li><a href="https://post.smzdm.com/p/a6lnxg3g/" target="_blank" rel="noopener">SMZDM/使用群晖Docker 安装Jellyfin 家庭影院HTPC 比emby plex好用多了</a></li><li><a href="https://www.bilibili.com/video/BV1ME411o7H2" target="_blank" rel="noopener">B站司波图/免费开源影音服务器Jellyfin部署全攻略，含群晖，OMV系统下Docker安装并启动硬件转码</a></li></ul><h2 id="电影刮削器-TinyMediaManager"><a href="#电影刮削器-TinyMediaManager" class="headerlink" title="电影刮削器 TinyMediaManager"></a>电影刮削器 TinyMediaManager</h2><h3 id="参考-3"><a href="#参考-3" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="http://www.92nas.com/forum.php?mod=viewthread&amp;tid=98" target="_blank" rel="noopener">92NAS/群晖Docker里安装电影剧集刮削器TinyMediaManager</a></li><li><a href="http://www.kodiplayer.cn/course/2945.html" target="_blank" rel="noopener">KODI中文网/抛弃Kodi难用的刮削器 tinyMediaManager(TMM)刮削电影信息更方便</a></li></ul><h2 id="emby"><a href="#emby" class="headerlink" title="emby"></a>emby</h2><blockquote><p>免费版，服务器硬件解码是不支持的，通过 web 浏览器观看影片时，则会容易造成 NAS CPU 负载很高。但是，比如你使用 Mac 上的 infuse 客户端连接 emby 观看时，它是支持自己解码的，效果不错。</p></blockquote><p>我尝试使用 docker 的方式安装 emby。</p><h3 id="安装-emby-步骤"><a href="#安装-emby-步骤" class="headerlink" title="安装 emby 步骤"></a>安装 emby 步骤</h3><p>查询核显：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@michael-nas:~# ll /dev/dri</span><br><span class="line">total 0</span><br><span class="line">drwxr-xr-x  2 root root              80 Nov 21 17:35 .</span><br><span class="line">drwxr-xr-x 13 root root           13840 Nov 21 17:37 ..</span><br><span class="line">crw-------  1 root root        226,   0 Nov 21 17:35 card0</span><br><span class="line">crw-rw----  1 root videodriver 226, 128 Nov 21 17:35 renderD128</span><br></pre></td></tr></table></figure></p><p>看到有结果，则表示具有核显，支持硬件解码。</p><p>使用 docker 镜像来安装 emby server。</p><ol><li>先在docker 套件中，下载好 emby server 的镜像，镜像地址：<code>https://hub.docker.com/r/emby/embyserver</code> </li><li>为了能够加载核显，支持硬件解码，需要通过 ssh 进入 nas 中进行相关操作：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">chmod a+x /dev/dri</span><br><span class="line">docker create \</span><br><span class="line">  --name=emby \</span><br><span class="line">  --device /dev/dri:/dev/dri \</span><br><span class="line">  emby/embyserver:latest</span><br></pre></td></tr></table></figure><blockquote><p><code>coker create</code> 命令类似 <code>docker run</code> 命令，是创建一个容器，区别在于，后者会启动这个容器，前者不会启动这个容器。参考<a href="https://haicoder.net/docker/docker-create.html" target="_blank" rel="noopener">Docker create命令</a></p></blockquote><ol start="3"><li>在套件中心docker 套件中，设置容器配置</li></ol><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/vH2hlG.png" alt="常规配置"></p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/FQmdJ8.png" alt="存储空间"></p><p>第一列「文件/文件夹」是选择 nas 中的路径，「装载路径」是指容器中的路径，二者是一个映射关系，要确保 nas 中的路径给与对应用户权限。这些路径，可以看镜像文档作为参考。</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/M0wHxD.png" alt="端口设置"></p><p>da265c1209c81d4e9e286cdef08f9191</p><p>设置 nas 实际端口和容器中的端口映射关系，如图，安装好之后，实际访问地址就是 <code>&lt;nas ip 地址&gt;:8090</code>。</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/acqrhH.png" alt="环境"></p><p>通过 ssh 方式登录到 nas 后台，运行 <code>id &lt;用户名&gt;</code> 可以看到这些数据。<code>gidlist</code> 通过英文逗号配置 <code>gid</code> 的列表即可。</p><blockquote><p>这个非常关键，填写错误，emby 中媒体库将无法正确选择 NAS 中的文件</p></blockquote><h3 id="媒体库设置"><a href="#媒体库设置" class="headerlink" title="媒体库设置"></a>媒体库设置</h3><ul><li>首选图像下载语言：English，这样图片会相对更丰富、准确</li><li>元数据读取器：<code>Nfo</code></li><li>电影的元数据下载器：选择 <code>TheMovieDb</code>，并调整到第一位</li><li>元储存方式：勾选 <code>Nfo</code></li><li>将媒体图像保存到媒体所在文件夹：勾选</li><li>Series 元数据下载器：选择 <code>TheMovieDb</code>，并调整到第一位</li><li>字幕下载：勾选 Chinese 相关的三个，不仅仅勾选了简体</li><li>字幕下载器：勾选 Open Subtitles</li></ul><h3 id="参考-4"><a href="#参考-4" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://www.bilibili.com/video/BV19o4y1D7wb?from=search&amp;seid=15177155388035973937&amp;spm_id_from=333.337.0.0" target="_blank" rel="noopener">群晖dsm7.0系统docker安装emby教程及解码测试</a></li><li><a href="https://post.smzdm.com/p/ax0r7pe9/" target="_blank" rel="noopener">[群晖NAS]Docker安装&amp;使用EMBY全流程图文教程-长文</a></li><li><a href="https://www.bilibili.com/video/BV19o4y1D7wb?from=search&amp;seid=15177155388035973937&amp;spm_id_from=333.337.0.0" target="_blank" rel="noopener">群晖dsm7.0系统docker安装emby教程及解码测试</a></li><li><a href="https://www.bilibili.com/video/BV1ke411s7Dn?from=search&amp;seid=15177155388035973937&amp;spm_id_from=333.337.0.0" target="_blank" rel="noopener">Emby在群晖下开启核显硬解转码4K，黑裙6.2.3如何启用核显</a></li></ul><h2 id="PT"><a href="#PT" class="headerlink" title="PT"></a>PT</h2><h3 id="下载客户端"><a href="#下载客户端" class="headerlink" title="下载客户端"></a>下载客户端</h3><ul><li><a href="https://transmissionbt.com/" target="_blank" rel="noopener">Transmission</a> Linux/MacOS</li><li><a href="https://www.utorrent.com/downloads/mac" target="_blank" rel="noopener">uTorrent</a></li><li><a href="http://www.vuze.com/download.php" target="_blank" rel="noopener">Azureus</a></li></ul><h3 id="m-team"><a href="#m-team" class="headerlink" title="m-team"></a>m-team</h3><p>馒头，通过捐赠即可获得账号+1 个月的 VIP：</p><ul><li><a href="https://wiki.m-team.cc/index.php?title=%E5%B8%B3%E8%99%9F%E4%BF%9D%E7%95%99%E8%A6%8F%E5%89%87_Account_Parking_,_Keeping_Rules" target="_blank" rel="noopener">账号保留规则</a></li><li><a href="https://pt.m-team.cc/pay.php" target="_blank" rel="noopener">m-team 馒头捐赠页面</a></li><li><a href="https://kp.m-team.cc/index.p" target="_blank" rel="noopener">登录地址</a></li><li><a href="https://bbs.m-team.cc/" target="_blank" rel="noopener">M-Team 外站</a></li></ul><h2 id="Mac-Time-Machine-备份到-NAS"><a href="#Mac-Time-Machine-备份到-NAS" class="headerlink" title="Mac Time Machine 备份到 NAS"></a>Mac Time Machine 备份到 NAS</h2><p>参考群晖官网的设置，可以指定 NAS 的共享文件夹作为 Mac Time Machine 的备份文件存储磁盘，群晖官网的指导已经更新为 DSM 7.0，资料真是更新及时：</p><ul><li><a href="https://kb.synology.cn/zh-cn/DSM/tutorial/How_to_back_up_files_from_Mac_to_Synology_NAS_with_Time_Machine" target="_blank" rel="noopener">如何使用Time Machine将文件从Mac备份到Synology NAS？</a></li></ul><h2 id="NAS-教程"><a href="#NAS-教程" class="headerlink" title="NAS 教程"></a>NAS 教程</h2><ul><li><a href="https://www.huakings.cn/category/nas/8/" target="_blank" rel="noopener">花王群晖教程</a> 该</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://gitee.com/michael_xiang/images/raw/master/uPic/5ihVj4.png&quot; alt=&quot;NAS&quot;&gt;&lt;/p&gt;
&lt;p&gt;很早之前就听说过 NAS 设备，但是苦于一直在租房的状态（其实是穷），一直没有入手。今年终于搬到新家了，加上近期老婆抱怨手机存储空间不够，已经塞满了吉宝的照片和视频了，因此，终于狠心剁手了一台群晖 920+ 的 NAS 设备。&lt;/p&gt;
&lt;p&gt;本文主要就是围绕 NAS 到手后，我进行了哪些设置以及安装哪些好玩的套件。&lt;/p&gt;
    
    </summary>
    
      <category term="数码" scheme="https://michael728.github.io/categories/%E6%95%B0%E7%A0%81/"/>
    
    
      <category term="数码" scheme="https://michael728.github.io/tags/%E6%95%B0%E7%A0%81/"/>
    
      <category term="多媒体" scheme="https://michael728.github.io/tags/%E5%A4%9A%E5%AA%92%E4%BD%93/"/>
    
  </entry>
  
  <entry>
    <title>sdkman 来管理多 JDK 版本的环境</title>
    <link href="https://michael728.github.io/2021/05/18/tools-dev-sdkman/"/>
    <id>https://michael728.github.io/2021/05/18/tools-dev-sdkman/</id>
    <published>2021-05-18T23:21:24.000Z</published>
    <updated>2022-12-07T14:03:05.081Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/cIj20k.png" alt="sdkman"></p><p>[sdkman 官网]是这么介绍它的：</p><blockquote><p>SDKMAN! is a tool for managing parallel versions of multiple Software Development Kits on most Unix based systems.</p></blockquote><p>sdkman 是一个用来管理大多数类 Unix 系统（例如 Mac OSX、Linux、Cygwin等） SDK 多版本的。例如，现在个人机器上主要还是使用 JDK8 的版本，但是，突然有个项目（比如新版 Elasticsearch 7.10）需要更高版本的 JDK 版本，这时候怎么方便管理你机器上的 JDK 环境呢？</p><p>看完下文的操作，你就会用 sdkman 来灵活切换你 SDK 的版本，真的方便！</p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p>安装 sdkman：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -s &quot;https://get.sdkman.io&quot; | bash</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>打开新的终端窗口：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source &quot;$HOME/.sdkman/bin/sdkman-init.sh&quot;</span><br></pre></td></tr></table></figure></p><p>验证安装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sdk version</span><br></pre></td></tr></table></figure></p><p>sdkman 支持多达大约 29 个软件开发包管理，我们也可以使用  命令来查看支持的完整列表：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sdk list</span><br></pre></td></tr></table></figure></p><p>这个内容比较多，可以使用例如 <code>sdk list java</code> 列出我感兴趣的 <code>candidate</code> 版本。</p><p>管理本地已经安装的 JDK 版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sdk install java 1.8.0_231 /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home</span><br></pre></td></tr></table></figure></p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/tc4ZC6.png" alt="local"></p><blockquote><p>其实就是在 <code>/Users/michael/.sdkman/candidates/java</code> 路径下，创建一个软连接 <code>1.8.0_231</code> 指向了机器原本的 JDK 安装目录</p></blockquote><p>安装指定的版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sdk install java 16.0.0.hs-adpt</span><br></pre></td></tr></table></figure></p><p>临时使用指定版本（关闭终端之后失效）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sdk use java 1.8.0_231</span><br></pre></td></tr></table></figure></p><p>设置默认版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sdk default java 1.8.0_231</span><br></pre></td></tr></table></figure></p><p>查看当前使用的版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 查看 java 当前版本</span><br><span class="line">sdk current java</span><br><span class="line"># 查看所有版本</span><br><span class="line">sdk current</span><br></pre></td></tr></table></figure></p><p>卸载指定版本的包：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sdk uninstall java 16.0.0.hs-adpt</span><br></pre></td></tr></table></figure></p><blockquote><p>如果卸载之后想再次安装之前通过 sdkman 卸载的版本，此时不会再次重新下载，会提示 <code>Found a previously downloaded java 11.0.7.hs-adpt archive. Not downloading it again...</code>，因为之前删除操作并没有真正的从你计算机上删除源压缩包文件</p></blockquote><p>清理：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 清理广播消息</span><br><span class="line">sdk flush broadcast</span><br><span class="line"># 清理下载的 sdk 二进制文件</span><br><span class="line">sdk flush archives</span><br><span class="line"># 清理临时文件内容</span><br><span class="line">sdk flush temp</span><br></pre></td></tr></table></figure></p><p>升级 sdkman<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sdk selfupdate</span><br></pre></td></tr></table></figure></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://sdkman.io/usage#installspecific" target="_blank" rel="noopener">sdkman/Usage</a></li><li><a href="https://segmentfault.com/a/1190000022666856" target="_blank" rel="noopener">segmentfault/如何在一台计算机上安装多个 JDK 版本</a></li><li><a href="https://segmentfault.com/a/1190000021037771?utm_source=sf-similar-article" target="_blank" rel="noopener">segmentfault/Java升级那么快，多个版本如何灵活切换和管理？</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://gitee.com/michael_xiang/images/raw/master/uPic/cIj20k.png&quot; alt=&quot;sdkman&quot;&gt;&lt;/p&gt;
&lt;p&gt;[sdkman 官网]是这么介绍它的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SDKMAN! is a tool for managing parallel versions of multiple Software Development Kits on most Unix based systems.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;sdkman 是一个用来管理大多数类 Unix 系统（例如 Mac OSX、Linux、Cygwin等） SDK 多版本的。例如，现在个人机器上主要还是使用 JDK8 的版本，但是，突然有个项目（比如新版 Elasticsearch 7.10）需要更高版本的 JDK 版本，这时候怎么方便管理你机器上的 JDK 环境呢？&lt;/p&gt;
&lt;p&gt;看完下文的操作，你就会用 sdkman 来灵活切换你 SDK 的版本，真的方便！&lt;/p&gt;
&lt;h2 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h2&gt;&lt;p&gt;安装 sdkman：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -s &amp;quot;https://get.sdkman.io&amp;quot; | bash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ToolsDev" scheme="https://michael728.github.io/categories/ToolsDev/"/>
    
    
      <category term="开发环境" scheme="https://michael728.github.io/tags/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    
      <category term="JDK" scheme="https://michael728.github.io/tags/JDK/"/>
    
  </entry>
  
  <entry>
    <title>基于 IDEA 针对 Elasticsearch 7.10 源码 Debug</title>
    <link href="https://michael728.github.io/2021/05/17/es-code-debug/"/>
    <id>https://michael728.github.io/2021/05/17/es-code-debug/</id>
    <published>2021-05-17T23:09:45.000Z</published>
    <updated>2022-12-07T14:03:05.073Z</updated>
    
    <content type="html"><![CDATA[<h2 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a>源码下载</h2><p>ES 仓库地址：<a href="https://github.com/elastic/elasticsearch" target="_blank" rel="noopener">https://github.com/elastic/elasticsearch</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:elastic/elasticsearch.git</span><br><span class="line">git checkout 7.10</span><br></pre></td></tr></table></figure><p>看到其他人的经验，建议 fork 一下仓库，这样，在对源码进行阅读时，可以将注释等笔记，快速提交到自己的仓库中。</p><h2 id="本机环境"><a href="#本机环境" class="headerlink" title="本机环境"></a>本机环境</h2><p>ES 运行和编译所需要的 JDK 版本是需要分开讨论的。</p><ul><li>运行：只需要 Java 8 及以上版本即可</li><li>编译：如果是编译源码，对 JDK 的版本要求又高一点。一般在源码根目录下的 <code>CONTRIBUTING.md</code> 文件会有对于编译某个版本的 ES 需要的 JDK 的版本要求</li></ul><p>在 <a href="https://github.com/Michael728/elasticsearch/blob/7.10/CONTRIBUTING.md#contributing-to-the-elasticsearch-codebase" target="_blank" rel="noopener">ES 7.10 分支上</a>，是有如下的描述：</p><blockquote><p>JDK 14 is required to build Elasticsearch. You must have a JDK 14 installation with the environment variable JAVA_HOME referencing the path to Java home for your JDK 14 installation. By default, tests use the same runtime as JAVA_HOME. However, since Elasticsearch supports JDK 8, the build supports compiling with JDK 14 and testing on a JDK 8 runtime; to do this, set RUNTIME_JAVA_HOME pointing to the Java home of a JDK 8 installation. Note that this mechanism can be used to test against other JDKs as well, this is not only limited to JDK 8.</p></blockquote><p>简言之，ES 7.10 版本的编译需要 JDK 14 版本，必须有一个环境变量 <code>JAVA_HOME</code> 指向 JDK 14 的安装目录。默认情况，测试使用同样的 <code>JAVA_HOME</code>。同时，因为 ES 支持 JDK 8，构建支持用 JDK 14 编译，使用 JDK 8 测试。只需要设置一个 <code>RUNTIME_JAVA_HOME</code>  指向 JDK 8 的安装目录就行。</p><p><a href="https://sdkman.io/install" target="_blank" rel="noopener">sdkman</a> 管理不同的 JDK 版本，可以同时有多个 JDK 版本存在一台主机随时切换使用。</p><ul><li>jdk 的最低版本，在项目中的 <a href="https://github.com/Michael728/elasticsearch/tree/7.10/buildSrc/src/main/resources" target="_blank" rel="noopener">buildSrc/src/main/resources/minimumCompilerVersion</a> 文件中可以看到 <code>14</code>，用命令 <code>sdk install java 14.0.2.hs-adpt</code> 安装 JDK 14。此外，JDK 可以在<a href="https://mirrors.huaweicloud.com/openjdk/14/" target="_blank" rel="noopener">华为云镜像站</a>下载，速度比较块快</li><li>gradle 的最低版本，可以在项目的 <a href="https://github.com/Michael728/elasticsearch/blob/7.10/buildSrc/src/main/resources/minimumCompilerVersion" target="_blank" rel="noopener">buildSrc/src/main/resources/minimumGradleVersion</a> 文件下看到 <code>6.6.1</code></li></ul><h2 id="源码编译，导入-IDEA"><a href="#源码编译，导入-IDEA" class="headerlink" title="源码编译，导入 IDEA"></a>源码编译，导入 IDEA</h2><blockquote><p>一些文章比较久，依然让进入 ES 项目的根目录，运行如下命令 <code>./gradlew idea</code>，这个命令是为了配置 ES project 可以在 IDEA 中使用。目前，在 ES 7.10 版本的 <a href="https://github.com/elastic/elasticsearch/blob/7.10/CONTRIBUTING.md#importing-the-project-into-intellij-idea" target="_blank" rel="noopener">CONTRIBUTING.md#importing-the-project-into-intellij-idea</a> 中，已经略过了该步骤，可能是目前新版的 IDEA 已经自动支持了，不需要上面的步骤。</p></blockquote><ul><li>选择 <code>File &gt; Open</code></li><li>在对话框中选择根目录下的 <code>build.gradle</code> 文件</li><li>在对话框中选择 <code>Open as Project</code></li></ul><p>设置 <code>Project SDK</code> 为：JDK 14，这个步骤同时也会将 <code>Gradle JVM</code> 也设为 14。</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/RdBgz6.png" alt="Project SDK"></p><blockquote><p>如果本机网络环境不好，使用默认的 maven 源，速度可能比较慢，可以参考 <a href="https://zhuanlan.zhihu.com/p/188725714" target="_blank" rel="noopener">知乎/ElasticSearch-7.8.0 源码编译调试 (详细)</a> 进行 Gradle 源等的设置。</p></blockquote><p>点击侧边栏 Gradle 的 <code>Reload All Gradle Projects</code> 按钮，或者，打开根目录下的 <code>build.gradle</code> 文件，会有 <code>Load Gradle Changes</code> 按钮。这样会进行源码的构建（编译、下载依赖包等）。</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/sqMozN.png" alt="Build"></p><p>看到上图，则表示源码构建成功。</p><blockquote><p>关于 <a href="https://www.jetbrains.com/help/idea/gradle.html" target="_blank" rel="noopener">Roload All Gradle Projects</a>，IDEA 是有相关文档介绍的。</p></blockquote><h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><h3 id="远程调试"><a href="#远程调试" class="headerlink" title="远程调试"></a>远程调试</h3><p>当项目导入到 IDEA 之后，会看到有一个默认的 <code>Remote JVM Debug</code> 配置 <code>Debug Elasticsearch</code>，这个配置是无法修改的：</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/pQf2Id.png" alt="Debug"></p><p>启动的第一步骤就是先启动这个这个，点击 <code>Debug</code> 按钮就好。</p><p>接着，在项目根目录下运行如下命令，启动一个 ES 实例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./gradlew :run --debug-jvm</span><br><span class="line"># 如果是 Widows 平台，则运行如下命令</span><br><span class="line">./gradlew.bat :run --debug-jvm</span><br></pre></td></tr></table></figure></p><p>ES 实例启动完毕之后，用如下命令验证：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -u elastic:password localhost:9200</span><br></pre></td></tr></table></figure></p><p>上面的 <code>-u</code> 是授权验证 <code>user</code> 的作用，如果你尝试在浏览器中直接访问 <code>localhost:9200</code>，将会弹出对话框让你输入用户名和密码。此外，如果在 Postman 中访问的话，也需要设置 <code>Authorization</code>。</p><blockquote><p>之所有会需要授权认证，是因为开启了 xpack 的认证，</p></blockquote><p>其实，除了上面的这种 Remote Debug 之外，还可以通过<a href="https://mirrors.huaweicloud.com/elasticsearch/" target="_blank" rel="noopener">华为云镜像站点</a> 下载源码对应的 ES 客户端，然后启动客户端之后，<code>attach</code> 到进程中开始调试。下面简要介绍一下步骤：</p><ul><li>调整 ES 客户端的 config 目录下的 <code>jvm.options</code> 文件，加入 JVM 的配置参数：<code>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005</code></li><li>启动 ES 客户端：<code>./elasticsearch</code>，Windows 客户端是：<code>./elasticsearch.bat</code></li><li>创建一个 Remote 的远程启动配置：</li></ul><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/VwR3OT.png" alt="Remote"></p><h3 id="源码调试"><a href="#源码调试" class="headerlink" title="源码调试"></a>源码调试</h3><p>源码调试的步骤比较繁琐，没有上面的方式方便。</p><p>提前在 <a href="https://mirrors.huaweicloud.com/elasticsearch/" target="_blank" rel="noopener">华为云镜像站点</a> 下载好源码对应版本的 ES 客户端安装包，解压好。</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/iBzX4d.png" alt="ES Client"></p><p>在 IDEA 中创建一个 Application 启动配置：</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/YApR8g.png" alt="Application"></p><p>VM options 如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-Des.path.home=/Users/michael/opt/es/elasticsearch-7.10.2</span><br><span class="line">-Des.path.conf=/Users/michael/opt/es/elasticsearch-7.10.2/config</span><br><span class="line">-Dlog4j2.disable.jmx=true</span><br><span class="line">-Xmx4g</span><br><span class="line">-Xms4g</span><br></pre></td></tr></table></figure></p><ul><li><code>Des.path.home</code> 指刚刚 ES 客户端的解压根目录</li><li><code>Des.path.conf</code> 指刚刚 ES 客户端解解压目录下的配置目录路径</li></ul><p>需要打开你 <code>Project SDK</code> 设置的 JDK 目录中 <code>conf/security/java.policy</code> 的文件，例如我本机就是 <code>/Users/michael/.sdkman/candidates/java/14.0.2.hs-adpt/conf/security/java.policy</code> 文件，在 <code>grant</code> 括号中，添加如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">permission java.lang.RuntimePermission &quot;createClassLoader&quot;;</span><br><span class="line">permission java.lang.RuntimePermission &quot;setContextClassLoader&quot;;</span><br></pre></td></tr></table></figure><blockquote><p>上面的设置，是为了避免遇到 <code>org.elasticsearch.bootstrap.StartupException: java.security.AccessControlException: access denied (&quot;java.lang.RuntimePermission&quot; &quot;createClassLoader&quot;)</code>、和 <code>java.security.AccessControlException: access denied (&quot;java.lang.RuntimePermission&quot; &quot;createClassLoader&quot;)</code> 的报错</p></blockquote><p>经过上面的设置，就可以通过启动主类的方式成功启动了。</p><h3 id="断点"><a href="#断点" class="headerlink" title="断点"></a>断点</h3><p>断点加在 <code>org/elasticsearch/rest/action/search/RestSearchAction.java</code> 137 行，执行搜索就会进入断点。</p><h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><h3 id="JDK-16-isn’t-compatible-with-Gradle-6-6-1-Please-fix-JAVA-HOME-environment-variable"><a href="#JDK-16-isn’t-compatible-with-Gradle-6-6-1-Please-fix-JAVA-HOME-environment-variable" class="headerlink" title="JDK 16 isn’t compatible with Gradle 6.6.1, Please fix JAVA_HOME environment variable"></a>JDK 16 isn’t compatible with Gradle 6.6.1, Please fix JAVA_HOME environment variable</h3><p>这是因为 Gradle JVM 的版本与 Gradle 版本不兼容，可以在 IDEA 的 <code>Build Tools</code> -&gt; <code>Gradle</code> 中进行设置：</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/ogkPZx.png" alt="gradle jvm"></p><blockquote><p>发现关于 JDK 的设置，当你设置了 <code>Project SDK</code>  的 JDK 版本，这里的 <code>Gradle JVM</code> 将会自动和前者保持保持一致。</p></blockquote><p>参考：</p><ul><li><a href="https://intellij-support.jetbrains.com/hc/en-us/community/posts/360008588420-Found-Invalid-Gradle-JVM-configuration" target="_blank" rel="noopener">Found Invalid Gradle JVM configuration</a></li></ul><h3 id="unsupported-class-file-major-version-60"><a href="#unsupported-class-file-major-version-60" class="headerlink" title="unsupported class file major version 60"></a>unsupported class file major version 60</h3><p>解决这个问题，还是采用上面描述的方法，设置正确 <code>Gradle JVM</code>  版本。</p><ul><li><a href="https://stackoverflow.com/questions/67079327/how-to-fix-unsupported-class-file-major-version-60-in-intellij" target="_blank" rel="noopener">Stackoverflow/How to fix “unsupported class file major version 60” in IntelliJ?</a></li></ul><h3 id="gradle-出现-Connection-refused-Connection-refused-问题"><a href="#gradle-出现-Connection-refused-Connection-refused-问题" class="headerlink" title="gradle 出现 Connection refused (Connection refused) 问题"></a>gradle 出现 Connection refused (Connection refused) 问题</h3><p>与网络有问题，检查 Proxy 是否联通，总之，要保证下载依赖的网络畅通。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/188725714" target="_blank" rel="noopener">知乎/ElasticSearch-7.8.0 源码编译调试 (详细)</a> 推荐</li><li><a href="https://icbd.github.io/IntelliJ-debug-elasticsearch-source-code/" target="_blank" rel="noopener">CBD Blog/IntelliJ debug elasticsearch 7.10 source code</a></li><li><a href="https://segmentfault.com/a/1190000023647742" target="_blank" rel="noopener">segmentfault/讲得最明白的Elasticsearch源码调试环境搭建教程</a> ES 7.1.0 版本的笔记</li><li><a href="https://juejin.cn/post/6844903663807234061" target="_blank" rel="noopener">小旋锋/教你编译调试Elasticsearch 6.3.2源码</a></li><li><a href="https://lanffy.github.io/2019/04/08/Elasticsearch-Compile-Source-And-Debug" target="_blank" rel="noopener">lanffy/ElasticSearch源码解读一：源码编译和Debug环境搭建</a> ES 6.7.0 的版本，该博主围绕 ES 写了不少总结</li><li><a href="https://elasticsearch.cn/question/8243" target="_blank" rel="noopener">idea源码调试的问题/java.lang.NoClassDefFoundError: org/elasticsearch/plugins/ExtendedPluginsClassLoader</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;源码下载&quot;&gt;&lt;a href=&quot;#源码下载&quot; class=&quot;headerlink&quot; title=&quot;源码下载&quot;&gt;&lt;/a&gt;源码下载&lt;/h2&gt;&lt;p&gt;ES 仓库地址：&lt;a href=&quot;https://github.com/elastic/elasticsearch&quot; tar
      
    
    </summary>
    
      <category term="ELK" scheme="https://michael728.github.io/categories/ELK/"/>
    
    
      <category term="DevOps" scheme="https://michael728.github.io/tags/DevOps/"/>
    
      <category term="Jenkins" scheme="https://michael728.github.io/tags/Jenkins/"/>
    
      <category term="CICD" scheme="https://michael728.github.io/tags/CICD/"/>
    
  </entry>
  
  <entry>
    <title>Tivo Stream TV 使用笔记</title>
    <link href="https://michael728.github.io/2021/04/25/digital-products-tivo-tv/"/>
    <id>https://michael728.github.io/2021/04/25/digital-products-tivo-tv/</id>
    <published>2021-04-25T21:29:08.000Z</published>
    <updated>2022-12-07T14:03:05.073Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>搬到新家之后，陆续购入了若干大件电器，其中，电视机作为家庭客厅的一个重要输出终端设备，经过综合比较，最后剁手了小米电视大师 82 寸 4K 的版本。同期，红米也新推出了一款 86 寸的电视。但是，硬件貌似并没有大师系列好，同时，红米的这款不支持远场语音功能，每次要呼叫小爱同学，还需要找到遥控器然后语音控制，不方便。</p><p>目前国产电视机的硬件性能其实都还 OK，个人觉得影响观看体验的重要因素反而是片源！国内「优爱腾」流媒体的质量还有待提高，2K/4K 的片源质量堪忧，甚至 1080P 的片源都不行。因为小米电视并不是 Netflix 认证的设备，是无法直接安装 Netflix 官方 APP 的。因此，决定购入一个国外的电视盒子——TiVo Stream TV 盒子，然后在它上面安装 Netflix、Youtube 等 APP 观看世界各地高质量的片源了。</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/bncTZ6.png" alt="效果"></p><p>上图就是效果图啦，美滋滋，顺带安利一部剧《纸钞屋》，西班牙剧真是给力！</p><a id="more"></a><h2 id="背景知识"><a href="#背景知识" class="headerlink" title="背景知识"></a>背景知识</h2><p>Netflix 在未进行 DRM（即 Digital Rights Management 数字版权管理） 认证的设备上无法提供高清播放。Netflix 官方帮助教程列出了支持 HD 以及 HDR 的 安卓设备。在 <a href="https://help.netflix.com/en/node/23939/cn" target="_blank" rel="noopener">Netflix is available in HD on the Android phones below.</a> 的页面，可以查看哪些安卓平板、安卓手机设备是可以播放 Netflix 高清视频的。</p><p>在播放 Netflix 的问题上，电视盒子的标准比上面的 DRM 认证更为严格。设备必须经过 Netflix 认证才能正常安装和播放 Netflix。在<a href="https://devices.netflix.com/en/recommendedtv/2020/#tvs" target="_blank" rel="noopener">2020 Netflix Recommended TVs</a>的页面，看到了 Netflix 推荐的热门电视设备。</p><p>哪些电视盒子是 Netflix 认证的设备呢？在这个网址查询：<a href="https://www.androidtv-guide.com/streaming-gaming/netflix-amazon-atv-certified" target="_blank" rel="noopener">Both Netflix &amp; Prime Video Certified Android TV Streaming Players</a></p><h2 id="Tivo-TV-激活"><a href="#Tivo-TV-激活" class="headerlink" title="Tivo TV 激活"></a>Tivo TV 激活</h2><p>Tivo TV 设置激活：</p><ul><li><a href="https://didiboy0702.gitbook.io/wukongdaily/test/ru-he-ji-huo-tivo-stream-4k" target="_blank" rel="noopener">悟空/如何激活Tivo Stream 4K</a></li><li><a href="https://www.youtube.com/watch?v=Rxv0E3kMa4Y" target="_blank" rel="noopener">悟空/Tivo Stream 4K 电视盒子开箱加9步长测评</a></li></ul><h2 id="ADB-工具"><a href="#ADB-工具" class="headerlink" title="ADB 工具"></a>ADB 工具</h2><p>为了解决盒子时间不正确以及提示网络不能联网的问题，需要用到 ADB 工具连接盒子进行设置。</p><p>ADB 各种客户端：</p><ul><li>谷歌应用商店安装 <code>Remote ADB Shell</code>，可以通过手机来进行对 TV 盒子的设置</li><li>Windows 平台也有对应的 ADB 工具，查看 <a href="https://adbshell.com/" target="_blank" rel="noopener">ADB Shell</a>、<a href="https://drive.google.com/drive/folders/1PIT3issyC3qD_mjt9HRVJkM2qTlphXWk" target="_blank" rel="noopener">悟空分享的网盘</a></li><li>Mac：<code>brew install android-platform-tools</code></li></ul><p>下载好 ADB 工具之后，怎么连接电视盒子？</p><ul><li>查看设置，查看系统版本，连续点击「内部版本号」，开启开发者选项</li><li>在开发者选项里，打开网络调试/USB调试开关</li><li>查看电视盒子连接的 WiFi 网络，获取电视盒子的链接 IP</li><li><code>adb connect IP</code></li></ul><blockquote><p>电视盒子的ADB开关通常有以下几个名字，例如USB调试开关，远程调试开关、网络调试开关</p></blockquote><h2 id="可以正常访问奈菲，但是无法观看-youtube"><a href="#可以正常访问奈菲，但是无法观看-youtube" class="headerlink" title="可以正常访问奈菲，但是无法观看 youtube"></a>可以正常访问奈菲，但是无法观看 youtube</h2><p>看一下你的 TV 盒子的系统时间，肯定于当前时间不一致，youtube 会有时间验证，临时的解决办法是打开“设置”-“设备偏好设置”，然后找到“日期和时间”，关闭“自动确定日期和时间”，然后手动更改的时间和日期为当前的正确时间。</p><p>一劳永逸的方法是去更改时间同步服务器。</p><h3 id="修改时间服务器"><a href="#修改时间服务器" class="headerlink" title="修改时间服务器"></a>修改时间服务器</h3><ul><li><a href="https://www.bilibili.com/video/av286661109/" target="_blank" rel="noopener">安卓原生电视/盒子 出现已连接但无法访问 要怎么解决？根治请看这里！</a></li></ul><p>修复盒子时间不对的问题，因为时间不对，可能会影响证书验证：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 查看盒子 NTP Server</span><br><span class="line">adb shell settings get global ntp_server</span><br><span class="line"><span class="meta">#</span> 设置 NTP Server</span><br><span class="line">adb shell settings put global ntp_server ntp1.aliyun.com</span><br></pre></td></tr></table></figure></p><h2 id="此-WLAN-网络无法连接到互联网"><a href="#此-WLAN-网络无法连接到互联网" class="headerlink" title="此 WLAN 网络无法连接到互联网"></a>此 WLAN 网络无法连接到互联网</h2><p>Tivo TV 盒子弹出：您所连接的 WLAN 网络无法访问互联网。</p><p>虽然弹出上面的提示，但是实际上有些 APP 是可以正常上网的，唯独 Youtube 就无法打开，显示”现在无法联网“！</p><h3 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h3><p>谷歌从 Android 5.0 开始就引入了 <code>Captive Portal</code> 机制，主要用来检测 WiFI 网络认证是否正常，默认检测访问的是谷歌服务器（<code>gstatic.com/google.com</code>）。通过HTTP返回的状态码是否是 204 来判断是否成功，如果访问得到了 200 带网页数据，那你就可能处在一个需要登录验证才能上网的环境里，比如说校园网，再比如说一些酒店提供的客户才能免费使用的WiFi(其实是通过DNS劫持实现的)，如果连接超时(根本就连接不上)就在 WiFi 图标和信号图标上加一个标志，安卓5和6是叹号，安卓7改成一个叉了。只不过默认访问的是谷歌自家的验证服务器，然而由于你懂的原因，就算你连接上了网络也连不上这个服务器。这就是所说的 <code>generate_204</code> 的问题。</p><p>国内安卓手机系统都会修改成自家的服务器地址或者高通中国的地址，以此来实现该功能。</p><h3 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 查看当前状态：</span><br><span class="line">adb shell settings get global captive_portal_mode</span><br><span class="line"># 关闭检测：</span><br><span class="line">adb shell settings put global captive_portal_mode 0</span><br><span class="line"># 查看机器已有的验证服务器，方便备份 </span><br><span class="line">adb shell settings get global captive_portal_http_url</span><br><span class="line">adb shell settings get global captive_portal_https_url</span><br><span class="line"># 删除验证服务器</span><br><span class="line">adb shell settings delete global captive_portal_http_url</span><br><span class="line">adb shell settings delete global captive_portal_https_url</span><br><span class="line"># 设置验证服务器</span><br><span class="line">adb shell settings put global captive_portal_http_url http://www.google.cn/generate_204</span><br><span class="line">adb shell settings put global captive_portal_https_url https://www.google.cn/generate_204</span><br></pre></td></tr></table></figure><p>小米的验证服务器在国内应该是延迟最低的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">settings put global captive_portal_http_url http://connect.rom.miui.com/generate_204</span><br><span class="line">settings put global captive_portal_https_url https://connect.rom.miui.com/generate_204</span><br></pre></td></tr></table></figure></p><p>验证服务器：</p><ul><li>华为： <a href="http://connectivitycheck.platform.hicloud.com/generate_204" target="_blank" rel="noopener">http://connectivitycheck.platform.hicloud.com/generate_204</a></li><li>Vivo： <a href="http://wifi.vivo.com.cn/generate_204" target="_blank" rel="noopener">http://wifi.vivo.com.cn/generate_204</a></li><li>小米：<a href="http://connect.rom.miui.com/generate_204" target="_blank" rel="noopener">http://connect.rom.miui.com/generate_204</a></li><li>Google 大陆： <a href="http://www.google.cn/generate_204" target="_blank" rel="noopener">www.google.cn/generate_204</a></li></ul><blockquote><p>给 captive_portal_https_url 赋值，改为 https 链接</p></blockquote><p>以上设置了不一定能解决问题，可能还需要清理 play 数据和缓存，重启盒子。</p><blockquote><p>其实上面步骤在我的软路由环境下不存在，因为很多科学插键的代理域名中已经包含了谷歌那个验证服务器的域名，因此，TV 盒子就不会报错误了。</p></blockquote><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://ericclose.github.io/Captive-Portal-Android.html" target="_blank" rel="noopener">原生 Android 网络去叉／叹号 Android 5.0 - 10.0</a></li><li><a href="http://www.moxishuma.cn/index.php/archives/32/" target="_blank" rel="noopener">摩西数码/shield tv无法访问互联网无法观看youtube/无线ADB教程</a></li><li><a href="https://a-li.me/844.html" target="_blank" rel="noopener">记录一次 Android TV 网络访问排障</a></li><li><a href="https://www.youtube.com/watch?v=Hsmp0IfCZfw" target="_blank" rel="noopener">油管悟空/Shield TV 出现已连接但无法访问 要怎么解决？Android TV的通用解决办法看这里！再说一遍~</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;搬到新家之后，陆续购入了若干大件电器，其中，电视机作为家庭客厅的一个重要输出终端设备，经过综合比较，最后剁手了小米电视大师 82 寸 4K 的版本。同期，红米也新推出了一款 86 寸的电视。但是，硬件貌似并没有大师系列好，同时，红米的这款不支持远场语音功能，每次要呼叫小爱同学，还需要找到遥控器然后语音控制，不方便。&lt;/p&gt;
&lt;p&gt;目前国产电视机的硬件性能其实都还 OK，个人觉得影响观看体验的重要因素反而是片源！国内「优爱腾」流媒体的质量还有待提高，2K/4K 的片源质量堪忧，甚至 1080P 的片源都不行。因为小米电视并不是 Netflix 认证的设备，是无法直接安装 Netflix 官方 APP 的。因此，决定购入一个国外的电视盒子——TiVo Stream TV 盒子，然后在它上面安装 Netflix、Youtube 等 APP 观看世界各地高质量的片源了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gitee.com/michael_xiang/images/raw/master/uPic/bncTZ6.png&quot; alt=&quot;效果&quot;&gt;&lt;/p&gt;
&lt;p&gt;上图就是效果图啦，美滋滋，顺带安利一部剧《纸钞屋》，西班牙剧真是给力！&lt;/p&gt;
    
    </summary>
    
      <category term="数码" scheme="https://michael728.github.io/categories/%E6%95%B0%E7%A0%81/"/>
    
    
      <category term="数码" scheme="https://michael728.github.io/tags/%E6%95%B0%E7%A0%81/"/>
    
      <category term="多媒体" scheme="https://michael728.github.io/tags/%E5%A4%9A%E5%AA%92%E4%BD%93/"/>
    
  </entry>
  
  <entry>
    <title>R4S 使用笔记</title>
    <link href="https://michael728.github.io/2021/04/24/digital-products-r4s/"/>
    <id>https://michael728.github.io/2021/04/24/digital-products-r4s/</id>
    <published>2021-04-24T23:21:24.000Z</published>
    <updated>2022-12-07T14:03:05.073Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>为了让新家的网络可以自由访问各大流媒体资源，以及方便自己开发环境中下载各种国外资源依赖软件包等，购入了 R4S 软路由设备。</p><a id="more"></a><h2 id="固件下载"><a href="#固件下载" class="headerlink" title="固件下载"></a>固件下载</h2><ul><li><a href="https://wiki.friendlyarm.com/wiki/index.php/NanoPi_R4S/zh#.E4.B8.8B.E8.BD.BD.E7.B3.BB.E7.BB.9F.E5.9B.BA.E4.BB.B6" target="_blank" rel="noopener">官方固件/NanoPi R4S/zh</a> 对应的<a href="https://pan.baidu.com/share/init?surl=IVKSPo5m4SGGh8z_hY_hTg" target="_blank" rel="noopener">网盘地址/5fd2</a></li><li><a href="https://github.com/QiuSimons/R2S-R4S-X86-OpenWrt" target="_blank" rel="noopener">QiuSimons/R2S-R4S-X86-OpenWrt</a> 404 大佬的</li><li><a href="https://github.com/klever1988/nanopi-openwrt" target="_blank" rel="noopener">klever1988/nanopi-openwrt</a> Star 数量比较高</li><li><a href="https://github.com/SuLingGG/OpenWrt-Rpi" target="_blank" rel="noopener">SuLingGG/OpenWrt-Rpi</a> Star 数量比较高，但是我的 R4S 每次安装完都无法联网</li><li><a href="https://bigdongdong.gitbook.io/nanopi-r2s/r4s-gu-jian-ji-gong-ju-xia-zai" target="_blank" rel="noopener">Dongdong/R4S第三方固件</a> </li><li><a href="https://github.com/DHDAXCW/NanoPi-R4S-2021/releases/" target="_blank" rel="noopener">骷髅头/DHDAXCW/NanoPi-R4S-2021</a> </li></ul><blockquote><p>语雀上有个文章总结的挺好，推荐 <a href="https://www.yuque.com/friendlyelec/r2s/gd4g3l" target="_blank" rel="noopener">NanoPi-R2S / NanoPi-R4S 常见第三方固件选择</a></p></blockquote><p>如果想自己编译固件，可以看如下资源：</p><ul><li><a href="https://github.com/coolsnowwolf/lede" target="_blank" rel="noopener">coolsnowwolf/lede</a> Lean的Openwrt源码仓库，高 Star 项目</li></ul><h3 id="固件格式说明"><a href="#固件格式说明" class="headerlink" title="固件格式说明"></a>固件格式说明</h3><ul><li>文件名带有 <code>ext4</code> 的固件，表示搭载 <code>ext4</code> 文件系统固件，适合熟悉 Linux 的用户使用</li><li>文件名带有 <code>squashfs</code> 的固件，表示搭载 <code>squashfs</code> 文件系统固件，适用于不折腾的用户，优点是方便系统还原</li><li>文件名带有 <code>sysupgrade</code> 的固件，表示是升级 OpenWRT 所用的固件，无需解压 <code>gz</code> 文件，可以在面板中升级</li><li>文件名带有 <code>factory</code> 的固件，表示全新安装 OpenWRT 所用的固件。</li></ul><p>参考：<a href="https://bigdongdong.gitbook.io/nanopi-r2s/r4sotherfirmware" target="_blank" rel="noopener">bigdongdong-R4S第三方固件</a></p><h2 id="刷固件"><a href="#刷固件" class="headerlink" title="刷固件"></a>刷固件</h2><ul><li><a href="https://www.youtube.com/watch?v=ZCmbbnIBD78" target="_blank" rel="noopener">洋葱油管/R2S软路由销量之王！R2S安装openwrt攻略 openwrt软路由设置</a></li><li><a href="https://www.youtube.com/watch?v=UYl-dgrPnTI&amp;t=114s" target="_blank" rel="noopener">DongDong/R2S 使用指南</a></li></ul><p>刷固件的软件：</p><ul><li><a href="https://www.balena.io/etcher/?ref=etcher_footer" target="_blank" rel="noopener">balenaEtcher</a></li><li><a href="https://bigdongdong.gitbook.io/nanopi-r2s/" target="_blank" rel="noopener">bigdongdong/R2S/R4S 使用指导</a></li></ul><p>写盘工具：可以使用 Rufus 或者 balenaEtcher，其实，就和之前做 Linux 启动盘一样，就是拿着固件镜像文件做一个启动盘。</p><p>注意点：刷完固件的 TF 卡下次插入电脑，可能会弹出需要格式化，千万不要进行格式化，否则可能会丢失容量。下次刷固件，不用格式化就可以直接刷固件即可！</p><p>balenaEtcher 刷固件</p><ol><li>select image：选择要刷入的固件</li><li>select dirve：选择 tf 卡，也就是要将固件刷入的存储介质</li><li>flash：开始刷入固件</li></ol><p>刷好固件的 TF 卡插入 R4S，SYS 灯常亮之后，通过一根网线将 R4S 的 LAN 口和电脑连接。</p><p>接着就可以打开 R4S 的后台，浏览器访问 192.168.2.1（有的固件访问地址是 192.168.1.1，甚至 WAN 口 和 LAN 口都交换了，需要认证阅读文档）：</p><ul><li>用户名 root</li><li>密码 password</li></ul><p>至此， R4S 的系统已经安装启动完毕，接着开始配置网络。</p><h2 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h2><p>要搞清楚是猫拨号还是路由器拨号。进入路由器后台观察它的上网方式设置，如果是 DHCP 的方式，则表示是光猫拨号上网的方式。</p><p>连接设备：光猫的线接入 R4S 的 WAN 口，然后用网线将 R4S 的 LAN 口和路由器的 WAN 口相连。</p><blockquote><p>个人理解，WAN 口就是信号的入口，LAN 口就是信号的出口，这么理解，就知道上面为何这么连接了。</p></blockquote><p>备注：路由器的上网方式其实就是对 WAN 口进行设置，局域网设置的就是对 LAN 口设置的。</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/8TOcgI.png" alt="网络接线"></p><blockquote><p>图片来自 <a href="https://www.yuque.com/friendlyelec/r2s/fh1msa" target="_blank" rel="noopener">语雀/NanoPi R2S / R4S 软路由常见网络接线指引</a></p></blockquote><h3 id="将无线路由器改为无线交换机，有线中继模式"><a href="#将无线路由器改为无线交换机，有线中继模式" class="headerlink" title="将无线路由器改为无线交换机，有线中继模式"></a>将无线路由器改为无线交换机，有线中继模式</h3><p>所有设备都在一个局域网，没有路由功能，少一次转发</p><p>判断路由器是否支持场景二的设置：登录路由器后台，判断路由器是否支持无线接入点（AP）模式/有线中继模式，他们一样，只是叫法不同。</p><blockquote><p>小米路由器在上网设置菜单下有工作模式的切换</p></blockquote><p>后台管理地址一定要记住：重启之后，这台路由器就不是路由器了，就是一台无线交换机，以后，路由器的网口没有 WAN 口和 LAN 区分了。</p><ul><li>如果是光猫拨号，网络接口的 WAN 协议就是 DHCP 客户端</li><li>如果是软路由拨号上网，就切成 PPPoE，配置宽带账号密码（填好重启光猫）</li></ul><h2 id="路由器设置"><a href="#路由器设置" class="headerlink" title="路由器设置"></a>路由器设置</h2><ul><li><a href="https://blog.qust.me/posts/nanopir4s/" target="_blank" rel="noopener">NanoPi R4S 上手体验</a> 介绍了 OpenClash 的使用，简略</li><li><a href="https://didiboy0702.gitbook.io/wukongdaily/" target="_blank" rel="noopener">资料：悟空的日常</a></li><li>测速网站：<a href="https://fast.com/zh/cn/" target="_blank" rel="noopener">https://fast.com/zh/cn/</a></li></ul><h3 id="设置桥接模式"><a href="#设置桥接模式" class="headerlink" title="设置桥接模式"></a>设置桥接模式</h3><p>如果为了让软路由的 IP 和家里联网设备都处于同一网段，那么，可以将路由器设为桥接模式，这样，路由器就相当于 AP，接入路由器的设备不会处于另外的网段。方便在软路由中针对具体的 IP 设备进行联网控制。</p><p>小米路由器进入后台：常用设置-》上网设置-》工作模式切换，选择「有线中继工作模式」：</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/qP6Vec.png" alt="工作模式"></p><blockquote><p>要记住改为中继模式后的管理后台 IP</p></blockquote><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/T8y7cW.png" alt="管理台"></p><h2 id="Passwall-使用"><a href="#Passwall-使用" class="headerlink" title="Passwall 使用"></a>Passwall 使用</h2><h3 id="基本设置"><a href="#基本设置" class="headerlink" title="基本设置"></a>基本设置</h3><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/izrusV.png" alt="启用"></p><ul><li>UDP 一般选择与 TCP 节点一致</li><li>需要勾选「主开关」保存并应用才真正启用</li></ul><p>模式</p><ul><li>TCP 默认代理模式：一般选择「中国列表以外」</li><li>UDP 默认代理模式：默认是「游戏模式」</li><li>路由器自身 TCP 代理模式：</li><li>路由器自身 UDP 代理模式：</li></ul><p>选项说明：</p><ul><li>不代理：不启用代理</li><li>全局代理：全部网站走代理</li><li>GFW 列表：仅那些被屏蔽的网站走代理</li><li>中国列表以外：只要是外国的都走代理</li><li>中国列表：这个模式一般是国外的用于访问国内网站的，暂时用不到</li></ul><h3 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h3><p>控制连接到局域网中的设备，主要是控制他们使用什么节点或者什么模式来访问网络。</p><blockquote><p>要能控制这些设备，有个前提，这些设备要和软路由在同一网段下。</p></blockquote><p>一般家庭网络布置是如下的：</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/Zi5HbO.png" alt="光猫拨号"></p><p>上面这种方式，路由器一般是 「DHCP 方式/动态 IP」。只能保证无线接入的设备和路由器在一个网段，但是，路由器和软路由并不在一个网段。这种情况，「访问控制」是无法使用的，因为对于软路由来说，只有路由器这个设备是它能控制的。除此以外，还多了一个缺点，多了一次转发。</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/sSGwHY.png" alt="推荐模式"></p><p>上图是 UP 主推荐的模式，避免家中网段过多，光猫改为桥接模式，软路由负责拨号，路由器设为「AP模式/桥接模式/有线中继模式」。这样设置，设备就处于同一网段下了。此时，路由器就类似是一个交换机的角色，他不会像 DHCP 那样，产生一个新的网段。</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/iZOSy2.png" alt="简化"></p><p>有时候运宽带运营商是不推荐让光猫改为桥接模式，因为改为桥接模式他们没法直接后台操作网络，升级等。现在光猫的性能都不差，也没必要非要改为桥接模式，让其他设备拨号。上图的模式就比较方便，仅仅是将路由器的模式修改为「AP模式/桥接模式/有线中继模式」，路由器连接的设备也可以和软路由处在同一网段。</p><p>如下的设置，可以实现局域网内某些设备是否可以走代理：</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/nsCBOu.png" alt="示例"></p><p>比如我们使用的 NAS，一般都是国外厂商的，当我们模式选择「中国列表以外」时，一般他们的网站都会被代理，这时候想让他们不走代理或者为GFW 列表的方式，就可以使用访问控制的功能来设置了。</p><h3 id="自动切换"><a href="#自动切换" class="headerlink" title="自动切换"></a>自动切换</h3><p>自动切换功能就是添加若干个备用节点，当其中一个节点不可用，会自动切换到备用节点，实现「高可用」。</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/uruSYQ.png" alt="自动切换"></p><h3 id="直连-代理名单管理"><a href="#直连-代理名单管理" class="headerlink" title="直连/代理名单管理"></a>直连/代理名单管理</h3><ul><li>直连列表：可以实现加入的 域名/IP 不走代理，这就可以让一些防火墙中的网址依然不能访问，对所有模式生效，优先级最高</li><li>代理列表：加入的 域名/IP 将走代理；</li><li>屏蔽列表：加入的 域名/IP 将屏蔽；</li></ul><p>举例，<code>https://www.speedtest.net/</code> 这个测速网站是国外网站，如果在使用代理的情况，默认会是在国外节点进行测速，如果我们将它加到「直连列表」中，则会测量我们家中实际运营商的网速，这才是我们关心的：</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/FjVAl8.png" alt="测速示例"></p><h3 id="高级设置"><a href="#高级设置" class="headerlink" title="高级设置"></a>高级设置</h3><p>设置节点数量，可以使用多个 TCP 节点，然后配合上面介绍的访问控制，可以实现针对某个设备指定使用某个节点：</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/TnR7eT.png" alt="节点数量"></p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/uHBDsU.png" alt="指定节点"></p><blockquote><p>例如使用某些不限流量的节点给 NAS 云盘备份使用</p></blockquote><h3 id="分流"><a href="#分流" class="headerlink" title="分流"></a>分流</h3><p>实现让特定的网站使用指定的节点，比如奈菲使用新加坡节点，油管使用香港节点。</p><p>只需要在「节点列表」-》「添加」，按照如下示例选择：</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/TP1VOf.png" alt="分流"></p><p>当创建好这个「分流节点」之后，需要在「基本设置」中，选择我们刚刚创建的这个节点。这样，就可以实现分流了。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://www.youtube.com/watch?v=qkga9DN5H08&amp;t=7s" target="_blank" rel="noopener">油管/使用PassWALL 完美掌控内网科学上网</a></li></ul><h2 id="OpenClash"><a href="#OpenClash" class="headerlink" title="OpenClash"></a>OpenClash</h2><h3 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h3><h4 id="模式设置"><a href="#模式设置" class="headerlink" title="模式设置"></a>模式设置</h4><ul><li>运行模式：选择混合模式</li></ul><h4 id="基本设置-1"><a href="#基本设置-1" class="headerlink" title="基本设置"></a>基本设置</h4><ul><li>绑定网络接口：选中系统默认接口</li></ul><h4 id="规则设置"><a href="#规则设置" class="headerlink" title="规则设置"></a>规则设置</h4><h4 id="DNS-设置"><a href="#DNS-设置" class="headerlink" title="DNS 设置"></a>DNS 设置</h4><ul><li>本地 DNS 劫持：勾选</li><li>禁止 Dnsmasq 缓存 DNS：勾选</li></ul><h4 id="版本更新"><a href="#版本更新" class="headerlink" title="版本更新"></a>版本更新</h4><p>可以「一键检查更新」</p><h3 id="配置文件订阅"><a href="#配置文件订阅" class="headerlink" title="配置文件订阅"></a>配置文件订阅</h3><p>如果机场订阅地址仅有 SSR 的，则需要进行在线订阅转换.</p><ul><li>订阅转换模板可以选择<code>ACL4SSR 规则 Online Full</code></li><li>添加 Emoji：启用</li><li>UDP 支持：启用</li></ul><p>勾选添加的规则，应用配置</p><p>OpenClash 的控制面板，里面的代理界面可以看到可以针对不同用途进行不同策略的配置，而且，策略的选择之间其实是一种指向关系。</p><p>比如，电报消息走的是「自动选择」，然后「自动选择」又指向了具体的某个节点。</p><h3 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://www.youtube.com/watch?v=OCMKRGnncWU" target="_blank" rel="noopener"></a></li></ul><h2 id="软路由设置重启"><a href="#软路由设置重启" class="headerlink" title="软路由设置重启"></a>软路由设置重启</h2><p>在使用一周左右，发现网速降低比较明显，重启软路由之后正常了。因此，决定设置定时任务，让软路由每天清晨自动重启。</p><ul><li>首先在系统》启动项中，检查 <code>cron</code> 服务是启用的状态</li><li>在系统》计划任务的输入框中，添加 <code>0 4 * * * sleep 70 &amp;&amp; touch /etc/banner &amp;&amp; reboot</code>，然后提交保存。计划每天凌晨 4 点重启</li></ul><blockquote><p>上面这个定时任务，其实，直接进入 TTYD 终端界面，<code>crontab -e</code> 也可以编辑保存</p></blockquote><p>参考：</p><ul><li><a href="https://einverne.github.io/post/2017/03/auto-reboot-openwrt.html" target="_blank" rel="noopener">使用 Cron 定时重启 Openwrt 路由器</a></li></ul><h2 id="OpenWRT-设置"><a href="#OpenWRT-设置" class="headerlink" title="OpenWRT 设置"></a>OpenWRT 设置</h2><h3 id="设置主题"><a href="#设置主题" class="headerlink" title="设置主题"></a>设置主题</h3><p>进入 系统 》 系统》语言和界面，可以选择主题：</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/ymKCQh.png" alt="主题"></p><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><p>客户端：</p><ul><li><a href="https://github.com/Kr328/ClashForAndroid/releases" target="_blank" rel="noopener">Clash andriod</a></li><li><a href="https://smartyoutubetv.github.io/" target="_blank" rel="noopener">smartyoutubetv</a> 针对没有谷歌框架的设备可以安装的 Youtube 客户端</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;为了让新家的网络可以自由访问各大流媒体资源，以及方便自己开发环境中下载各种国外资源依赖软件包等，购入了 R4S 软路由设备。&lt;/p&gt;
    
    </summary>
    
      <category term="数码" scheme="https://michael728.github.io/categories/%E6%95%B0%E7%A0%81/"/>
    
    
      <category term="数码" scheme="https://michael728.github.io/tags/%E6%95%B0%E7%A0%81/"/>
    
      <category term="多媒体" scheme="https://michael728.github.io/tags/%E5%A4%9A%E5%AA%92%E4%BD%93/"/>
    
      <category term="网络" scheme="https://michael728.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch常见API</title>
    <link href="https://michael728.github.io/2021/02/16/elk-es-operation-api/"/>
    <id>https://michael728.github.io/2021/02/16/elk-es-operation-api/</id>
    <published>2021-02-16T23:10:57.000Z</published>
    <updated>2022-12-07T14:03:05.073Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/pexels-andrea-piacquadio-3769697.jpg" alt="Search"></p><h2 id="文档-CRUD"><a href="#文档-CRUD" class="headerlink" title="文档 CRUD"></a>文档 CRUD</h2><table><thead><tr><th>Index</th><th>API 示例</th></tr></thead><tbody><tr><td>Index</td><td>PUT my_index/_doc/1 <br>{“user”:”mike”,”comment”:”You know,for search”}</td></tr><tr><td>Create</td><td>PUT my_index/_create/1<br>{“user”:”mike”,”comment”:”You know,for search”}<br>POST my_index/_doc （不指定 ID，则自动生成 ID）<br>{“user”:”mike”,”comment”:”You know,for search”}</td></tr><tr><td>Read</td><td>GET my_index/_doc/1</td></tr><tr><td>Update</td><td>POST my_index/_update/1<br>{<br>  “doc”: {<br>    “user”:”mike”,<br>    “comment”: “You know, Elasticsearch”<br>  }<br>}</td></tr><tr><td>Delete</td><td>DELETE my_index/<em>doc/1</em></td></tr></tbody></table><blockquote><p>示例中，my_index 是新建的索引名</p></blockquote><ul><li>Type 名，约定都用 <code>_doc</code></li><li>Create：创建新文档，如果 ID 已经存在，则会失败</li><li>Index：如果 ID 不存在，则新建文档；如果 ID 存在，则会先删除已有的文档，在创建新的文档，版本会增加</li><li>Update：文档必须已经存在，更新只会对相应字段做增量修改</li></ul><h3 id="Index-文档"><a href="#Index-文档" class="headerlink" title="Index 文档"></a>Index 文档</h3><p>Index 和 Create 不一样的地方：</p><ul><li>index：如果文档不存在，就索引新的文档。否则现有文档会被删除，新的文档被索引。版本信息 +1</li><li>update：update 方法不会删除原来的文档，而是实现真正的数据更新，POST 方法请求体需要包含在 <code>doc</code> 中</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">POST my_index/_update/1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;doc&quot;: &#123;</span><br><span class="line">    &quot;user&quot;:&quot;mike&quot;,</span><br><span class="line">    &quot;comment&quot;: &quot;You know, Elasticsearch&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Get-文档"><a href="#Get-文档" class="headerlink" title="Get 文档"></a>Get 文档</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">GET my_index/_doc/1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;_index&quot; : &quot;my_index&quot;,</span><br><span class="line">  &quot;_type&quot; : &quot;_doc&quot;,</span><br><span class="line">  &quot;_id&quot; : &quot;1&quot;,</span><br><span class="line">  &quot;_version&quot; : 6,</span><br><span class="line">  &quot;_seq_no&quot; : 6,</span><br><span class="line">  &quot;_primary_term&quot; : 1,</span><br><span class="line">  &quot;found&quot; : true,</span><br><span class="line">  &quot;_source&quot; : &#123;</span><br><span class="line">    &quot;user&quot; : &quot;mike&quot;,</span><br><span class="line">    &quot;comment&quot; : &quot;You know, Elasticsearch&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>找到文档，返回 HTTP 200<ul><li>文档元信息<ul><li>_index/_type</li><li>版本信息，同一个 ID 的文档，及时被删除，Version 号也会不断增加</li><li>_source 中默认包含了文档的所有原始信息</li></ul></li></ul></li><li>找不到文档，返回 HTTP 404</li></ul><h2 id="Bulk-API"><a href="#Bulk-API" class="headerlink" title="Bulk API"></a>Bulk API</h2><ul><li>支持在一次 API 调用中，对不同的索引进行操作</li><li>支持四种类型操作<ul><li>Index</li><li>Create</li><li>Update</li><li>Delete</li></ul></li><li>可以在 URI 中指定 Index，也可以在请求体中进行</li><li>操作中单条操作失败，并不影响其他操作</li><li>返回结果包含每一条操作执行的结果</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">POST  _bulk</span><br><span class="line">&#123;&quot;index&quot;: &#123;&quot;_index&quot;:&quot;test&quot;,&quot;_id&quot;:&quot;1&quot;&#125;&#125;</span><br><span class="line">&#123;&quot;field1&quot;: &quot;value1&quot;&#125;</span><br><span class="line">&#123;&quot;delete&quot;: &#123;&quot;_index&quot;: &quot;test&quot;,&quot;_id&quot;:&quot;2&quot;&#125;&#125;</span><br><span class="line">&#123;&quot;create&quot;: &#123;&quot;_index&quot;:&quot;test2&quot;,&quot;_id&quot;:&quot;3&quot;&#125;&#125;</span><br><span class="line">&#123;&quot;field1&quot;:&quot;value3&quot;&#125;</span><br><span class="line">&#123;&quot;update&quot;:&#123;&quot;_index&quot;:&quot;test&quot;,&quot;_id&quot;:1&#125;&#125;</span><br><span class="line">&#123;&quot;doc&quot;:&#123;&quot;field2&quot;:&quot;value2&quot;&#125;&#125;</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>index 和 create 操作，需要在紧接着的下一行提供 source，以便添加文档或者更新</li><li>delete 不需要 source</li><li>update 需要在下一行指定 doc，指明如何更新</li></ul><p>返回体：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;took&quot; : 350,</span><br><span class="line">  &quot;errors&quot; : false,</span><br><span class="line">  &quot;items&quot; : [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;index&quot; : &#123;</span><br><span class="line">        &quot;_index&quot; : &quot;test&quot;,</span><br><span class="line">        &quot;_type&quot; : &quot;_doc&quot;,</span><br><span class="line">        &quot;_id&quot; : &quot;1&quot;,</span><br><span class="line">        &quot;_version&quot; : 1,</span><br><span class="line">        &quot;result&quot; : &quot;created&quot;,</span><br><span class="line">        &quot;_shards&quot; : &#123;</span><br><span class="line">          &quot;total&quot; : 2,</span><br><span class="line">          &quot;successful&quot; : 2,</span><br><span class="line">          &quot;failed&quot; : 0</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;_seq_no&quot; : 0,</span><br><span class="line">        &quot;_primary_term&quot; : 1,</span><br><span class="line">        &quot;status&quot; : 201</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;delete&quot; : &#123;</span><br><span class="line">        &quot;_index&quot; : &quot;test&quot;,</span><br><span class="line">        &quot;_type&quot; : &quot;_doc&quot;,</span><br><span class="line">        &quot;_id&quot; : &quot;2&quot;,</span><br><span class="line">        &quot;_version&quot; : 1,</span><br><span class="line">        &quot;result&quot; : &quot;not_found&quot;,</span><br><span class="line">        &quot;_shards&quot; : &#123;</span><br><span class="line">          &quot;total&quot; : 2,</span><br><span class="line">          &quot;successful&quot; : 2,</span><br><span class="line">          &quot;failed&quot; : 0</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;_seq_no&quot; : 1,</span><br><span class="line">        &quot;_primary_term&quot; : 1,</span><br><span class="line">        &quot;status&quot; : 404</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;create&quot; : &#123;</span><br><span class="line">        &quot;_index&quot; : &quot;test2&quot;,</span><br><span class="line">        &quot;_type&quot; : &quot;_doc&quot;,</span><br><span class="line">        &quot;_id&quot; : &quot;3&quot;,</span><br><span class="line">        &quot;_version&quot; : 1,</span><br><span class="line">        &quot;result&quot; : &quot;created&quot;,</span><br><span class="line">        &quot;_shards&quot; : &#123;</span><br><span class="line">          &quot;total&quot; : 2,</span><br><span class="line">          &quot;successful&quot; : 2,</span><br><span class="line">          &quot;failed&quot; : 0</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;_seq_no&quot; : 0,</span><br><span class="line">        &quot;_primary_term&quot; : 1,</span><br><span class="line">        &quot;status&quot; : 201</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;update&quot; : &#123;</span><br><span class="line">        &quot;_index&quot; : &quot;test&quot;,</span><br><span class="line">        &quot;_type&quot; : &quot;_doc&quot;,</span><br><span class="line">        &quot;_id&quot; : &quot;1&quot;,</span><br><span class="line">        &quot;_version&quot; : 2,</span><br><span class="line">        &quot;result&quot; : &quot;updated&quot;,</span><br><span class="line">        &quot;_shards&quot; : &#123;</span><br><span class="line">          &quot;total&quot; : 2,</span><br><span class="line">          &quot;successful&quot; : 2,</span><br><span class="line">          &quot;failed&quot; : 0</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;_seq_no&quot; : 2,</span><br><span class="line">        &quot;_primary_term&quot; : 1,</span><br><span class="line">        &quot;status&quot; : 200</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="批量读取-mget"><a href="#批量读取-mget" class="headerlink" title="批量读取 mget"></a>批量读取 mget</h2><p>批量操作，可以减少网络连接所产生的开销，提高性能。<code>mget</code> 是通过文档 ID 来查询文档信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">GET _mget</span><br><span class="line">&#123;</span><br><span class="line">  &quot;docs&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;_index&quot;: &quot;my_index&quot;,</span><br><span class="line">      &quot;_id&quot;: 1</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;_index&quot;: &quot;test&quot;,</span><br><span class="line">      &quot;_id&quot;: 1</span><br><span class="line">    &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回体：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;docs&quot; : [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;_index&quot; : &quot;my_index&quot;,</span><br><span class="line">      &quot;_type&quot; : &quot;_doc&quot;,</span><br><span class="line">      &quot;_id&quot; : &quot;1&quot;,</span><br><span class="line">      &quot;_version&quot; : 10,</span><br><span class="line">      &quot;_seq_no&quot; : 10,</span><br><span class="line">      &quot;_primary_term&quot; : 1,</span><br><span class="line">      &quot;found&quot; : true,</span><br><span class="line">      &quot;_source&quot; : &#123;</span><br><span class="line">        &quot;user&quot; : &quot;mike2&quot;,</span><br><span class="line">        &quot;comment&quot; : &quot;You know, Elasticsearch&quot;,</span><br><span class="line">        &quot;age&quot; : 28</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;_index&quot; : &quot;test&quot;,</span><br><span class="line">      &quot;_type&quot; : &quot;_doc&quot;,</span><br><span class="line">      &quot;_id&quot; : &quot;1&quot;,</span><br><span class="line">      &quot;_version&quot; : 2,</span><br><span class="line">      &quot;_seq_no&quot; : 2,</span><br><span class="line">      &quot;_primary_term&quot; : 1,</span><br><span class="line">      &quot;found&quot; : true,</span><br><span class="line">      &quot;_source&quot; : &#123;</span><br><span class="line">        &quot;field1&quot; : &quot;value1&quot;,</span><br><span class="line">        &quot;field2&quot; : &quot;value2&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="批量查询-msearch"><a href="#批量查询-msearch" class="headerlink" title="批量查询 msearch"></a>批量查询 msearch</h2><p><code>msearch</code> 是根据查询条件、搜索得到相应文档。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">POST my_index/_msearch</span><br><span class="line">&#123;&#125;</span><br><span class="line">&#123;&quot;query&quot;: &#123;&quot;match_all&quot;: &#123;&#125;&#125;, &quot;from&quot;: 0, &quot;size&quot;: 10&#125;</span><br><span class="line">&#123;&quot;index&quot;:&quot;test&quot;&#125;</span><br><span class="line">&#123;&quot;query&quot;:&#123;&quot;match_all&quot;:&#123;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><ul><li>上面的查询涉及了 2 个索引，一个是 my_index 索引，还有一个是 test 索引</li></ul><h2 id="analyzer-API"><a href="#analyzer-API" class="headerlink" title="_analyzer API"></a>_analyzer API</h2><h2 id="常见错误返回"><a href="#常见错误返回" class="headerlink" title="常见错误返回"></a>常见错误返回</h2><table><thead><tr><th>问题</th><th>原因</th></tr></thead><tbody><tr><td>无法连接</td><td>网络故障或集群挂了</td></tr><tr><td>连接无法关闭</td><td>网络故障或节点出错</td></tr><tr><td>429</td><td>集群过于繁忙</td></tr><tr><td>4xx</td><td>请求体格式有错</td></tr><tr><td>500</td><td>集群内部错误</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://gitee.com/michael_xiang/images/raw/master/uPic/pexels-andrea-piacquadio-3769697.jpg&quot; alt=&quot;Search&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;文档-CRUD&quot;
      
    
    </summary>
    
      <category term="ELK" scheme="https://michael728.github.io/categories/ELK/"/>
    
    
      <category term="ELK" scheme="https://michael728.github.io/tags/ELK/"/>
    
      <category term="Search" scheme="https://michael728.github.io/tags/Search/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch 学习笔记</title>
    <link href="https://michael728.github.io/2021/02/14/elk-es-basic-tutorial-note/"/>
    <id>https://michael728.github.io/2021/02/14/elk-es-basic-tutorial-note/</id>
    <published>2021-02-14T23:10:57.000Z</published>
    <updated>2022-12-07T14:03:05.073Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/pexels-andrea-piacquadio-3769697.jpg" alt="Search"></p><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="文档-Document"><a href="#文档-Document" class="headerlink" title="文档 Document"></a>文档 Document</h3><p>ES 是面向文档的，文档是所有课搜索数据的最小单位。例如：</p><ul><li>日志文件中的日志项</li><li>一本电影的具体信息</li></ul><p>文档会被序列化为 JSON 格式，保存在 ES 中</p><ul><li>JSON 对象由字段组成</li><li>每个字段都有对应的字段类型</li></ul><p>每个文档都有一个 Unique ID</p><ul><li>可以自定义 ID</li><li>或者 ES 自动生成</li></ul><h4 id="文档的元数据"><a href="#文档的元数据" class="headerlink" title="文档的元数据"></a>文档的元数据</h4><p>元数据，用于标准文档的相关信息</p><ul><li><code>_id</code>：一篇文档的唯一 ID</li><li><code>_index</code>：文档所属的索引名</li><li><code>_source</code>：文档的原始 JSON 数据</li><li><code>_version</code>：文档版本信息</li><li><code>_score</code>：相关性打分</li><li><code>_all</code>：整合所有字段内容到该字段，已被废除</li></ul><h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h3><p>Index 索引是文档的容器，是一类「文档」的集合</p><ul><li>Index：体现了逻辑空间的概念：每个索引都有自己的 Mapping 定义，用于定义包含的文档的字段名和字段类型</li><li>Shard：体现了物理空间的概念：索引中的数据分散在 Shard 上</li></ul><p>索引的 Mapping 与 Settings：</p><ul><li>Mapping 定义文档字段的类型</li><li>Setting 定义不同的数据分布</li></ul><h4 id="索引的不同语义"><a href="#索引的不同语义" class="headerlink" title="索引的不同语义"></a>索引的不同语义</h4><p>索引这个词在不同的上下文中是有不同的含义的。</p><blockquote><p>索引（动词）文档到 ES 的索引（名词）中。</p></blockquote><ul><li>名词：ES 集群中可以创建很多个不同的索引</li><li>动词：保存文档到 ES 的过程也叫索引（indexing），ES 中创建一个倒排索引的过程</li></ul><h3 id="Type"><a href="#Type" class="headerlink" title="Type"></a>Type</h3><ul><li>在 ES7 之前，一个 Index 可以设置成多个 Types</li><li>在 ES7 开始，一个 Index 仅可以创建一个 Type <code>_doc</code></li></ul><h3 id="关系型数据库与-ES-的比较"><a href="#关系型数据库与-ES-的比较" class="headerlink" title="关系型数据库与 ES 的比较"></a>关系型数据库与 ES 的比较</h3><p>类比：</p><table><thead><tr><th>RDMS</th><th>ES</th></tr></thead><tbody><tr><td>Table</td><td>Index</td></tr><tr><td>Row</td><td>Document</td></tr><tr><td>Column</td><td>Field</td></tr><tr><td>Schema</td><td>Mapping</td></tr><tr><td>SQL</td><td>DSL</td></tr></tbody></table><p>传统关系型数据库与 ES 的区别：</p><ul><li>ES：相关性/高性能全文检索</li><li>RDMS：事务性/Join</li></ul><h3 id="分片（Primary-Shard-amp-Replica-Shard）"><a href="#分片（Primary-Shard-amp-Replica-Shard）" class="headerlink" title="分片（Primary Shard &amp; Replica Shard）"></a>分片（Primary Shard &amp; Replica Shard）</h3><ul><li>主分片，用以解决数据水平扩展的问题。通过主分片，可以将数据分不到集群内的所有节点之上<ul><li>一个分片就是一个运行的 Lucene 的实例</li><li>主分片数在索引创建时指定，<strong>后续不允许修改</strong>，除非 Reindex</li></ul></li><li>副本，用以解决数据高可用的问题。副本分片是主分片的拷贝。当主分片丢失，集群会选择对应的副本分片称为主分片<ul><li>副本分片数是可以动态调整的</li><li>增加副本数，还可以在一定程度上提高服务的可用性（读取的吞吐 ）。</li></ul></li></ul><p>增删改属于写操作，增加副本只可能降低写入速度，但是会提高数据安全性。从写的角度看，会把请求分发到不同的副本，只要这些副本在不同的机器，机器资源又足够，那就实现了水平的扩展，提高了读取的并发性。</p><p>补充：</p><ul><li>一个 ES node 对应一个 ES 实例</li><li>一个 ES node 可以有多个 index</li><li>一个 index 可以有多个 shard</li><li>一个 shard 是一个 Lucene index（这里的 index 是 Lucene 自己概念，和 ES 中的 index 不是一个概念）</li></ul><h4 id="分片的设定"><a href="#分片的设定" class="headerlink" title="分片的设定"></a>分片的设定</h4><ul><li>对于生产环境中分片的设定，需要提前做好容量规划<ul><li>分片数设置过小<ul><li>导致后续无法实现增加节点实现水平扩展</li><li>单个分片的数据量太大，导致数据重新分配耗时</li></ul></li><li>分片数设置过大，7.0 开始，默认主分片数设置成1，解决了 over-sharding 的问题<ul><li>影响搜索结果的相关性打分，影响统计结果的准确性（因为 idf 是基于分片上的数据进行计算的，并不是基于所有分片计算，所以数据量少，容易出现不准的情况）</li><li>单个节点上过多的分片，会导致资源浪费，同时也会影响性能</li></ul></li></ul></li></ul><p>从数据量、写入速度、是写为主还是查询为主等等，考虑分片的设置：</p><ul><li>磁盘推荐 SSD</li><li>JVM 最大 Xmx 不要超过 30G</li><li>副本分片至少设置为 1</li><li>主分片单个存储不要超过 30GB，按照这个推算出分片数</li></ul><p>查看集群的健康状况：<code>GET _cluster/health</code></p><ul><li>Green：主分片与副本都正常分配</li><li>Yellow：主分片全部正常分配，有副本分片未能正常分配</li><li>Red：有主分片未能分配<ul><li>例如，当服务器磁盘容量超过 85%时，去创建了一个新的索引<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3></li></ul></li><li><a href="https://time.geekbang.org/course/detail/100030501-102667" target="_blank" rel="noopener">极客时间-</a></li></ul><h2 id="倒排索引"><a href="#倒排索引" class="headerlink" title="倒排索引"></a>倒排索引</h2><ul><li>正排索引指的是文档 ID 和文档内容的关联,索引号对应索引稳定的内容，比如：书的第一页有啥内容?第二页有啥内容?</li><li>倒排索引指的是<strong>单词到文档 ID</strong>的对应关系</li></ul><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/BTZrxe.png" alt="倒排索引"></p><h3 id="倒排索引的核心组成"><a href="#倒排索引的核心组成" class="headerlink" title="倒排索引的核心组成"></a>倒排索引的核心组成</h3><p>倒排索引包含两个部分：</p><ul><li>单词词典（Term Dictionary），记录所有文档的单词，记录单词到倒排列表的关联关系<ul><li>单词词典一般比较大，可以通过 B+ 树或哈希拉链法实现，以满足高性能的插入与查询</li></ul></li><li>倒排列表（Posting List），记录了单词对应的文档结合，由倒排索引项组成<ul><li>倒排索引项（Posting）<ul><li>文档 ID</li><li>词频 TF：该单词在文档中出现的次数，用于相关性评分</li><li>位置（Position）：单词在文档中分词的位置。用于语句搜索（pharse query）</li><li>偏移（Offset）：记录单词的开始结束位置，实现高亮显示</li></ul></li></ul></li></ul><p>一个示例，针对 Elasticsearch 倒排索引：</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/rH8GAg.png" alt="Posting List"></p><h3 id="Elasticsearch-的倒排索引"><a href="#Elasticsearch-的倒排索引" class="headerlink" title="Elasticsearch 的倒排索引"></a>Elasticsearch 的倒排索引</h3><ul><li>Elasticsearch 的 JSON 文档中的每个字段，都有自己的倒排索引</li><li>可以指定对某些字段不做索引<ul><li>优点：节省存储空间</li><li>缺点：字段无法被搜索</li></ul></li></ul><h3 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h3><ul><li><p><a href="https://www.jianshu.com/p/ed7e1ebb2fb7" target="_blank" rel="noopener">简书/Elasticsearch是如何做到快速索引的</a></p><h2 id="Analysis-与-Analyzer"><a href="#Analysis-与-Analyzer" class="headerlink" title="Analysis 与 Analyzer"></a>Analysis 与 Analyzer</h2></li><li><p>Analysis：文本分析是把全文本转换一系列单词（term/token）的过程，也叫分词</p></li><li>Analysis 是通过 Analyzer 来实现的<ul><li>可以使用 Elasticsearch 内置的分析器或者按需定制化分析器</li></ul></li><li>除了在数据写入时转换词条，匹配 Query 语句时也需要使用相同的分析器对查询语句进行分析</li></ul><h3 id="Analyzer-的组成"><a href="#Analyzer-的组成" class="headerlink" title="Analyzer 的组成"></a>Analyzer 的组成</h3><p>分词器是专门处理分词的组件，Analyzer 由三部分组成：</p><ul><li>Character Filters 针对原始文本处理，例如去除 HTML 标签</li><li>Tokenier 按照规则切分为单词</li><li>Token Filter 将切分的单词进行 二次加工，小写，删除 stopwords，增加同义词</li></ul><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/rjTlvk.png" alt="demo"></p><h3 id="ES-的内置分词器"><a href="#ES-的内置分词器" class="headerlink" title="ES 的内置分词器"></a>ES 的内置分词器</h3><p>Elasticsearch 内置了挺多<a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.x/analysis-analyzers.html" target="_blank" rel="noopener">分词器</a>的：</p><ul><li>Standard Analyzer：默认分词器，按词切分，小写处理</li><li>Simple Analyzer：按照非字母切分（符号被过滤），小写处理</li><li>Stop Anlyzer：小写处理，停用词过滤（the,a,is）</li><li>Whitespace Analyzer：按照空格切分，不转小写</li><li>Keyword Analyzer：不分词，直接将输入当做输出，★★★</li><li>Pattern Analyzer：正则表达式，默认 \W+（非字符）</li><li>Language：提供 30 多种常见语言的分词器</li><li>Customer Analyzer：自定义分词器</li></ul><h4 id="Standar-Analyzer"><a href="#Standar-Analyzer" class="headerlink" title="Standar Analyzer"></a>Standar Analyzer</h4><p>默认分词器，按词切分，小写处理</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/qxeLOF.png" alt="standard"></p><p>停用词，例如 <code>in</code> 这些，也没有去除</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;text&quot;: [&quot;2 running Quick brown-foxes dogs in the summer&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回体：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;tokens&quot; : [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;2&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 0,</span><br><span class="line">      &quot;end_offset&quot; : 1,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;NUM&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 0</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;running&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 2,</span><br><span class="line">      &quot;end_offset&quot; : 9,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;ALPHANUM&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 1</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;quick&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 10,</span><br><span class="line">      &quot;end_offset&quot; : 15,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;ALPHANUM&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 2</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;brown&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 16,</span><br><span class="line">      &quot;end_offset&quot; : 21,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;ALPHANUM&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 3</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;foxes&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 22,</span><br><span class="line">      &quot;end_offset&quot; : 27,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;ALPHANUM&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 4</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;dogs&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 28,</span><br><span class="line">      &quot;end_offset&quot; : 32,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;ALPHANUM&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 5</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;in&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 33,</span><br><span class="line">      &quot;end_offset&quot; : 35,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;ALPHANUM&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 6</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;the&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 36,</span><br><span class="line">      &quot;end_offset&quot; : 39,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;ALPHANUM&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 7</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;summer&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 40,</span><br><span class="line">      &quot;end_offset&quot; : 46,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;ALPHANUM&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 8</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="Simple-Analyzer"><a href="#Simple-Analyzer" class="headerlink" title="Simple Analyzer"></a>Simple Analyzer</h4><ul><li>按照非字母切分（例如 空格啊、中划线 - 这样的），非字母的都被去除</li><li>小写处理</li></ul><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/3K3q1d.png" alt="Simple"></p><h4 id="Stop-Analyzer"><a href="#Stop-Analyzer" class="headerlink" title="Stop Analyzer"></a>Stop Analyzer</h4><p>相比 Simpler Analyzer 多了 stop filter，会把 the/a/is 等词去除</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/EF8Fcj.png" alt="Stop"></p><h4 id="Keyword-Analyzer"><a href="#Keyword-Analyzer" class="headerlink" title="Keyword Analyzer"></a>Keyword Analyzer</h4><p>不分词，直接将输入当一个 term 输出</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/DFgKBg.png" alt="Kerword"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;keyword&quot;,</span><br><span class="line">  &quot;text&quot;: [&quot;2 running Quick brown-foxes dogs in the summer&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回体：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;tokens&quot; : [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;2 running Quick brown-foxes dogs in the summer&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 0,</span><br><span class="line">      &quot;end_offset&quot; : 46,</span><br><span class="line">      &quot;type&quot; : &quot;word&quot;,</span><br><span class="line">      &quot;position&quot; : 0</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="analyzer-API"><a href="#analyzer-API" class="headerlink" title="_analyzer API"></a>_analyzer API</h3><h4 id="直接指定-Analyzer-进行测试"><a href="#直接指定-Analyzer-进行测试" class="headerlink" title="直接指定 Analyzer 进行测试"></a>直接指定 Analyzer 进行测试</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;Mastering Elasticsearch, elasticsearch in Action&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回体：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;tokens&quot; : [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;mastering&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 0,</span><br><span class="line">      &quot;end_offset&quot; : 9,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;ALPHANUM&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 0</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;elasticsearch&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 10,</span><br><span class="line">      &quot;end_offset&quot; : 23,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;ALPHANUM&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 1</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;elasticsearch&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 25,</span><br><span class="line">      &quot;end_offset&quot; : 38,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;ALPHANUM&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 2</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;in&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 39,</span><br><span class="line">      &quot;end_offset&quot; : 41,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;ALPHANUM&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 3</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;action&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 42,</span><br><span class="line">      &quot;end_offset&quot; : 48,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;ALPHANUM&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 4</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="指定索引的字段进行测试"><a href="#指定索引的字段进行测试" class="headerlink" title="指定索引的字段进行测试"></a>指定索引的字段进行测试</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">POST my_index/_analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;field&quot;:&quot;comment&quot;,</span><br><span class="line">  &quot;text&quot;:&quot;Mastering Elasticsearch, elasticsearch in Action&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回体：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;tokens&quot; : [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;mastering&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 0,</span><br><span class="line">      &quot;end_offset&quot; : 9,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;ALPHANUM&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 0</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;elasticsearch&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 10,</span><br><span class="line">      &quot;end_offset&quot; : 23,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;ALPHANUM&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 1</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;elasticsearch&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 25,</span><br><span class="line">      &quot;end_offset&quot; : 38,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;ALPHANUM&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 2</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;in&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 39,</span><br><span class="line">      &quot;end_offset&quot; : 41,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;ALPHANUM&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 3</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;action&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 42,</span><br><span class="line">      &quot;end_offset&quot; : 48,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;ALPHANUM&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 4</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="自定义分词器进行测试"><a href="#自定义分词器进行测试" class="headerlink" title="自定义分词器进行测试"></a>自定义分词器进行测试</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST /_analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;tokenizer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;filter&quot;:[&quot;lowercase&quot;],</span><br><span class="line">  &quot;text&quot;: &quot;Mastering Elasticsearch, elasticsearch in Action&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回体：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;tokens&quot; : [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;mastering&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 0,</span><br><span class="line">      &quot;end_offset&quot; : 9,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;ALPHANUM&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 0</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;elasticsearch&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 10,</span><br><span class="line">      &quot;end_offset&quot; : 23,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;ALPHANUM&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 1</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;elasticsearch&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 25,</span><br><span class="line">      &quot;end_offset&quot; : 38,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;ALPHANUM&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 2</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;in&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 39,</span><br><span class="line">      &quot;end_offset&quot; : 41,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;ALPHANUM&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 3</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;action&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 42,</span><br><span class="line">      &quot;end_offset&quot; : 48,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;ALPHANUM&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 4</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="中文分词器"><a href="#中文分词器" class="headerlink" title="中文分词器"></a>中文分词器</h3><p>中文分词的难点：</p><ul><li>中文句子，需要切分成一个一个词（不是一个一个字）。英文中，单词有自然的空格作为分隔，而中文却没有。</li><li>一句中文，在不同的上下文，有不同的理解<ul><li>这个苹果，不大好吃/这个苹果，不大，好吃</li><li>他说的确实在理/这事的确定不下来</li></ul></li></ul><h4 id="ICU-Analyzer"><a href="#ICU-Analyzer" class="headerlink" title="ICU Analyzer"></a>ICU Analyzer</h4><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/iYkbh5.png" alt="icu"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;icu_analyzer&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;他说的的确在理&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回体：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;tokens&quot; : [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;他&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 0,</span><br><span class="line">      &quot;end_offset&quot; : 1,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 0</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;说的&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 1,</span><br><span class="line">      &quot;end_offset&quot; : 3,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 1</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;的确&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 3,</span><br><span class="line">      &quot;end_offset&quot; : 5,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 2</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;在&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 5,</span><br><span class="line">      &quot;end_offset&quot; : 6,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 3</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;理&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 6,</span><br><span class="line">      &quot;end_offset&quot; : 7,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 4</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>如果是默认的分词器呢？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;standard&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;他说的的确在理&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回体：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;tokens&quot; : [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;他&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 0,</span><br><span class="line">      &quot;end_offset&quot; : 1,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 0</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;说&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 1,</span><br><span class="line">      &quot;end_offset&quot; : 2,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 1</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;的&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 2,</span><br><span class="line">      &quot;end_offset&quot; : 3,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 2</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;的&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 3,</span><br><span class="line">      &quot;end_offset&quot; : 4,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 3</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;确&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 4,</span><br><span class="line">      &quot;end_offset&quot; : 5,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 4</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;在&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 5,</span><br><span class="line">      &quot;end_offset&quot; : 6,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 5</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;理&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 6,</span><br><span class="line">      &quot;end_offset&quot; : 7,</span><br><span class="line">      &quot;type&quot; : &quot;&lt;IDEOGRAPHIC&gt;&quot;,</span><br><span class="line">      &quot;position&quot; : 6</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="IK"><a href="#IK" class="headerlink" title="IK"></a>IK</h4><p><a href="https://github.com/medcl/elasticsearch-analysis-ik" target="_blank" rel="noopener">IK Analysis for Elasticsearch</a> 支持自定义词库，支持热更新分词词典</p><p>安装插键：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.3.2/elasticsearch-analysis-ik-7.3.2.zip</span><br></pre></td></tr></table></figure></p><p>测试：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;ik_smart&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;他说的的确在理&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>返回体：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;tokens&quot; : [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;他&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 0,</span><br><span class="line">      &quot;end_offset&quot; : 1,</span><br><span class="line">      &quot;type&quot; : &quot;CN_CHAR&quot;,</span><br><span class="line">      &quot;position&quot; : 0</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;说&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 1,</span><br><span class="line">      &quot;end_offset&quot; : 2,</span><br><span class="line">      &quot;type&quot; : &quot;CN_CHAR&quot;,</span><br><span class="line">      &quot;position&quot; : 1</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;的&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 2,</span><br><span class="line">      &quot;end_offset&quot; : 3,</span><br><span class="line">      &quot;type&quot; : &quot;CN_CHAR&quot;,</span><br><span class="line">      &quot;position&quot; : 2</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;的确&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 3,</span><br><span class="line">      &quot;end_offset&quot; : 5,</span><br><span class="line">      &quot;type&quot; : &quot;CN_WORD&quot;,</span><br><span class="line">      &quot;position&quot; : 3</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;在理&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 5,</span><br><span class="line">      &quot;end_offset&quot; : 7,</span><br><span class="line">      &quot;type&quot; : &quot;CN_WORD&quot;,</span><br><span class="line">      &quot;position&quot; : 4</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><code>ik_max_word</code> 与 <code>ik_smart</code> 的区别：</p><ul><li>ik_max_word: 会将文本做最细粒度的拆分，比如会将“中华人民共和国国歌”拆分为“中华人民共和国,中华人民,中华,华人,人民共和国,人民,人,民,共和国,共和,和,国国,国歌”，会穷尽各种可能的组合，适合 Term Query；</li><li>ik_smart: 会做最粗粒度的拆分，比如会将“中华人民共和国国歌”拆分为“中华人民共和国,国歌”，适合 Phrase Query。</li></ul><p>Term Query 与 Phrase Query 的区别：<br>Term Query，表示查询时，将查询的词分词之后，他们之间关系是 OR 的关系，例如请求为<code>GET /movies/_search?q=title:(Beautiful Mind)</code>，意思就是查询 title 中包括 Beautiful 或者 Mind<br>Phrase Query 表示查询时他们是一个整体短语，需要用引号包起来，例如请求为 <code>GET /movies/_search?q=title:&quot;Beautiful Mind&quot;</code></p><p>综上，创建索引的时候可以使用 ik_max_word，查询的时候使用 ik_smart，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 创建索引的同时指定 mapping</span><br><span class="line">PUT /ik_index</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">        &quot;properties&quot;: &#123;</span><br><span class="line">            # 字段</span><br><span class="line">            &quot;content&quot;: &#123;</span><br><span class="line">                &quot;type&quot;: &quot;text&quot;,</span><br><span class="line">                &quot;analyzer&quot;: &quot;ik_max_word&quot;,</span><br><span class="line">                &quot;search_analyzer&quot;: &quot;ik_smart&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul><li><a href="https://github.com/microbun/elasticsearch-thulac-plugin" target="_blank" rel="noopener">THULAC</a> 清华大学的一套中文分词器，<a href="http://thulac.thunlp.org/" target="_blank" rel="noopener">官网主页</a></li></ul><h2 id="Search-API"><a href="#Search-API" class="headerlink" title="Search API"></a>Search API</h2><p>ES 的搜索可以分为两大类：</p><ul><li>URI Search：在 URL 中使用查询参数</li><li>Request Body Search：使用 ES 提供的，基于 JSON 格式的更加完备的 Query Domain Specific Language（DSL）</li></ul><h3 id="指定查询的索引"><a href="#指定查询的索引" class="headerlink" title="指定查询的索引"></a>指定查询的索引</h3><table><thead><tr><th>语法</th><th>范围</th></tr></thead><tbody><tr><td>/<em>search</em></td><td>集群上所有的索引</td></tr><tr><td>/index1/_search</td><td>查询索引 index1</td></tr><tr><td>/index1,index2/_search</td><td>查询索引 index1 和index2</td></tr><tr><td>/index*/_search</td><td>查询以 index 开头的索引</td></tr></tbody></table><h3 id="URI-查询"><a href="#URI-查询" class="headerlink" title="URI 查询"></a>URI 查询</h3><ul><li>使用 <code>q</code> 指定查询字符串</li><li><code>query string syntax</code> KV 键值对</li></ul><p>示例：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -XGET "http://localhost:9200/kibana_sample_data_ecommerce/_search?q=customer_first_name:Eddie"</span><br></pre></td></tr></table></figure></p><p>说明：对索引 <code>kibana_sample_data_ecommerce</code> 中字段 <code>customer_first_name</code> 进行查询，查询的值是 Eddie</p><h3 id="Request-Body-查询"><a href="#Request-Body-查询" class="headerlink" title="Request Body 查询"></a>Request Body 查询</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">curl -XGET "http://localhost:9200/kibana_sample_data_ecommerce/_search" -H 'Content-Type:application/json' -d '</span><br><span class="line">&#123;</span><br><span class="line">  "query":&#123;</span><br><span class="line">    "match_all": &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;'</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>支持 POST 和 GET</li><li><code>_search</code> 表明执行搜索的操作</li><li>查询返回所有的文档</li></ul><h3 id="搜索-Response"><a href="#搜索-Response" class="headerlink" title="搜索 Response"></a>搜索 Response</h3><p>搜索结果如何看懂，示例：</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/0MXq8l.png" alt="response"></p><ul><li><code>took</code>：表示花费的时间</li><li><code>total</code>：表示符合条件的文档数</li><li><code>hits</code>：表示结果集，默认前 10 个文档</li><li><code>_index</code>：索引名</li><li><code>_id</code>：文档 ID</li><li><code>_score</code>：相关度评分</li><li><code>_source</code>：文档原始信息</li></ul><h3 id="搜索的相关性-Relevance"><a href="#搜索的相关性-Relevance" class="headerlink" title="搜索的相关性 Relevance"></a>搜索的相关性 Relevance</h3><p>用户关心的是搜索结果的相关性</p><ul><li>是否可以找到所有相关的内容</li><li>有多少不相关的内容被返回了</li><li>文档的打分是否合理</li><li>结合业务需求，平衡结果排名</li></ul><h4 id="衡量相关性"><a href="#衡量相关性" class="headerlink" title="衡量相关性"></a>衡量相关性</h4><p>Information Retrieval</p><ul><li>Precision 查准率：召回的结果集中，正确结果的比例</li><li>Recall 查全率：召回结果中的正确结果数占实际全部的正确结果的比例</li><li>Ranking：是否能够按照相关度进行排序？</li></ul><p>比如搜索苹果，搜索出结果一共有 8 条，其中 6 条确实是和苹果有关的，但是实际上数据集中一共有 10 个苹果相关的文档，那么，查准率就是 6/8，查全率就是 6/10。很显然，查准率和查全率我们都希望越高越好！</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/3wr4jV.png" alt="precision recall"></p><h2 id="参考-2"><a href="#参考-2" class="headerlink" title="参考"></a>参考</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://gitee.com/michael_xiang/images/raw/master/uPic/pexels-andrea-piacquadio-3769697.jpg&quot; alt=&quot;Search&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;基本概念&quot;&gt;&lt;a
      
    
    </summary>
    
      <category term="ELK" scheme="https://michael728.github.io/categories/ELK/"/>
    
    
      <category term="ELK" scheme="https://michael728.github.io/tags/ELK/"/>
    
      <category term="Search" scheme="https://michael728.github.io/tags/Search/"/>
    
  </entry>
  
  <entry>
    <title>Kibana 学习笔记</title>
    <link href="https://michael728.github.io/2021/02/14/elk-es-kibana/"/>
    <id>https://michael728.github.io/2021/02/14/elk-es-kibana/</id>
    <published>2021-02-14T23:10:57.000Z</published>
    <updated>2022-12-07T14:03:05.073Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/pexels-andrea-piacquadio-3769697.jpg" alt="Search"></p><h2 id="Kibana-安装"><a href="#Kibana-安装" class="headerlink" title="Kibana 安装"></a>Kibana 安装</h2><p>官方文档 <a href="https://www.elastic.co/guide/en/kibana/current/install.html" target="_blank" rel="noopener">Installing Kibana</a> 中提供了多种安装包对应的指导链接！本文就先选择 <a href="https://www.elastic.co/guide/en/kibana/current/targz.html" target="_blank" rel="noopener">tar 包</a>的方式安装。</p><h3 id="下载-Kibana-安装包"><a href="#下载-Kibana-安装包" class="headerlink" title="下载 Kibana 安装包"></a>下载 Kibana 安装包</h3><p>同样，Kibana 在我司镜像站上也有对应的软件包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">https://mirrors.huaweicloud.com/kibana/7.3.2/</span><br><span class="line">wget https://mirrors.huaweicloud.com/kibana/7.3.2/kibana-7.3.2-linux-x86_64.tar.gz</span><br><span class="line">wget https://mirrors.huaweicloud.com/kibana/7.3.2/kibana-7.3.2-linux-x86_64.tar.gz.sha512</span><br><span class="line">shasum -a 512 -c elasticsearch-7.3.2-linux-x86_64.tar.gz.sha512</span><br><span class="line">tar xzf kibana-7.3.2-linux-x86_64.tar.gz</span><br><span class="line">chown -R michael kibana-7.3.2-linux-x86_64</span><br><span class="line">cd kibana-7.3.2-linux-x86_64</span><br></pre></td></tr></table></figure><blockquote><p>Mac 环境，下载的安装包是 kibana-7.3.2-darwin-x86_64.tar.gz。因为我是从华为镜像站下载的，直接运行可能会提示安全告警，运行这样的命令即可去除告警 <code>xattr -d -r com.apple.quarantine kibana-7.3.2-darwin-x86_64</code></p></blockquote><h3 id="配置-Kibana"><a href="#配置-Kibana" class="headerlink" title="配置 Kibana"></a>配置 Kibana</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">egrep -v "^#|^$" config/kibana.yml # 如下内容是修改的配置</span><br><span class="line">server.port: 5601</span><br><span class="line">server.host: "0.0.0.0"</span><br><span class="line">elasticsearch.hosts: ["http://127.0.0.1:9200"]</span><br><span class="line">kibana.index: ".kibana"</span><br></pre></td></tr></table></figure><p>更多配置内容，可以阅读 <a href="https://www.elastic.co/guide/en/kibana/current/settings.html" target="_blank" rel="noopener">Configuring Kibana</a></p><p>Kibana 链接 ES 以后，会把相关的数据写入 <code>.kibana</code> 开头的 index 中。</p><h3 id="运行-Kibana"><a href="#运行-Kibana" class="headerlink" title="运行 Kibana"></a>运行 Kibana</h3><p>如下方式可以实现后台运行，避免 Ctrl+C 终止了程序：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup bin/kibana &amp;</span><br></pre></td></tr></table></figure><p>访问：<code>http://127.0.0.1:5601/</code></p><p>这时候可以看到我们之前搭建的集群节点了：</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/Dg7DMe.png" alt="Kiana-ES"></p><h2 id="Dev-Tools"><a href="#Dev-Tools" class="headerlink" title="Dev Tools"></a>Dev Tools</h2><p>Kibana Console 可以执行一些 API 请求，Help 中有相关快捷键的操作说明：</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/5GPJYG.png" alt="Dev Tools"></p><p>快捷键：</p><ul><li><code>Ctrl/Cmd + /</code> API 文档</li></ul><h2 id="Kibana-Plugins"><a href="#Kibana-Plugins" class="headerlink" title="Kibana Plugins"></a>Kibana Plugins</h2><p>安装命令和 ES 类似，提供了如下常用命令：</p><ul><li><code>bin/kibana-plugin install plugin_location</code></li><li><code>bin/kibana-plugin list</code></li></ul><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>Cerebro 可以用来管理查看 ES</p><p>除了上述安装方式之外，还有用 Docker 方式安装的，可以参考：</p><ul><li><a href="https://github.com/onebirdrocks/geektime-ELK/blob/master/part-1/2.3-%E5%9C%A8Docker%E5%AE%B9%E5%99%A8%E4%B8%AD%E8%BF%90%E8%A1%8CElasticsearch%2CKibana%E5%92%8CCerebro/7.x-docker-2-es-instances/docker-compose.yaml" target="_blank" rel="noopener">onebirdrocks/geektime-ELK</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://gitee.com/michael_xiang/images/raw/master/uPic/pexels-andrea-piacquadio-3769697.jpg&quot; alt=&quot;Search&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Kibana-安
      
    
    </summary>
    
      <category term="ELK" scheme="https://michael728.github.io/categories/ELK/"/>
    
    
      <category term="ELK" scheme="https://michael728.github.io/tags/ELK/"/>
    
      <category term="Search" scheme="https://michael728.github.io/tags/Search/"/>
    
  </entry>
  
  <entry>
    <title>安卓手机必备 APP 清单</title>
    <link href="https://michael728.github.io/2021/02/11/digital-products-mobile-app-backup/"/>
    <id>https://michael728.github.io/2021/02/11/digital-products-mobile-app-backup/</id>
    <published>2021-02-11T21:29:08.000Z</published>
    <updated>2022-12-07T14:03:05.073Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>APP 清单</p><h2 id="效率"><a href="#效率" class="headerlink" title="效率"></a>效率</h2><ul><li>滴答清单</li><li>shadowsocks</li></ul><h2 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h2><ul><li>Fasthub</li><li>多看</li><li>微信阅读</li><li>豆瓣阅读</li><li>开发者头条</li><li>Pocket</li><li>极客时间</li><li>西梅</li><li>译学馆</li></ul><h2 id="摄影"><a href="#摄影" class="headerlink" title="摄影"></a>摄影</h2><ul><li>必剪</li><li>剪映</li><li>Vue Vlog</li><li>美图秀秀</li><li>黄油</li><li>一刻相册</li><li>MIX</li></ul><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><ul><li>央视频</li><li>QQ 音乐</li><li>KMPlayer</li></ul><h2 id="办公"><a href="#办公" class="headerlink" title="办公"></a>办公</h2><ul><li>BOSS</li><li>拉钩</li><li>QQ 邮箱</li><li>扫描全能王</li><li>白描</li><li>WPS</li><li>个人所得税</li><li>QQ 浏览器</li></ul><h2 id="APP"><a href="#APP" class="headerlink" title="APP"></a>APP</h2><ul><li>酷安</li><li>应用宝</li><li>Play 商店</li><li>APKPure</li></ul><h2 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h2><ul><li>印象笔记</li></ul><h2 id="智联"><a href="#智联" class="headerlink" title="智联"></a>智联</h2><ul><li>米家</li><li>Andpods</li><li>万能遥控器</li><li>小米 WiFi</li><li>唯乐</li><li>小爱音箱</li><li>乐播投屏</li><li>精臣云打印</li></ul><h2 id="金融"><a href="#金融" class="headerlink" title="金融"></a>金融</h2><ul><li>老虎证券</li><li>货币 Pro</li><li>兴业银行</li><li>动卡空间</li><li>掌上生活</li><li>招商银行</li><li>云闪付</li></ul><h2 id="购物"><a href="#购物" class="headerlink" title="购物"></a>购物</h2><ul><li>饿了么</li><li>拼多多</li><li>严选</li><li>苏宁易购</li><li>小米有品</li><li>悦拜</li><li>一淘</li><li>京粉</li><li>当当</li><li>盒马</li><li>瑞幸</li></ul><h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><ul><li>化妆品监管</li><li>食药云搜</li><li>贝壳</li><li>透明家</li><li>浙里办</li><li>丁香医生</li><li>美柚</li><li>网上国网</li></ul><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ul><li>百度网盘</li><li>手机营业厅</li><li>手机助手</li><li>倒数日</li><li>SpeedTest</li><li>QQ同步助手</li><li>一键测速</li><li>QQ 输入法</li><li>AirDroid</li><li>身份验证器</li><li>v2rayNG</li></ul><h2 id="新闻"><a href="#新闻" class="headerlink" title="新闻"></a>新闻</h2><ul><li>学习强国</li></ul><h2 id="出行"><a href="#出行" class="headerlink" title="出行"></a>出行</h2><ul><li>高德</li><li>嘀嗒出行</li><li>哈喽出行</li><li>滴滴出行</li><li>iAdmin</li><li>花小猪</li><li>T3 出行</li><li>携程</li><li>飞猪</li><li>巴士管家</li><li>慧通</li><li>马蜂窝</li><li>穷游</li><li>航旅纵横</li><li>铁路 12306</li></ul><h2 id="社交"><a href="#社交" class="headerlink" title="社交"></a>社交</h2><ul><li>QQ</li><li>订阅号助手</li><li>Telegram</li><li>脉脉</li><li>抖音</li><li>微博</li></ul><h2 id="兴趣"><a href="#兴趣" class="headerlink" title="兴趣"></a>兴趣</h2><ul><li>西窗烛</li><li>活动性</li><li>懂车帝</li><li>汽车之家</li><li>懒饭</li><li>好好住</li></ul><p>## </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;APP 清单&lt;/p&gt;
&lt;h2 id=&quot;效率&quot;&gt;&lt;a href=&quot;#效率&quot; class=&quot;headerlink&quot; title=&quot;效率&quot;&gt;&lt;/a
      
    
    </summary>
    
      <category term="数码" scheme="https://michael728.github.io/categories/%E6%95%B0%E7%A0%81/"/>
    
    
      <category term="APP" scheme="https://michael728.github.io/tags/APP/"/>
    
  </entry>
  
  <entry>
    <title>IT程序员的装修笔记——软装篇</title>
    <link href="https://michael728.github.io/2021/01/30/life-shopping-soft-decoration/"/>
    <id>https://michael728.github.io/2021/01/30/life-shopping-soft-decoration/</id>
    <published>2021-01-30T21:29:08.000Z</published>
    <updated>2022-12-07T14:03:05.077Z</updated>
    
    <content type="html"><![CDATA[<h2 id="被子"><a href="#被子" class="headerlink" title="被子"></a>被子</h2><h3 id="被子分类"><a href="#被子分类" class="headerlink" title="被子分类"></a>被子分类</h3><ul><li>棉花被：属于植物纤维，价格适中，性价比高。如果想更保暖，往往比较笨重。</li><li>化纤被：人造纤维（聚酯纤维）填充的被子。价格比棉花还便宜，其中最受欢迎的是七孔被。松软，保温效果也不错，比起自然纤维，坚固耐用、抗皱免烫，不像羽绒被一样老爱“掉毛”</li><li>羊毛被</li><li>羽绒被：羽绒取自鹅、鸭身上的绒毛。同样的体积，羽绒被重量只有棉被的三分之一</li><li>蚕丝被：讲究人专用</li></ul><blockquote><p>棉花被导热系数比较低低，所以相对来说比较保暖。但是它升温时间慢，我们需要用自己的体温先去捂热被子。羽绒被，轻盈的羽绒被的重量仅为同体积棉被的1/3、羊毛被的1/2，使用时不会对人体造成压迫感。</p></blockquote><h3 id="品牌"><a href="#品牌" class="headerlink" title="品牌"></a>品牌</h3><ul><li>原装进口品牌：德国peter kohl，110年历史，是欧洲著名的羽绒供应厂家；德国obb royal bed 博登，成立于1900年，hanskruchen成立于1900年，billerbeck betten成立于1921年；奥地利kauffmann，日本西川</li><li>国外品牌+国内代工：澳大利亚的downia、日本的interlagos、英国downland、美国pacific coast、奥地利的SIDANDA</li><li>新国货品牌：网易严选、淘宝心选、京造，除此以外，以前和大型酒店供货的厂商也开始做自己的品牌，例如浙江三星羽绒厂的格兰贝恩</li><li>老牌国货：一类企业，在国内有比较长的历史了，集中分布在安徽、浙江羽绒生产基地。例如安徽鸿润、安徽霞珍、浙江雁皇</li><li>家纺品牌：一般都是跟江苏南通、浙江萧山、安徽等当地的企业进行OEM的定制，比如罗莱、水星、富安娜等家纺品牌</li></ul><p>补充知识：</p><ul><li>OBM：A设计，A生产，A品牌，A销售==工厂自己设计自产自销</li><li>ODM：B设计，B生产，A品牌，A销售==俗称“贴牌”，就是工厂的产品，别人的品牌</li><li>OEM：A设计，B生产，A品牌，A销售==代工，代生产，别人的技术和品牌，工厂只生产<h3 id="如何选择羽绒"><a href="#如何选择羽绒" class="headerlink" title="如何选择羽绒"></a>如何选择羽绒</h3></li></ul><p>常见羽绒的品质排序如下：白鹅绒＞灰鹅绒＞白鸭绒＞灰鸭绒。</p><p>鹅绒比鸭绒的绒多更大、蓬松度也更好。关注常规绒与大朵绒的比列，大朵绒比例高比较好。</p><blockquote><p>逆光看充绒是均匀整齐的、异色绒少、能看到朵朵绒。记住：真正的朵朵绒，在逆光下一定是点点状，而如果暗度差不多，说明里面的很充绒绒丝、碎羽毛多</p></blockquote><p>核心参数指标：</p><ul><li>清洁度：1000+，表示没有任何杂质、细菌的残留（国标是 450mm）</li><li>蓬松度：800+</li><li>含绒量：95% 含绒量就算比较高的</li><li>填充量：</li><li>面料支数：60S，支数越高，不仅意味着面料越细腻光滑，还代表内容物能更好地包裹其中</li></ul><blockquote><p>数据编辑很容易，要有相关检验检疫证明才可靠！</p></blockquote><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ul><li>羽绒和羊毛都可以干洗，但不可以在阳光下暴晒。羽绒和羊毛不需要频繁晾晒，也不可以直接让毒辣的阳光照射。因为高温会让羽毛、羊毛中的油分起变化，产生腐臭味。解决办法：可以选择通风干燥日，把杯子放在阳关直射不到的地方，晾一两个小时就能达到杀菌除湿的效果了。</li><li><p>羽绒被更不能使劲拍打，绒毛也容易断裂成细小的“羽尘”，羽绒保温性能会大幅降低。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3></li><li><p><a href="https://post.smzdm.com/p/a99v9ggo/p19/#comments" target="_blank" rel="noopener">什么值得买/2019鹅绒被值得买 篇二：双十一最全的鹅绒被清单在这里！</a></p></li><li><a href="https://post.smzdm.com/p/a83g3ve0/" target="_blank" rel="noopener">什么值得买/70款鹅绒被实力PK：2020双十一鹅绒被购买攻略</a></li><li><a href="https://post.smzdm.com/p/awxln5gk/" target="_blank" rel="noopener">什么值得买/总抱怨没有深睡眠？可能是你盖错了被子！</a></li><li><a href="https://www.zhihu.com/question/20323695" target="_blank" rel="noopener">ODM 和 OEM 分别是什么？两者有什么本质区别？</a></li><li><a href="https://post.smzdm.com/p/ar07g8xg/" target="_blank" rel="noopener">什么值得买/鹅绒被什么值得买系列 篇八：关于羽绒行业，这次干脆跟你们交个底儿……（附双十二超值好价</a><h2 id="窗帘"><a href="#窗帘" class="headerlink" title="窗帘"></a>窗帘</h2><h3 id="窗帘配色："><a href="#窗帘配色：" class="headerlink" title="窗帘配色："></a>窗帘配色：</h3></li><li>不知道选什么颜色，选纯色无脑灰肯定不会错</li><li>选择与墙面、地板相近或稍深的颜色，整体和谐统一</li><li>选择与软装点缀色相近或相似的颜色，掏钱可爱</li></ul><h3 id="窗帘配色原则："><a href="#窗帘配色原则：" class="headerlink" title="窗帘配色原则："></a>窗帘配色原则：</h3><ul><li>同色系和谐不出错，</li><li>对比色系个性吸睛，红和绿、蓝和橙、黑和白</li><li>上浅下深显层高</li></ul><ol><li>根据墙面颜色：选择和家里大面积颜色同色系的，一般都不会出错，比如选择与墙面颜色相近或稍深的配色，显得整体和谐</li><li>根据地板的颜色：选择和地板颜色相近或稍深的窗帘也都没有问题（但要特别注意，如果你家连墙面带地面都是白色的，窗帘打死也别选白色）</li><li>根据软装的颜色：选择与软装色彩相近或相似的窗帘，整体感显而易见（参考物有沙发、茶几、地毯、床品、床头柜、保证、花瓶、绿植等）</li></ol><p>“白纱＋灰帘”这个神仙组合，一层白纱窗帘，搭配任何明度的灰色布帘，几乎能和所有空间风格完美融合</p><h3 id="窗帘面料"><a href="#窗帘面料" class="headerlink" title="窗帘面料"></a>窗帘面料</h3><ul><li>纯棉布：褪色爱皱“洗一次缩一半”，求你打死别买</li><li>亚麻：窗帘全屋适用，但缩水爱皱又透光。亚麻窗帘适合选择困难星人，在窗帘款式上举棋不定的话，选亚麻一定不会出错</li><li>天鹅绒：卧室需要保护隐私或隔音，选厚一些的窗帘最佳，想低成本装出惊艳效果的，首选天鹅绒</li><li>亚麻或纱帘：客厅、阳台、书房等需要保证充足阳光的空间，选薄质的亚麻或纱帘</li><li>怕光星人追求颜值，可以选“薄帘+遮光帘”双层组合</li><li>高精密遮光布：想遮光又隔热，就买高精密遮光布</li></ul><h3 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://www.zhihu.com/question/22923832/answer/942328402" target="_blank" rel="noopener">家居搭配窗帘有什么技巧？ - 住范儿石乐天的回答 - 知乎</a></li></ul><h2 id="新房-Tips"><a href="#新房-Tips" class="headerlink" title="新房 Tips"></a>新房 Tips</h2><h3 id="验房"><a href="#验房" class="headerlink" title="验房"></a>验房</h3><p>目前国内开发商都很强势，都会要求先签字收房再验房，先验后拿需要业主自己去争取。如果只能拿房后验房的话，大家不要着急，有问题也还是开发商的责任，提醒大家在拿房当天物业给你们的房屋确认书签字栏里写一句话：“以本人找的第三方检测公司出具的验房报告为准，房屋有待维修。”后期如果验出大问题，也可以起诉索赔。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;被子&quot;&gt;&lt;a href=&quot;#被子&quot; class=&quot;headerlink&quot; title=&quot;被子&quot;&gt;&lt;/a&gt;被子&lt;/h2&gt;&lt;h3 id=&quot;被子分类&quot;&gt;&lt;a href=&quot;#被子分类&quot; class=&quot;headerlink&quot; title=&quot;被子分类&quot;&gt;&lt;/a&gt;被子分类&lt;/h
      
    
    </summary>
    
      <category term="Life" scheme="https://michael728.github.io/categories/Life/"/>
    
    
      <category term="装修" scheme="https://michael728.github.io/tags/%E8%A3%85%E4%BF%AE/"/>
    
      <category term="购物" scheme="https://michael728.github.io/tags/%E8%B4%AD%E7%89%A9/"/>
    
      <category term="软装" scheme="https://michael728.github.io/tags/%E8%BD%AF%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>IT程序员的装修笔记——衣柜定制</title>
    <link href="https://michael728.github.io/2020/10/16/life-shoppinmg-closet/"/>
    <id>https://michael728.github.io/2020/10/16/life-shoppinmg-closet/</id>
    <published>2020-10-16T21:29:08.000Z</published>
    <updated>2022-12-07T14:03:05.077Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/pexels-visually-us-1648839.jpg" alt="us"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在考虑家里衣柜定制的事情，发现这个行业真不像买电器那么容易……商家给板材门取的名字真是五花八门，比如生态板、无醛板、禾香板、康纯板、爱格板等等，听着一个比一个高大上！</p><p>经过查阅各种文档、帖子、视频，将了解到的内容做个笔记，方便更多的业主熟悉一下这行业的基本情况，避免踩坑。</p><a id="more"></a><h2 id="环保标准"><a href="#环保标准" class="headerlink" title="环保标准"></a>环保标准</h2><p>先来了解一下板材的环保标准：</p><ul><li>E0：目前国标只对强化复合地板有 E0 级的评定标准，其他木制品只有 E1 和 E2 两个标准</li><li>E1：国标用于室内的标准是 E1 级（0.124mg/m3）</li></ul><blockquote><p>商家宣传里的 E0 级一直是市场炒作并未写进国家标准的。2017年，中国发布《室内装饰装修材料人造板及其制品中甲醛释放限量》（GB18580——2017）中国家标准中无 E0 级标准。因此提个醒，如果最终签合同时，记得要明确是国标 E1。</p></blockquote><p>GB18580——2017 标准链接：<a href="http://www.jianbiaoku.com/webarbs/book/11724/3216471.shtml" target="_blank" rel="noopener">http://www.jianbiaoku.com/webarbs/book/11724/3216471.shtml</a></p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/1EUP6m.png" alt="要求截图"></p><p>补充：所谓 F4 星标准，其实就是日本的 <code>F☆☆☆☆</code> 认证标准。F4 星源于日本农林省的法律法规，是日本国土交通部颁发的证书，它是日本标准环保最高的健康等级，更被认为是国际上最健康的环保标准。如果按照平时的 E1、E0 级标准来看的话，那么 F3 星相当于国家 E0 级标准，建议限制使用面积，F4 星则远高于 F3 星，在使用面积上<strong>无限制</strong>。</p><p>参考：</p><ul><li>百度百科：<a href="https://baike.baidu.com/item/F4%E6%98%9F%E6%A0%87%E5%87%86" target="_blank" rel="noopener">https://baike.baidu.com/item/F4%E6%98%9F%E6%A0%87%E5%87%86</a></li></ul><h2 id="板材介绍"><a href="#板材介绍" class="headerlink" title="板材介绍"></a>板材介绍</h2><p>关于板材的讨论众说纷纭：</p><ul><li>有人对颗粒板一棒子打死，认为它肯定没有常见的多层板、杉木芯板环保……</li><li>有人就认为大品牌用的颗粒板（比如禾香板、康纯板）就一定比多层板更好……</li></ul><p>其实，个人觉得上面那些看法都太绝对！抛开<strong>基材品牌、封边工艺、贴面工艺</strong>直接就否定其他板材类型的做法，要么就是动机不纯、要么就是井底之蛙~</p><p>现实生活中最常见的是，在不靠谱的渠道，消费者花了 E1 板材的价格，实际拿到的是 E2 级别的产品。</p><p>经过阅贴无数，总结一句话：只要确保是可靠品牌的板子，商家可信，封边、贴面工艺先进，合同里明确符合国标 E1 标准，那么，质量都不会差到哪里去！</p><p>先说重点：</p><ul><li>家具的核心不仅仅不在板材，五金也非常重要！</li><li>封边和贴面的工艺水平也不能忽视！</li></ul><h3 id="术语"><a href="#术语" class="headerlink" title="术语"></a>术语</h3><p>介绍板材种类之前，先熟悉一下相关名词：</p><ul><li>素板/板芯：一般指从板材供应商直接拿到的基材，没有进行封边、贴面等处理</li><li>贴面：板式家具的贴面主要以贴纸皮、贴木皮、烤漆、水晶板、防火板、模压板为主<ul><li>三聚氰胺纸：色彩丰富，经过了三聚氰胺树脂浸泡，它使得家具板材不易变形、耐腐蚀。缺点是只有平面造型，做不了凹凸效果</li><li>实木贴面：将天然木皮粘在基材的饰面板上，看起来像是实木家具。缺点是不易清洗，过于潮湿易变质</li><li>烤漆饰面：光泽好、防水性好、抗污能力强，易于造型。缺点是怕磕磕碰碰</li><li>防火板饰面：表面色彩丰富、方便加工，保温隔热，缺点是门板为平板，做不了凹凸造型</li><li>水晶板饰面：现代感强烈，其实是 PVC 透明软板，表面贴了游记玻璃板（类似常说的亚克力），成型后的板表面高光、亮丽透明，缺点是不耐磨、容易留下划痕、热胀冷缩易变形</li><li>模压板饰面：模压板表面有一定造型，可加工成各种形状，有高光和哑光两种选择，缺点是价格较贵，以进口品牌为主</li></ul></li><li>封边：无起鼓无开裂。封边不好的有明显的交接线，不整齐。<strong>封边工艺是检验一个品牌做工好坏的细节点。</strong>激光封边是目前一种主流的高水准封边工艺</li></ul><p>参考：</p><ul><li>鲁班园/六大家具贴面材料：<a href="http://www.lubanyuan.cn/jishu/tmfm/3138.html" target="_blank" rel="noopener">http://www.lubanyuan.cn/jishu/tmfm/3138.html</a></li><li>一兜糖/超详细橱柜选购攻略：<a href="http://www.yidoutang.com/guide-83034.html" target="_blank" rel="noopener">http://www.yidoutang.com/guide-83034.html</a></li></ul><blockquote><p>接下来，是我从网上找到的一些关于各类板材的介绍。可能有些描述也不太精确，仅供参考。</p></blockquote><h3 id="密度板"><a href="#密度板" class="headerlink" title="密度板"></a>密度板</h3><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/lYS3oZ.png" alt="密度板"></p><ul><li>材料：以木质纤维或其他植物纤维为原料、加热、加压压制</li><li>优点：<ul><li>结构均匀、性能稳定，易加工</li></ul></li><li>缺点：<ul><li><strong>密度太高，容易开裂，不适合做家具</strong></li><li>不防潮，见水容易发胀</li><li>握钉力差</li></ul></li><li>用途：一般密度板适合做室内装潢、墙板、隔板等</li></ul><h3 id="颗粒板-刨（bao）花板"><a href="#颗粒板-刨（bao）花板" class="headerlink" title="颗粒板/刨（bào）花板"></a>颗粒板/刨（bào）花板</h3><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/9BMPWe.png" alt="颗粒板"></p><ul><li>材料：由木材或其他木质纤维材料制成的碎料+胶水粘剂+压力合成的人造板。</li><li>优点：<ul><li>没有虫眼</li><li>稳定性好、材质均匀</li><li>防潮性能高于生态板</li><li>握钉力强</li><li>质轻</li></ul></li><li>缺点：<ul><li>环保性能比不过多层板（比较的是旧工艺的颗粒板，不绝对）</li></ul></li></ul><p>颗粒板也叫做刨花板。刨花板交叉错落结构，各方向力基本相同，尺寸稳定，厚度大，升级后的 OSB 工艺，甲醛释放更低。现在较火的 OSB 欧松板就是改进后的刨花板。</p><blockquote><p>欧松板就是大片大片的刨花，所谓的定向刨花板，加的 MDI 胶也更加环保</p></blockquote><h3 id="爱格板"><a href="#爱格板" class="headerlink" title="爱格板"></a>爱格板</h3><p>爱格英文名叫 EGGER，是一家创建于 1961 年的奥地利企业。爱格板不是一种特殊的板材，它就是三聚氰胺刨花板！主要是因为它的环保性比较好，在国内才比较有名，称他们的板材为「爱格板」。</p><p>因为有名，所以模仿者众多！消费者花了爱格板的价格，不一定拿到的就是真的爱格板，需要仔细筛选、甄别！希望遇到的商家是一位有良心的商家，而不是只顾赚钱、不顾消费者家庭健康的无良商家。</p><p>W980 在爱格板里的存在更类似于柜体专用，<strong>是爱格板里唯一一个不是激光封边的色号</strong>，一般都会用来做柜体，非要做柜门也可以，但是可能效果没有那么好。W1000 就是很标准的门板，和 U702 等色号一样，大部分人用来做门板。</p><p>下面介绍一下如何查看爱格正规的授权商家：<br>1.登录爱格官网，查看哪些是授权经销商 <a href="https://www.egger.com/shop/zh_MO/about-us/sources-of-supply：" target="_blank" rel="noopener">https://www.egger.com/shop/zh_MO/about-us/sources-of-supply：</a></p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/3bKJz3.png" alt="经销商列表"></p><p>2.访问对应经销商的官网，查看授权客户 <a href="http://www.vigour.net.cn/index.php?c=article&amp;a=type&amp;tid=101：" target="_blank" rel="noopener">http://www.vigour.net.cn/index.php?c=article&amp;a=type&amp;tid=101：</a></p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/ExSpqz.png" alt="授权客户"></p><blockquote><p>看到群主联系的爱格板厂家的  LOGO 了，可以确认他就是一个正规的爱格板授权方。</p></blockquote><h3 id="胶合板"><a href="#胶合板" class="headerlink" title="胶合板"></a>胶合板</h3><p>胶合板是一个<strong>统称</strong>，它有如下常见的几种板材种类。</p><h4 id="大芯板-细木工板"><a href="#大芯板-细木工板" class="headerlink" title="大芯板/细木工板"></a>大芯板/细木工板</h4><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/M0Z2Jk.png" alt="大芯板"></p><ul><li>材料：中间基材（板芯材）为拼接实木（如杉木、杨木等）组成，表面是三聚氰胺贴面</li><li>优点：<ul><li>环保较好，因为生产使用的是杉木等密度较低的实木，加工过程用到胶水较少</li><li>防潮、耐高温</li><li>性价比高</li></ul></li><li>缺点：<ul><li>握钉力不太好</li><li>变形系数大</li></ul></li></ul><h4 id="多层板"><a href="#多层板" class="headerlink" title="多层板"></a>多层板</h4><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/9ZHgPN.png" alt="多层板"></p><ul><li>材料：多层实木加热、加压粘合，表面以实木贴皮等工序制作而成</li><li>优点：<ul><li>环保性能高于颗粒板，低于生态板</li><li>变形小、强度大、结构稳定性好</li><li>握钉力高于颗粒板和生态板</li></ul></li><li>缺点：<ul><li>价格比颗粒板贵</li></ul></li></ul><p>行业背景：</p><ul><li>胶合板九成以上用脲醛树脂，用酚醛树脂是安全，但是贵啊！</li></ul><h4 id="生态板-免漆板"><a href="#生态板-免漆板" class="headerlink" title="生态板/免漆板"></a>生态板/免漆板</h4><p>生态板其实就是饰面板，也叫免漆板，是将带有不同颜色或纹理的纸放入三聚氰胺树脂胶粘剂中浸泡，然后干燥到一定固化程度再贴在人造板材（细木工、刨花板、颗粒板）表面装饰的装饰面板。细木工板表层为树皮（装饰面板）。</p><blockquote><p>在毒奶粉事件中三聚氰胺出名了，但它在板材里其实是很成熟的工艺，不要被它吓退</p></blockquote><p>然而，我们去市场上去买的生态板大多是指大芯板贴三聚氰胺的板，其内芯是用杉木条平铺两面各贴一层薄板而成，板的质量好坏在于杉木条铺的是否密实，两面薄板的材质和厚度。</p><p>为什么市场上买的生态板主要是这种呢？因为只有这种板才适合家装现场木工使用，木工现场使用的大多是小圆盘锯，只有这种板才能锯的动，不会有锯齿痕，不会有大的崩边，像多层板是小锯很难锯动根本锯不直的，颗粒板又会崩边很厉害，密度板是不能用来做柜体的。</p><h3 id="实木指接板"><a href="#实木指接板" class="headerlink" title="实木指接板"></a>实木指接板</h3><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/fdiTgR.png" alt="指接板"></p><h3 id="胶水"><a href="#胶水" class="headerlink" title="胶水"></a>胶水</h3><p>常见的如脲醛树脂、酚醛、三聚氰胺—甲醛胶粘剂等都是含有可游离的甲醛。还有一种胶黏剂原材料，叫异氰酸酯，英文名 MDI。它与前面说过的脲醛树脂相比，最大的优点就是没有游离甲醛，而且高温下也不会产生甲醛；缺点就是比较贵。</p><p>万华集团是中国唯一拥有 MDI 生产技术与能力的企业。他们官网是有提供合作品牌的列表的，可以访问查询：</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/LlRaA7.png" alt="品牌客户"></p><ul><li>万华官网：<a href="https://www.whchem.com/" target="_blank" rel="noopener">https://www.whchem.com/</a></li><li>万华禾香板官网：<a href="http://www.whstby.cn/customer/?page=7" target="_blank" rel="noopener">http://www.whstby.cn/customer/?page=7</a></li></ul><h3 id="板材供应商"><a href="#板材供应商" class="headerlink" title="板材供应商"></a>板材供应商</h3><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/ONwh92.png" alt="标准起草单位"></p><p>看了 <a href="http://www.jianbiaoku.com/webarbs/book/11724/3216471.shtml" target="_blank" rel="noopener">GB18580——2017 标准</a>的文件，发现了这个起草单位列表，我看觉得这应该都是行业龙头吧，应该都是比较可靠的品牌了！</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://www.xiaohongshu.com/discovery/item/5f54b3ab0000000001003fdb?source=question" target="_blank" rel="noopener">小红书/为大家介绍一下衣柜通用的四种板材如下</a></li><li><a href="https://www.zhihu.com/question/50623779" target="_blank" rel="noopener">知乎/实木颗粒板与多层实木板做柜体如何选择？</a></li><li><a href="http://jiaju.leju.com/shiliu/6642613467230831993.shtml" target="_blank" rel="noopener">石榴家/实木板？颗粒板？生态板？眼花缭乱分不清？看完选家具有谱了</a></li></ul><h2 id="五金"><a href="#五金" class="headerlink" title="五金"></a>五金</h2><p>五金是个值得关注的地方，每天开合柜门等，如果阻尼有问题、生锈、变形等，都会影响使用体验！</p><h3 id="五金小件"><a href="#五金小件" class="headerlink" title="五金小件"></a>五金小件</h3><ul><li>滑轨</li><li>铰链 </li><li>轨道</li><li>拉手</li></ul><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/T7NAwh.png" alt="铰链"></p><h3 id="五金品牌"><a href="#五金品牌" class="headerlink" title="五金品牌"></a>五金品牌</h3><ul><li>海蒂诗/Hettich：德国品牌，官网 <a href="https://web.hettich.com/zh-cn/%E4%B8%BB%E9%A1%B5.jsp" target="_blank" rel="noopener">https://web.hettich.com/zh-cn/%E4%B8%BB%E9%A1%B5.jsp</a></li><li>百隆/Blum：奥地利品牌，官网 <a href="https://www.blum.com/cn/zh/" target="_blank" rel="noopener">https://www.blum.com/cn/zh/</a></li><li>顶固：广东，<a href="https://www.dinggu.net/" target="_blank" rel="noopener">https://www.dinggu.net/</a></li><li>东泰 DTC</li><li>固特：广东</li><li>斯力高：广州</li></ul><blockquote><p>市面上很多百隆铰链用的都是山寨的阻尼器，需要谨防商家使用山寨货！！！</p></blockquote><h3 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h3><ul><li>国产铰链的固定位常见是 4 个螺丝位，而进口的则是 2 个（因为国外常见颗粒板，握钉力强，而国内常用多层板、大芯板等，因此要多用几个螺丝位）</li><li>重量也是评价铰链好坏的一个细节</li></ul><h3 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h3><ul><li>什么值得买/铰链都不懂，还瞎选啥家具：<a href="https://post.smzdm.com/p/a83dm9l0/" target="_blank" rel="noopener">https://post.smzdm.com/p/a83dm9l0/</a></li></ul><h2 id="合同签署注意事项"><a href="#合同签署注意事项" class="headerlink" title="合同签署注意事项"></a>合同签署注意事项</h2><ul><li>环保等级签署在合同里</li><li>板材用料、五金品牌，明确签署在合同里</li><li>比如明确注明「材料品牌、环保等级符合合同说明，假一赔十」</li></ul><h2 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h2><p>虽然各花入各眼，但是向优秀的设计学习是有效提升审美的途径。</p><h3 id="设计避免踩坑"><a href="#设计避免踩坑" class="headerlink" title="设计避免踩坑"></a>设计避免踩坑</h3><p>定制衣柜我们要避免如下的设计：</p><p>1.框门不同色</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/YBCBjE.png" alt="框门不同色"></p><p>2.门板线条错缝</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/GkkTmk.png" alt="错缝"></p><p>3.白色木纹：要么选纯白色、要么选原木色</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/Sv0wlM.png" alt="白色木纹"></p><p>4.有花纹樱花、有腰线装饰带</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/aw7v4n.png" alt="腰线"></p><p>建议：定制衣柜越低调越好，选择纯白色、纯平门板，百搭。柜子低调，家具高调~</p><p>参考：</p><ul><li><a href="https://mp.weixin.qq.com/s/Zd2KGKfikuTu3X-KidMfYQ" target="_blank" rel="noopener">住范儿/定制柜这6种设计，劝你千万不要做！</a></li></ul><h2 id="一言"><a href="#一言" class="headerlink" title="一言"></a>一言</h2><p>在做笔记的同时发现一些品牌的官网就很与时俱进，比如爱格、百隆、海蒂诗、顶固、兔宝宝，他们官网都启用了 HTTPS 协议，而大多数品牌的官网则还是老旧的 HTTP 协议，比如知名的千年舟……当然，并不是他官网没有与时俱进，就代表它产品就不好。只是想说，细节决定成败，用心维护官网，让我觉得更放心！</p><blockquote><p>最后采用了爱格的板材，一是他们官网确实很可靠，各级经销商都能查到，二是他们板材的口碑确实都挺好~</p></blockquote><p>衣柜定制篇就总结到这儿啦，祝愿小伙伴们都能装修不踩坑！Peace~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://gitee.com/michael_xiang/images/raw/master/uPic/pexels-visually-us-1648839.jpg&quot; alt=&quot;us&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近在考虑家里衣柜定制的事情，发现这个行业真不像买电器那么容易……商家给板材门取的名字真是五花八门，比如生态板、无醛板、禾香板、康纯板、爱格板等等，听着一个比一个高大上！&lt;/p&gt;
&lt;p&gt;经过查阅各种文档、帖子、视频，将了解到的内容做个笔记，方便更多的业主熟悉一下这行业的基本情况，避免踩坑。&lt;/p&gt;
    
    </summary>
    
      <category term="Life" scheme="https://michael728.github.io/categories/Life/"/>
    
    
      <category term="装修" scheme="https://michael728.github.io/tags/%E8%A3%85%E4%BF%AE/"/>
    
  </entry>
  
  <entry>
    <title>【转】程序员如何把控自己的职业</title>
    <link href="https://michael728.github.io/2020/10/08/life-cook-tools/"/>
    <id>https://michael728.github.io/2020/10/08/life-cook-tools/</id>
    <published>2020-10-08T13:55:08.000Z</published>
    <updated>2022-12-07T14:03:05.077Z</updated>
    
    <content type="html"><![CDATA[<h2 id="炒锅"><a href="#炒锅" class="headerlink" title="炒锅"></a>炒锅</h2><p><a href="https://www.bilibili.com/video/BV1zW411s7ty" target="_blank" rel="noopener">B站/【小高姐】炒锅选购-3 铸铁锅 碳钢锅 中式炒锅 铁锅也可以无油煎鸡蛋</a> 这个视频中介绍了常见铁锅的选择，简要笔记：</p><ul><li>铸铁炒锅（生铁）：一般厚度比较厚，适合煎的烹饪方式</li><li>碳钢炒锅（熟铁）：贴皮薄，适合中式爆炒的方式</li></ul><p>因此，决定先选购一款熟铁炒锅，在以下品牌选购：</p><ul><li>陈枝记</li><li>苏泊尔</li><li>珍珠生活</li></ul><p>鉴于以前家里用的铁锅不是知名品牌，也依旧好用，选了性价比高的陈枝记的熟铁炒锅。</p><p>铁锅的开锅及保养：</p><ul><li><a href="https://www.bilibili.com/video/BV1wW411u7vX" target="_blank" rel="noopener">【小高姐】铁锅翻新与开锅 介绍一个秘密武器 解决你的厨房烦恼</a></li></ul><p>其实，今后的铁锅使用过程，关键的过程是洗完铁锅要用厨房纸擦干锅的表面，不留水分，因为由高中化学可以知道，铁+水+氧气，就会发生化学反应的。</p><p>铁锅炒菜、煎蛋🍳怎么做到不粘锅呢？</p><ul><li><a href="https://www.bilibili.com/video/BV1MK411T7rH/?spm_id_from=333.788.recommend_more_video.0" target="_blank" rel="noopener">科学防粘锅（上）炒什么都不粘</a></li><li><a href="https://www.bilibili.com/video/BV1Kt4y1q7pm" target="_blank" rel="noopener">科学防粘锅（下）不锈钢锅、不粘锅</a></li></ul><p>简要笔记就是：</p><ul><li>热锅到冒烟，高温下的铁锅，它的内部空隙已经打开</li><li>倒油滑锅，油脂将填满铁锅内部空隙，在铁锅表面形成一层膜</li><li>如果需要低温烹饪，则将滑锅的热油倒出，重新导入冷油，否则，无需倒出滑锅的热油</li></ul><blockquote><p>上面的方法对于不粘锅不适用，因为不粘锅本身有特氟龙的隔离层起到不沾的作用。此外，不粘锅不能高温干烧，因为不沾涂层在高温下会散发有害物质。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;炒锅&quot;&gt;&lt;a href=&quot;#炒锅&quot; class=&quot;headerlink&quot; title=&quot;炒锅&quot;&gt;&lt;/a&gt;炒锅&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1zW411s7ty&quot; target=&quot;_blank&quot; 
      
    
    </summary>
    
      <category term="思考" scheme="https://michael728.github.io/categories/%E6%80%9D%E8%80%83/"/>
    
    
      <category term="思考" scheme="https://michael728.github.io/tags/%E6%80%9D%E8%80%83/"/>
    
      <category term="软技能" scheme="https://michael728.github.io/tags/%E8%BD%AF%E6%8A%80%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>杭州民生信息相关笔记</title>
    <link href="https://michael728.github.io/2020/10/08/life-info-navigate/"/>
    <id>https://michael728.github.io/2020/10/08/life-info-navigate/</id>
    <published>2020-10-08T13:55:08.000Z</published>
    <updated>2022-12-07T14:03:05.077Z</updated>
    
    <content type="html"><![CDATA[<h2 id="教育"><a href="#教育" class="headerlink" title="教育"></a>教育</h2><h3 id="幼儿园"><a href="#幼儿园" class="headerlink" title="幼儿园"></a>幼儿园</h3><p>杭州省一级幼儿园名单信息，最官方的查询网站还是 <a href="http://search.zj.gov.cn/jrobotfront/search.do?cateid=375&amp;checkError=1&amp;eq=&amp;fbjg=&amp;isContains=1&amp;jgq=&amp;p=1&amp;pg=&amp;q=%E6%B5%99%E6%B1%9F%E7%9C%81%E4%B8%80%E7%BA%A7%E5%B9%BC%E5%84%BF%E5%9B%AD&amp;searchid=&amp;sortType=1&amp;synonyms=&amp;temporaryQ=&amp;tpl=2330&amp;utm_source=pocket_mylist&amp;websiteid=330000000000007&amp;word=%E6%B5%99%E6%B1%9F%E7%9C%81%E4%B8%80%E7%BA%A7%E5%B9%BC%E5%84%BF%E5%9B%AD" target="_blank" rel="noopener">浙江省人民政府/全省政府网站信息统一搜索网站</a></p><p><a href="http://jyt.zj.gov.cn/art/2020/12/14/art_1229266336_4331077.html" target="_blank" rel="noopener">2020年浙江省一级幼儿园认定结果公示</a></p><p>可以看到，萧山区截止 2020 年，经过认定的省一级幼儿园就下面的 5 所：</p><p><img src="https://gitee.com/michael_xiang/images/raw/master/uPic/x4TABD.png" alt="萧山区"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;教育&quot;&gt;&lt;a href=&quot;#教育&quot; class=&quot;headerlink&quot; title=&quot;教育&quot;&gt;&lt;/a&gt;教育&lt;/h2&gt;&lt;h3 id=&quot;幼儿园&quot;&gt;&lt;a href=&quot;#幼儿园&quot; class=&quot;headerlink&quot; title=&quot;幼儿园&quot;&gt;&lt;/a&gt;幼儿园&lt;/h3&gt;&lt;p
      
    
    </summary>
    
      <category term="孩子" scheme="https://michael728.github.io/categories/%E5%AD%A9%E5%AD%90/"/>
    
    
      <category term="民生" scheme="https://michael728.github.io/tags/%E6%B0%91%E7%94%9F/"/>
    
      <category term="教育" scheme="https://michael728.github.io/tags/%E6%95%99%E8%82%B2/"/>
    
  </entry>
  
</feed>
